{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nconst DEFAULT_EVENTS = [\"keypress\", \"mousemove\", \"touchmove\", \"click\", \"scroll\"];\nconst DEFAULT_OPTIONS = {\n  events: DEFAULT_EVENTS,\n  initialState: true\n};\nfunction useIdle(timeout, options) {\n  const {\n    events,\n    initialState\n  } = {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n  const [idle, setIdle] = useState(initialState);\n  const timer = useRef(-1);\n  useEffect(() => {\n    const handleEvents = () => {\n      setIdle(false);\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n      timer.current = window.setTimeout(() => {\n        setIdle(true);\n      }, timeout);\n    };\n    events.forEach(event => document.addEventListener(event, handleEvents));\n    timer.current = window.setTimeout(() => {\n      setIdle(true);\n    }, timeout);\n    return () => {\n      events.forEach(event => document.removeEventListener(event, handleEvents));\n    };\n  }, [timeout]);\n  return idle;\n}\nexport { useIdle };","map":{"version":3,"names":["DEFAULT_EVENTS","DEFAULT_OPTIONS","events","initialState","useIdle","timeout","options","idle","setIdle","useState","timer","useRef","useEffect","handleEvents","current","window","clearTimeout","setTimeout","forEach","event","document","addEventListener","removeEventListener"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-idle\\use-idle.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst DEFAULT_EVENTS: (keyof DocumentEventMap)[] = [\n  'keypress',\n  'mousemove',\n  'touchmove',\n  'click',\n  'scroll',\n];\nconst DEFAULT_OPTIONS = {\n  events: DEFAULT_EVENTS,\n  initialState: true,\n};\n\nexport function useIdle(\n  timeout: number,\n  options?: Partial<{ events: (keyof DocumentEventMap)[]; initialState: boolean }>\n) {\n  const { events, initialState } = { ...DEFAULT_OPTIONS, ...options };\n  const [idle, setIdle] = useState<boolean>(initialState);\n  const timer = useRef<number>(-1);\n\n  useEffect(() => {\n    const handleEvents = () => {\n      setIdle(false);\n\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n\n      timer.current = window.setTimeout(() => {\n        setIdle(true);\n      }, timeout);\n    };\n\n    events.forEach((event) => document.addEventListener(event, handleEvents));\n\n    // Start the timer immediately instead of waiting for the first event to happen\n    timer.current = window.setTimeout(() => {\n      setIdle(true);\n    }, timeout);\n\n    return () => {\n      events.forEach((event) => document.removeEventListener(event, handleEvents));\n    };\n  }, [timeout]);\n\n  return idle;\n}\n"],"mappings":";;;AAEA,MAAMA,cAA6C,IACjD,YACA,aACA,aACA,SACA,SACF;AACA,MAAMC,eAAkB;EACtBC,MAAQ,EAAAF,cAAA;EACRG,YAAc;AAChB;AAEgB,SAAAC,QACdC,OAAA,EACAC,OACA;EACM;IAAEJ,MAAA;IAAQC;EAAa,IAAI;IAAE,GAAGF,eAAA;IAAiB,GAAGK;EAAQ;EAClE,MAAM,CAACC,IAAA,EAAMC,OAAO,IAAIC,QAAA,CAAkBN,YAAY;EAChD,MAAAO,KAAA,GAAQC,MAAA,CAAe,CAAE;EAE/BC,SAAA,CAAU,MAAM;IACd,MAAMC,YAAA,GAAeA,CAAA,KAAM;MACzBL,OAAA,CAAQ,KAAK;MAEb,IAAIE,KAAA,CAAMI,OAAS;QACVC,MAAA,CAAAC,YAAA,CAAaN,KAAA,CAAMI,OAAO;MAAA;MAG7BJ,KAAA,CAAAI,OAAA,GAAUC,MAAO,CAAAE,UAAA,CAAW,MAAM;QACtCT,OAAA,CAAQ,IAAI;MAAA,GACXH,OAAO;IACZ;IAEAH,MAAA,CAAOgB,OAAA,CAASC,KAAA,IAAUC,QAAA,CAASC,gBAAiB,CAAAF,KAAA,EAAON,YAAY,CAAC;IAGlEH,KAAA,CAAAI,OAAA,GAAUC,MAAO,CAAAE,UAAA,CAAW,MAAM;MACtCT,OAAA,CAAQ,IAAI;IAAA,GACXH,OAAO;IAEV,OAAO,MAAM;MACXH,MAAA,CAAOgB,OAAA,CAASC,KAAA,IAAUC,QAAA,CAASE,mBAAoB,CAAAH,KAAA,EAAON,YAAY,CAAC;IAC7E;EAAA,CACF,EAAG,CAACR,OAAO,CAAC;EAEL,OAAAE,IAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}