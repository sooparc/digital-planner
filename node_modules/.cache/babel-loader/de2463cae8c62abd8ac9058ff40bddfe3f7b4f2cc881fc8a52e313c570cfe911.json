{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Center.module.css.mjs';\nconst defaultProps = {};\nconst Center = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Center\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    inline,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Center\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    mod: [{\n      inline\n    }, mod],\n    ...getStyles(\"root\"),\n    ...others\n  });\n});\nCenter.classes = classes;\nCenter.displayName = \"@mantine/core/Center\";\nexport { Center };","map":{"version":3,"names":["defaultProps","Center","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","inline","mod","others","getStyles","useStyles","name","classes","jsx","Box","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Center\\Center.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Center.module.css';\n\nexport type CenterStylesNames = 'root';\n\nexport interface CenterProps extends BoxProps, StylesApiProps<CenterFactory> {\n  /** Content that should be centered vertically and horizontally */\n  children?: React.ReactNode;\n\n  /** Determines whether `inline-flex` should be used instead of `flex`, `false` by default */\n  inline?: boolean;\n}\n\nexport type CenterFactory = PolymorphicFactory<{\n  props: CenterProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CenterStylesNames;\n}>;\n\nconst defaultProps: Partial<CenterProps> = {};\n\nexport const Center = polymorphicFactory<CenterFactory>((_props, ref) => {\n  const props = useProps('Center', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, inline, mod, ...others } = props;\n\n  const getStyles = useStyles<CenterFactory>({\n    name: 'Center',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  return <Box ref={ref} mod={[{ inline }, mod]} {...getStyles('root')} {...others} />;\n});\n\nCenter.classes = classes;\nCenter.displayName = '@mantine/core/Center';\n"],"mappings":";;;;;;;;;;;;;;;;;AA4BA,MAAMA,YAAA,GAAqC,CAAC;AAErC,MAAMC,MAAS,GAAAC,kBAAA,CAAkC,CAACC,MAAA,EAAQC,GAAQ;EACvE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,QAAU,EAAAN,YAAA,EAAcG,MAAM;EAC/C;IAAEI,UAAY;IAAAC,SAAA;IAAWC,KAAO;IAAAC,MAAA;IAAQC,QAAU;IAAAC,IAAA;IAAMC,MAAQ;IAAAC,GAAA;IAAK,GAAGC;EAAW,IAAAV,KAAA;EAEzF,MAAMW,SAAA,GAAYC,SAAyB;IACzCC,IAAM;IACNb,KAAA;IACAc,OAAA;IACAX,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC;EAAA,CACD;EAED,sBAAQQ,GAAA,CAAAC,GAAA;IAAIjB,GAAU;IAAAU,GAAA,EAAK,CAAC;MAAED;IAAU,GAAAC,GAAG;IAAI,GAAGE,SAAA,CAAU,MAAM;IAAI,GAAGD;EAAQ;AACnF,CAAC;AAEDd,MAAA,CAAOkB,OAAU,GAAAA,OAAA;AACjBlB,MAAA,CAAOqB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}