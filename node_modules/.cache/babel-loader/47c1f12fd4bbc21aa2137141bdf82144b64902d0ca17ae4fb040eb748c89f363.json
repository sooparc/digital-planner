{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { clamp } from '../utils/clamp/clamp.mjs';\nfunction clampUseMovePosition(position) {\n  return {\n    x: clamp(position.x, 0, 1),\n    y: clamp(position.y, 0, 1)\n  };\n}\nfunction useMove(onChange, handlers, dir = \"ltr\") {\n  const ref = useRef(null);\n  const mounted = useRef(false);\n  const isSliding = useRef(false);\n  const frame = useRef(0);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n  useEffect(() => {\n    const node = ref.current;\n    const onScrub = ({\n      x,\n      y\n    }) => {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && node) {\n          node.style.userSelect = \"none\";\n          const rect = node.getBoundingClientRect();\n          if (rect.width && rect.height) {\n            const _x = clamp((x - rect.left) / rect.width, 0, 1);\n            onChange({\n              x: dir === \"ltr\" ? _x : 1 - _x,\n              y: clamp((y - rect.top) / rect.height, 0, 1)\n            });\n          }\n        }\n      });\n    };\n    const bindEvents = () => {\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", stopScrubbing);\n      document.addEventListener(\"touchmove\", onTouchMove);\n      document.addEventListener(\"touchend\", stopScrubbing);\n    };\n    const unbindEvents = () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", stopScrubbing);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n      document.removeEventListener(\"touchend\", stopScrubbing);\n    };\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof handlers?.onScrubStart === \"function\" && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        setActive(false);\n        unbindEvents();\n        setTimeout(() => {\n          typeof handlers?.onScrubEnd === \"function\" && handlers.onScrubEnd();\n        }, 0);\n      }\n    };\n    const onMouseDown = event => {\n      startScrubbing();\n      event.preventDefault();\n      onMouseMove(event);\n    };\n    const onMouseMove = event => onScrub({\n      x: event.clientX,\n      y: event.clientY\n    });\n    const onTouchStart = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      startScrubbing();\n      onTouchMove(event);\n    };\n    const onTouchMove = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      onScrub({\n        x: event.changedTouches[0].clientX,\n        y: event.changedTouches[0].clientY\n      });\n    };\n    node?.addEventListener(\"mousedown\", onMouseDown);\n    node?.addEventListener(\"touchstart\", onTouchStart, {\n      passive: false\n    });\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mousedown\", onMouseDown);\n        node.removeEventListener(\"touchstart\", onTouchStart);\n      }\n    };\n  }, [dir, onChange]);\n  return {\n    ref,\n    active\n  };\n}\nexport { clampUseMovePosition, useMove };","map":{"version":3,"names":["clampUseMovePosition","position","x","clamp","y","useMove","onChange","handlers","dir","ref","useRef","mounted","isSliding","frame","active","setActive","useState","useEffect","current","node","onScrub","cancelAnimationFrame","requestAnimationFrame","style","userSelect","rect","getBoundingClientRect","width","height","_x","left","top","bindEvents","document","addEventListener","onMouseMove","stopScrubbing","onTouchMove","unbindEvents","removeEventListener","startScrubbing","onScrubStart","setTimeout","onScrubEnd","onMouseDown","event","preventDefault","clientX","clientY","onTouchStart","cancelable","changedTouches","passive"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-move\\use-move.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { clamp } from '../utils';\n\nexport interface UseMovePosition {\n  x: number;\n  y: number;\n}\n\nexport function clampUseMovePosition(position: UseMovePosition) {\n  return {\n    x: clamp(position.x, 0, 1),\n    y: clamp(position.y, 0, 1),\n  };\n}\n\ninterface useMoveHandlers {\n  onScrubStart?: () => void;\n  onScrubEnd?: () => void;\n}\n\nexport function useMove<T extends HTMLElement = any>(\n  onChange: (value: UseMovePosition) => void,\n  handlers?: useMoveHandlers,\n  dir: 'ltr' | 'rtl' = 'ltr'\n) {\n  const ref = useRef<T>(null);\n  const mounted = useRef<boolean>(false);\n  const isSliding = useRef(false);\n  const frame = useRef(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  useEffect(() => {\n    const node = ref.current;\n\n    const onScrub = ({ x, y }: UseMovePosition) => {\n      cancelAnimationFrame(frame.current);\n\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && node) {\n          node.style.userSelect = 'none';\n          const rect = node.getBoundingClientRect();\n\n          if (rect.width && rect.height) {\n            const _x = clamp((x - rect.left) / rect.width, 0, 1);\n            onChange({\n              x: dir === 'ltr' ? _x : 1 - _x,\n              y: clamp((y - rect.top) / rect.height, 0, 1),\n            });\n          }\n        }\n      });\n    };\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', stopScrubbing);\n      document.addEventListener('touchmove', onTouchMove);\n      document.addEventListener('touchend', stopScrubbing);\n    };\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', stopScrubbing);\n      document.removeEventListener('touchmove', onTouchMove);\n      document.removeEventListener('touchend', stopScrubbing);\n    };\n\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof handlers?.onScrubStart === 'function' && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        setActive(false);\n        unbindEvents();\n        setTimeout(() => {\n          typeof handlers?.onScrubEnd === 'function' && handlers.onScrubEnd();\n        }, 0);\n      }\n    };\n\n    const onMouseDown = (event: MouseEvent) => {\n      startScrubbing();\n      event.preventDefault();\n      onMouseMove(event);\n    };\n\n    const onMouseMove = (event: MouseEvent) => onScrub({ x: event.clientX, y: event.clientY });\n\n    const onTouchStart = (event: TouchEvent) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      startScrubbing();\n      onTouchMove(event);\n    };\n\n    const onTouchMove = (event: TouchEvent) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      onScrub({ x: event.changedTouches[0].clientX, y: event.changedTouches[0].clientY });\n    };\n\n    node?.addEventListener('mousedown', onMouseDown);\n    node?.addEventListener('touchstart', onTouchStart, { passive: false });\n\n    return () => {\n      if (node) {\n        node.removeEventListener('mousedown', onMouseDown);\n        node.removeEventListener('touchstart', onTouchStart);\n      }\n    };\n  }, [dir, onChange]);\n\n  return { ref, active };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}