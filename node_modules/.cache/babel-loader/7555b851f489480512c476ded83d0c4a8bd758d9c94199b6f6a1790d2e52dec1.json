{"ast":null,"code":"'use client';\n\nimport { rem } from '../../../../utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nfunction spacingResolver(value, theme) {\n  if (typeof value === \"number\") {\n    return rem(value);\n  }\n  if (typeof value === \"string\") {\n    const mod = value.replace(\"-\", \"\");\n    if (!(mod in theme.spacing)) {\n      return rem(value);\n    }\n    const variable = `--mantine-spacing-${mod}`;\n    return value.startsWith(\"-\") ? `calc(var(${variable}) * -1)` : `var(${variable})`;\n  }\n  return value;\n}\nexport { spacingResolver };","map":{"version":3,"names":["spacingResolver","value","theme","rem","mod","replace","spacing","variable","startsWith"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\Box\\style-props\\resolvers\\spacing-resolver\\spacing-resolver.ts"],"sourcesContent":["import { MantineTheme } from '../../../../MantineProvider';\nimport { rem } from '../../../../utils';\n\nexport function spacingResolver(value: unknown, theme: MantineTheme) {\n  if (typeof value === 'number') {\n    return rem(value);\n  }\n\n  if (typeof value === 'string') {\n    const mod = value.replace('-', '');\n\n    if (!(mod in theme.spacing)) {\n      return rem(value);\n    }\n\n    const variable = `--mantine-spacing-${mod}`;\n    return value.startsWith('-') ? `calc(var(${variable}) * -1)` : `var(${variable})`;\n  }\n\n  return value;\n}\n"],"mappings":";;;;;;AAGgB,SAAAA,gBAAgBC,KAAA,EAAgBC,KAAqB;EAC/D,WAAOD,KAAA,KAAU,QAAU;IAC7B,OAAOE,GAAA,CAAIF,KAAK;EAAA;EAGd,WAAOA,KAAA,KAAU,QAAU;IAC7B,MAAMG,GAAM,GAAAH,KAAA,CAAMI,OAAQ,MAAK,EAAE;IAE7B,MAAED,GAAO,IAAAF,KAAA,CAAMI,OAAU;MAC3B,OAAOH,GAAA,CAAIF,KAAK;IAAA;IAGZ,MAAAM,QAAA,GAAW,qBAAqBH,GAAG;IAClC,OAAAH,KAAA,CAAMO,UAAA,CAAW,GAAG,IAAI,YAAYD,QAAQ,YAAY,OAAOA,QAAQ;EAAA;EAGzE,OAAAN,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}