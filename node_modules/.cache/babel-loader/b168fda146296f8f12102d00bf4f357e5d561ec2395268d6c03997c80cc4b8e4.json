{"ast":null,"code":"'use client';\n\nconst values = {\n  text: \"var(--mantine-font-family)\",\n  mono: \"var(--mantine-font-family-monospace)\",\n  monospace: \"var(--mantine-font-family-monospace)\",\n  heading: \"var(--mantine-font-family-headings)\",\n  headings: \"var(--mantine-font-family-headings)\"\n};\nfunction fontFamilyResolver(fontFamily) {\n  if (typeof fontFamily === \"string\" && fontFamily in values) {\n    return values[fontFamily];\n  }\n  return fontFamily;\n}\nexport { fontFamilyResolver };","map":{"version":3,"names":["values","text","mono","monospace","heading","headings","fontFamilyResolver","fontFamily"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\Box\\style-props\\resolvers\\font-family-resolver\\font-family-resolver.ts"],"sourcesContent":["const values = {\n  text: 'var(--mantine-font-family)',\n  mono: 'var(--mantine-font-family-monospace)',\n  monospace: 'var(--mantine-font-family-monospace)',\n  heading: 'var(--mantine-font-family-headings)',\n  headings: 'var(--mantine-font-family-headings)',\n};\n\nexport function fontFamilyResolver(fontFamily: unknown) {\n  if (typeof fontFamily === 'string' && fontFamily in values) {\n    return values[fontFamily as keyof typeof values];\n  }\n\n  return fontFamily;\n}\n"],"mappings":";;AAAA,MAAMA,MAAS;EACbC,IAAM;EACNC,IAAM;EACNC,SAAW;EACXC,OAAS;EACTC,QAAU;AACZ;AAEO,SAASC,mBAAmBC,UAAqB;EACtD,IAAI,OAAOA,UAAA,KAAe,QAAY,IAAAA,UAAA,IAAcP,MAAQ;IAC1D,OAAOA,MAAA,CAAOO,UAAiC;EAAA;EAG1C,OAAAA,UAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}