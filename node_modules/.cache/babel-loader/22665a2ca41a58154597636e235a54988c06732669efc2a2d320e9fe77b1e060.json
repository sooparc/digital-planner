{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables.mjs';\nimport classes from './SimpleGrid.module.css.mjs';\nconst defaultProps = {\n  cols: 1,\n  spacing: \"md\",\n  type: \"media\"\n};\nconst SimpleGrid = factory((_props, ref) => {\n  const props = useProps(\"SimpleGrid\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SimpleGrid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\") {\n    return /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(SimpleGridContainerVariables, {\n        ...props,\n        selector: `.${responsiveClassName}`\n      }), /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"container\"),\n        children: /* @__PURE__ */jsx(Box, {\n          ref,\n          ...getStyles(\"root\", {\n            className: responsiveClassName\n          }),\n          ...others\n        })\n      })]\n    });\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(SimpleGridMediaVariables, {\n      ...props,\n      selector: `.${responsiveClassName}`\n    }), /* @__PURE__ */jsx(Box, {\n      ref,\n      ...getStyles(\"root\", {\n        className: responsiveClassName\n      }),\n      ...others\n    })]\n  });\n});\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\nexport { SimpleGrid };","map":{"version":3,"names":["defaultProps","cols","spacing","type","SimpleGrid","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","verticalSpacing","others","getStyles","useStyles","name","classes","responsiveClassName","useRandomClassName","jsxs","Fragment","children","jsx","SimpleGridContainerVariables","selector","Box","SimpleGridMediaVariables","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\SimpleGrid\\SimpleGrid.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables';\nimport classes from './SimpleGrid.module.css';\n\nexport type SimpleGridStylesNames = 'root' | 'container';\n\nexport interface SimpleGridProps\n  extends BoxProps,\n    StylesApiProps<SimpleGridFactory>,\n    ElementProps<'div'> {\n  /** Number of columns, `1` by default */\n  cols?: StyleProp<number>;\n\n  /** Spacing between columns, `'md'` by default */\n  spacing?: StyleProp<MantineSpacing>;\n\n  /** Spacing between rows, `'md'` by default */\n  verticalSpacing?: StyleProp<MantineSpacing>;\n\n  /** Determines typeof of queries that are used for responsive styles, `'media'` by default */\n  type?: 'media' | 'container';\n}\n\nexport type SimpleGridFactory = Factory<{\n  props: SimpleGridProps;\n  ref: HTMLDivElement;\n  stylesNames: SimpleGridStylesNames;\n}>;\n\nconst defaultProps: Partial<SimpleGridProps> = {\n  cols: 1,\n  spacing: 'md',\n  type: 'media',\n};\n\nexport const SimpleGrid = factory<SimpleGridFactory>((_props, ref) => {\n  const props = useProps('SimpleGrid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SimpleGridFactory>({\n    name: 'SimpleGrid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  if (type === 'container') {\n    return (\n      <>\n        <SimpleGridContainerVariables {...props} selector={`.${responsiveClassName}`} />\n        <div {...getStyles('container')}>\n          <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SimpleGridMediaVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n    </>\n  );\n});\n\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAyCA,MAAMA,YAAyC;EAC7CC,IAAM;EACNC,OAAS;EACTC,IAAM;AACR;AAEO,MAAMC,UAAa,GAAAC,OAAA,CAA2B,CAACC,MAAA,EAAQC,GAAQ;EACpE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,YAAc,EAAAT,YAAA,EAAcM,MAAM;EACnD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAd,IAAA;IACAe,eAAA;IACAd,OAAA;IACAC,IAAA;IACA,GAAGc;EAAA,CACD,GAAAT,KAAA;EAEJ,MAAMU,SAAA,GAAYC,SAA6B;IAC7CC,IAAM;IACNC,OAAA;IACAb,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC;EAAA,CACD;EAED,MAAMO,mBAAA,GAAsBC,kBAAmB;EAE/C,IAAIpB,IAAA,KAAS,WAAa;IACxB,sBAEIqB,IAAA,CAAAC,QAAA;MAAAC,QAAA,kBAAAC,GAAA,CAACC,4BAAA;QAA8B,GAAGpB,KAAA;QAAOqB,QAAU,MAAIP,mBAAmB;MAAI,mBAAAK,GAAA,CAC7E,KAAK;QAAA,GAAGT,SAAA,CAAU,WAAW;QAC5BQ,QAAA,iBAAAC,GAAA,CAACG,GAAI;UAAAvB,GAAA;UAAW,GAAGW,SAAU,SAAQ;YAAEP,SAAW,EAAAW;UAAA,CAAqB,CAAI;UAAA,GAAGL;QAAA,CAAQ;MACxF;IACF;EAAA;EAIJ,sBAEIO,IAAA,CAAAC,QAAA;IAAAC,QAAA,kBAAAC,GAAA,CAACI,wBAAA;MAA0B,GAAGvB,KAAA;MAAOqB,QAAU,MAAIP,mBAAmB;IAAI,IACzE,eAAAK,GAAA,CAAAG,GAAA;MAAIvB,GAAW;MAAA,GAAGW,SAAU,SAAQ;QAAEP,SAAA,EAAWW;MAAoB,CAAC,CAAI;MAAA,GAAGL;IAAQ;EACxF;AAEJ,CAAC;AAEDb,UAAA,CAAWiB,OAAU,GAAAA,OAAA;AACrBjB,UAAA,CAAW4B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}