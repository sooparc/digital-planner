{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useClipboard } from '@mantine/hooks';\nimport 'react';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  timeout: 1e3\n};\nfunction CopyButton(props) {\n  const {\n    children,\n    timeout,\n    value,\n    ...others\n  } = useProps(\"CopyButton\", defaultProps, props);\n  const clipboard = useClipboard({\n    timeout\n  });\n  const copy = () => clipboard.copy(value);\n  return /* @__PURE__ */jsx(Fragment, {\n    children: children({\n      copy,\n      copied: clipboard.copied,\n      ...others\n    })\n  });\n}\nCopyButton.displayName = \"@mantine/core/CopyButton\";\nexport { CopyButton };","map":{"version":3,"names":["defaultProps","timeout","CopyButton","props","children","value","others","useProps","clipboard","useClipboard","copy","jsx","Fragment","copied","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\CopyButton\\CopyButton.tsx"],"sourcesContent":["import { useClipboard } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface CopyButtonProps {\n  /** Children callback, provides current status and copy function as an argument */\n  children: (payload: { copied: boolean; copy: () => void }) => React.ReactNode;\n\n  /** Value that will be copied to the clipboard when the button is clicked */\n  value: string;\n\n  /** Copied status timeout in ms, `1000` by default */\n  timeout?: number;\n}\n\nconst defaultProps: Partial<CopyButtonProps> = {\n  timeout: 1000,\n};\n\nexport function CopyButton(props: CopyButtonProps) {\n  const { children, timeout, value, ...others } = useProps('CopyButton', defaultProps, props);\n  const clipboard = useClipboard({ timeout });\n  const copy = () => clipboard.copy(value);\n  return <>{children({ copy, copied: clipboard.copied, ...others })}</>;\n}\n\nCopyButton.displayName = '@mantine/core/CopyButton';\n"],"mappings":";;;;;;;;;;;;;;AAcA,MAAMA,YAAyC;EAC7CC,OAAS;AACX;AAEO,SAASC,WAAWC,KAAwB;EAC3C;IAAEC,QAAU;IAAAH,OAAA;IAASI,KAAO;IAAA,GAAGC;EAAW,IAAAC,QAAA,CAAS,YAAc,EAAAP,YAAA,EAAcG,KAAK;EAC1F,MAAMK,SAAY,GAAAC,YAAA,CAAa;IAAER;EAAA,CAAS;EAC1C,MAAMS,IAAO,GAAAA,CAAA,KAAMF,SAAU,CAAAE,IAAA,CAAKL,KAAK;EAChC,sBAAAM,GAAA,CAAAC,QAAA;IAAGR,QAAS,EAAAA,QAAA;MAAEM,IAAM;MAAAG,MAAA,EAAQL,SAAA,CAAUK,MAAQ;MAAA,GAAGP;IAAO,CAAC;EAAE;AACpE;AAEAJ,UAAA,CAAWY,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}