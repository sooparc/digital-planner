{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nfunction useInterval(fn, interval, {\n  autoInvoke = false\n} = {}) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef(null);\n  const fnRef = useRef(null);\n  const start = () => {\n    setActive(old => {\n      if (!old && (!intervalRef.current || intervalRef.current === -1)) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current || -1);\n    intervalRef.current = -1;\n  };\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n  return {\n    start,\n    stop,\n    toggle,\n    active\n  };\n}\nexport { useInterval };","map":{"version":3,"names":["useInterval","fn","interval","autoInvoke","active","setActive","useState","intervalRef","useRef","fnRef","start","old","current","window","setInterval","stop","clearInterval","toggle","useEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-interval\\use-interval.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\ninterface UseIntervalOptions {\n  /** If set, the interval will start automatically when the component is mounted, `false` by default */\n  autoInvoke?: boolean;\n}\n\nexport function useInterval(\n  fn: () => void,\n  interval: number,\n  { autoInvoke = false }: UseIntervalOptions = {}\n) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef<number | null>(null);\n  const fnRef = useRef<() => void>(null);\n\n  const start = () => {\n    setActive((old) => {\n      if (!old && (!intervalRef.current || intervalRef.current === -1)) {\n        intervalRef.current = window.setInterval(fnRef.current!, interval);\n      }\n      return true;\n    });\n  };\n\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current || -1);\n    intervalRef.current = -1;\n  };\n\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n\n  return { start, stop, toggle, active };\n}\n"],"mappings":";;;AAOgB,SAAAA,YACdC,EAAA,EACAC,QACA;EAAEC,UAAA,GAAa;AAAM,IAAwB,EAC7C;EACA,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAAS,KAAK;EACpC,MAAAC,WAAA,GAAcC,MAAA,CAAsB,IAAI;EACxC,MAAAC,KAAA,GAAQD,MAAA,CAAmB,IAAI;EAErC,MAAME,KAAA,GAAQA,CAAA,KAAM;IAClBL,SAAA,CAAWM,GAAQ;MACjB,IAAI,CAACA,GAAQ,MAACJ,WAAA,CAAYK,OAAW,IAAAL,WAAA,CAAYK,OAAA,KAAY,CAAK;QAChEL,WAAA,CAAYK,OAAU,GAAAC,MAAA,CAAOC,WAAY,CAAAL,KAAA,CAAMG,OAAA,EAAUV,QAAQ;MAAA;MAE5D;IAAA,CACR;EACH;EAEA,MAAMa,IAAA,GAAOA,CAAA,KAAM;IACjBV,SAAA,CAAU,KAAK;IACRQ,MAAA,CAAAG,aAAA,CAAcT,WAAY,CAAAK,OAAA,IAAW,CAAE;IAC9CL,WAAA,CAAYK,OAAU;EACxB;EAEA,MAAMK,MAAA,GAASA,CAAA,KAAM;IACnB,IAAIb,MAAQ;MACLW,IAAA;IAAA,CACA;MACCL,KAAA;IAAA;EAEV;EAEAQ,SAAA,CAAU,MAAM;IACdT,KAAA,CAAMG,OAAU,GAAAX,EAAA;IAChBG,MAAA,IAAUM,KAAM;IACT,OAAAK,IAAA;EACN,IAACd,EAAI,EAAAG,MAAA,EAAQF,QAAQ,CAAC;EAEzBgB,SAAA,CAAU,MAAM;IACd,IAAIf,UAAY;MACRO,KAAA;IAAA;EAEV,GAAG,EAAE;EAEL,OAAO;IAAEA,KAAA;IAAOK,IAAM;IAAAE,MAAA;IAAQb;EAAO;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}