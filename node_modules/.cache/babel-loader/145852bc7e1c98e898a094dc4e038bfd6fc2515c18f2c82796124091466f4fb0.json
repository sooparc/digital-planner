{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useTabsContext } from '../Tabs.context.mjs';\nimport classes from '../Tabs.module.css.mjs';\nconst defaultProps = {};\nconst TabsPanel = factory((_props, ref) => {\n  const props = useProps(\"TabsPanel\", defaultProps, _props);\n  const {\n    children,\n    className,\n    value,\n    classNames,\n    styles,\n    style,\n    mod,\n    keepMounted,\n    ...others\n  } = props;\n  const ctx = useTabsContext();\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || keepMounted ? children : active ? children : null;\n  return /* @__PURE__ */jsx(Box, {\n    ...others,\n    ...ctx.getStyles(\"panel\", {\n      className,\n      classNames,\n      styles,\n      style: [style, !active ? {\n        display: \"none\"\n      } : void 0],\n      props\n    }),\n    ref,\n    mod: [{\n      orientation: ctx.orientation\n    }, mod],\n    role: \"tabpanel\",\n    id: ctx.getPanelId(value),\n    \"aria-labelledby\": ctx.getTabId(value),\n    children: content\n  });\n});\nTabsPanel.classes = classes;\nTabsPanel.displayName = \"@mantine/core/TabsPanel\";\nexport { TabsPanel };","map":{"version":3,"names":["defaultProps","TabsPanel","factory","_props","ref","props","useProps","children","className","value","classNames","styles","style","mod","keepMounted","others","ctx","useTabsContext","active","content","jsx","Box","getStyles","display","orientation","role","id","getPanelId","getTabId","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Tabs\\TabsPanel\\TabsPanel.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsPanelStylesNames = 'panel';\n\nexport interface TabsPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsPanelFactory>,\n    ElementProps<'div'> {\n  /** Panel content */\n  children: React.ReactNode;\n\n  /** If set to `true`, the content will be kept mounted, even if `keepMounted` is set `false` in the parent `Tabs` component */\n  keepMounted?: boolean;\n\n  /** Value of associated control */\n  value: string;\n}\n\nexport type TabsPanelFactory = Factory<{\n  props: TabsPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsPanelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsPanelProps> = {};\n\nexport const TabsPanel = factory<TabsPanelFactory>((_props, ref) => {\n  const props = useProps('TabsPanel', defaultProps, _props);\n  const { children, className, value, classNames, styles, style, mod, keepMounted, ...others } =\n    props;\n\n  const ctx = useTabsContext();\n\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || keepMounted ? children : active ? children : null;\n\n  return (\n    <Box\n      {...others}\n      {...ctx.getStyles('panel', {\n        className,\n        classNames,\n        styles,\n        style: [style, !active ? { display: 'none' } : undefined],\n        props,\n      })}\n      ref={ref}\n      mod={[{ orientation: ctx.orientation }, mod]}\n      role=\"tabpanel\"\n      id={ctx.getPanelId(value)}\n      aria-labelledby={ctx.getTabId(value)}\n    >\n      {content}\n    </Box>\n  );\n});\n\nTabsPanel.classes = classes;\nTabsPanel.displayName = '@mantine/core/TabsPanel';\n"],"mappings":";;;;;;;;;;;;;;;;;AAmCA,MAAMA,YAAA,GAAwC,CAAC;AAExC,MAAMC,SAAY,GAAAC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAQ;EAClE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,WAAa,EAAAN,YAAA,EAAcG,MAAM;EAClD;IAAEI,QAAU;IAAAC,SAAA;IAAWC,KAAO;IAAAC,UAAA;IAAYC,MAAQ;IAAAC,KAAA;IAAOC,GAAK;IAAAC,WAAA;IAAa,GAAGC;EAClF,IAAAV,KAAA;EAEF,MAAMW,GAAA,GAAMC,cAAe;EAErB,MAAAC,MAAA,GAASF,GAAA,CAAIP,KAAU,KAAAA,KAAA;EAC7B,MAAMU,OAAA,GAAUH,GAAI,CAAAF,WAAA,IAAeA,WAAc,GAAAP,QAAA,GAAWW,MAAA,GAASX,QAAW;EAG9E,sBAAAa,GAAA,CAACC,GAAA;IACE,GAAGN,MAAA;IACH,GAAGC,GAAI,CAAAM,SAAA,CAAU,OAAS;MACzBd,SAAA;MACAE,UAAA;MACAC,MAAA;MACAC,KAAA,EAAO,CAACA,KAAO,GAACM,MAAA,GAAS;QAAEK,OAAA,EAAS;MAAO,IAAI,KAAS;MACxDlB;IAAA,CACD;IACDD,GAAA;IACAS,GAAA,EAAK,CAAC;MAAEW,WAAA,EAAaR,GAAI,CAAAQ;IAAA,GAAeX,GAAG;IAC3CY,IAAK;IACLC,EAAA,EAAIV,GAAI,CAAAW,UAAA,CAAWlB,KAAK;IACxB,mBAAiBO,GAAI,CAAAY,QAAA,CAASnB,KAAK;IAElCF,QAAA,EAAAY;EAAA,CACH;AAEJ,CAAC;AAEDlB,SAAA,CAAU4B,OAAU,GAAAA,OAAA;AACpB5B,SAAA,CAAU6B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}