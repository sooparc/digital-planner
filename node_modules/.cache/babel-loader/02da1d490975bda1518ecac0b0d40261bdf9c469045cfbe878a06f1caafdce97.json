{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useReducedMotion } from '@mantine/hooks';\nimport 'react';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { getStyleObject } from '../../core/Box/get-style-object/get-style-object.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useCollapse } from './use-collapse.mjs';\nconst defaultProps = {\n  transitionDuration: 200,\n  transitionTimingFunction: \"ease\",\n  animateOpacity: true\n};\nconst Collapse = factory((props, ref) => {\n  const {\n    children,\n    in: opened,\n    transitionDuration,\n    transitionTimingFunction,\n    style,\n    onTransitionEnd,\n    animateOpacity,\n    ...others\n  } = useProps(\"Collapse\", defaultProps, props);\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 0 : transitionDuration;\n  const getCollapseProps = useCollapse({\n    opened,\n    transitionDuration: duration,\n    transitionTimingFunction,\n    onTransitionEnd\n  });\n  if (duration === 0) {\n    return opened ? /* @__PURE__ */jsx(Box, {\n      ...others,\n      children\n    }) : null;\n  }\n  return /* @__PURE__ */jsx(Box, {\n    ...getCollapseProps({\n      style: {\n        opacity: opened || !animateOpacity ? 1 : 0,\n        transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : \"none\",\n        ...getStyleObject(style, theme)\n      },\n      ref,\n      ...others\n    }),\n    children\n  });\n});\nCollapse.displayName = \"@mantine/core/Collapse\";\nexport { Collapse };","map":{"version":3,"names":["defaultProps","transitionDuration","transitionTimingFunction","animateOpacity","Collapse","factory","props","ref","children","in","opened","style","onTransitionEnd","others","useProps","theme","useMantineTheme","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","duration","getCollapseProps","useCollapse","jsx","Box","opacity","transition","getStyleObject","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Collapse\\Collapse.tsx"],"sourcesContent":["import { useReducedMotion } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  Factory,\n  factory,\n  getStyleObject,\n  useMantineTheme,\n  useProps,\n} from '../../core';\nimport { useCollapse } from './use-collapse';\n\nexport interface CollapseProps\n  extends BoxProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, keyof BoxProps> {\n  /** Opened state */\n  in: boolean;\n\n  /** Called each time transition ends */\n  onTransitionEnd?: () => void;\n\n  /** Transition duration in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Transition timing function, default value is `ease` */\n  transitionTimingFunction?: string;\n\n  /** Determines whether opacity should be animated, `true` by default */\n  animateOpacity?: boolean;\n}\n\nexport type CollapseFactory = Factory<{\n  props: CollapseProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<CollapseProps> = {\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  animateOpacity: true,\n};\n\nexport const Collapse = factory<CollapseFactory>((props, ref) => {\n  const {\n    children,\n    in: opened,\n    transitionDuration,\n    transitionTimingFunction,\n    style,\n    onTransitionEnd,\n    animateOpacity,\n    ...others\n  } = useProps('Collapse', defaultProps, props);\n\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 0 : transitionDuration;\n\n  const getCollapseProps = useCollapse({\n    opened,\n    transitionDuration: duration,\n    transitionTimingFunction,\n    onTransitionEnd,\n  });\n\n  if (duration === 0) {\n    return opened ? <Box {...others}>{children}</Box> : null;\n  }\n\n  return (\n    <Box\n      {...getCollapseProps({\n        style: {\n          opacity: opened || !animateOpacity ? 1 : 0,\n          transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : 'none',\n          ...getStyleObject(style, theme),\n        },\n        ref,\n        ...others,\n      })}\n    >\n      {children}\n    </Box>\n  );\n});\n\nCollapse.displayName = '@mantine/core/Collapse';\n"],"mappings":";;;;;;;;;;;;;;;;;AAoCA,MAAMA,YAAuC;EAC3CC,kBAAoB;EACpBC,wBAA0B;EAC1BC,cAAgB;AAClB;AAEO,MAAMC,QAAW,GAAAC,OAAA,CAAyB,CAACC,KAAA,EAAOC,GAAQ;EACzD;IACJC,QAAA;IACAC,EAAI,EAAAC,MAAA;IACJT,kBAAA;IACAC,wBAAA;IACAS,KAAA;IACAC,eAAA;IACAT,cAAA;IACA,GAAGU;EACD,IAAAC,QAAA,CAAS,UAAY,EAAAd,YAAA,EAAcM,KAAK;EAE5C,MAAMS,KAAA,GAAQC,eAAgB;EAC9B,MAAMC,kBAAA,GAAqBC,gBAAiB;EACtC,MAAAC,YAAA,GAAeJ,KAAM,CAAAK,oBAAA,GAAuBH,kBAAqB;EACjE,MAAAI,QAAA,GAAWF,YAAA,GAAe,CAAI,GAAAlB,kBAAA;EAEpC,MAAMqB,gBAAA,GAAmBC,WAAY;IACnCb,MAAA;IACAT,kBAAoB,EAAAoB,QAAA;IACpBnB,wBAAA;IACAU;EAAA,CACD;EAED,IAAIS,QAAA,KAAa,CAAG;IAClB,OAAOX,MAAA,GAAU,eAAAc,GAAA,CAAAC,GAAA;MAAK,GAAGZ,MAAA;MAASL;IAAS,EAAS;EAAA;EAIpD,sBAAAgB,GAAA,CAACC,GAAA;IACE,GAAGH,gBAAiB;MACnBX,KAAO;QACLe,OAAS,EAAAhB,MAAA,IAAU,CAACP,cAAA,GAAiB,CAAI;QACzCwB,UAAA,EAAYxB,cAAiB,cAAWkB,QAAQ,MAAMnB,wBAAwB,EAAK;QACnF,GAAG0B,cAAe,CAAAjB,KAAA,EAAOI,KAAK;MAChC;MACAR,GAAA;MACA,GAAGM;IAAA,CACJ;IAEAL;EAAA,CACH;AAEJ,CAAC;AAEDJ,QAAA,CAASyB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}