{"ast":null,"code":"'use client';\n\nimport { filterProps } from '../../../../utils/filter-props/filter-props.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nfunction mergeVars(vars) {\n  return vars.reduce((acc, current) => {\n    if (current) {\n      Object.keys(current).forEach(key => {\n        acc[key] = {\n          ...acc[key],\n          ...filterProps(current[key])\n        };\n      });\n    }\n    return acc;\n  }, {});\n}\nexport { mergeVars };","map":{"version":3,"names":["mergeVars","vars","reduce","acc","current","Object","keys","forEach","key","filterProps"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\styles-api\\use-styles\\get-style\\resolve-vars\\merge-vars.ts"],"sourcesContent":["import { CssVariable } from '../../../../Box';\nimport { filterProps } from '../../../../utils';\n\nexport type ResolvedVars = Partial<Record<string, Record<CssVariable, string | undefined>>>;\n\nexport function mergeVars(vars: (ResolvedVars | undefined)[]) {\n  return vars.reduce<ResolvedVars>((acc, current) => {\n    if (current) {\n      Object.keys(current).forEach((key) => {\n        acc[key] = { ...acc[key], ...filterProps(current[key]!) };\n      });\n    }\n\n    return acc;\n  }, {});\n}\n"],"mappings":";;;;;;AAKO,SAASA,UAAUC,IAAoC;EAC5D,OAAOA,IAAK,CAAAC,MAAA,CAAqB,CAACC,GAAA,EAAKC,OAAY;IACjD,IAAIA,OAAS;MACXC,MAAA,CAAOC,IAAK,CAAAF,OAAO,CAAE,CAAAG,OAAA,CAASC,GAAQ;QACpCL,GAAA,CAAIK,GAAG,IAAI;UAAE,GAAGL,GAAI,CAAAK,GAAG,CAAG;UAAA,GAAGC,WAAY,CAAAL,OAAA,CAAQI,GAAG,CAAE;QAAE;MAAA,CACzD;IAAA;IAGI,OAAAL,GAAA;EACT,GAAG,EAAE;AACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}