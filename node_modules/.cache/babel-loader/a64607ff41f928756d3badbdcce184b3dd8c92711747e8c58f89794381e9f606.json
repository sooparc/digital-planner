{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { randomId } from '../utils/random-id/random-id.mjs';\nfunction getHeadingsData(headings, getDepth, getValue) {\n  const result = [];\n  for (let i = 0; i < headings.length; i += 1) {\n    const heading = headings[i];\n    result.push({\n      depth: getDepth(heading),\n      value: getValue(heading),\n      id: heading.id || randomId(),\n      getNode: () => heading.id ? document.getElementById(heading.id) : heading\n    });\n  }\n  return result;\n}\nfunction getActiveElement(rects) {\n  if (rects.length === 0) {\n    return -1;\n  }\n  const closest = rects.reduce((acc, item, index) => {\n    if (Math.abs(acc.position) < Math.abs(item.y)) {\n      return acc;\n    }\n    return {\n      index,\n      position: item.y\n    };\n  }, {\n    index: 0,\n    position: rects[0].y\n  });\n  return closest.index;\n}\nfunction getDefaultDepth(element) {\n  return Number(element.tagName[1]);\n}\nfunction getDefaultValue(element) {\n  return element.textContent || \"\";\n}\nfunction useScrollSpy({\n  selector = \"h1, h2, h3, h4, h5, h6\",\n  getDepth = getDefaultDepth,\n  getValue = getDefaultValue\n} = {}) {\n  const [active, setActive] = useState(-1);\n  const [initialized, setInitialized] = useState(false);\n  const [data, setData] = useState([]);\n  const headingsRef = useRef([]);\n  const handleScroll = () => {\n    setActive(getActiveElement(headingsRef.current.map(d => d.getNode().getBoundingClientRect())));\n  };\n  const initialize = () => {\n    const headings = getHeadingsData(Array.from(document.querySelectorAll(selector)), getDepth, getValue);\n    headingsRef.current = headings;\n    setInitialized(true);\n    setData(headings);\n    setActive(getActiveElement(headings.map(d => d.getNode().getBoundingClientRect())));\n  };\n  useEffect(() => {\n    initialize();\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  return {\n    reinitialize: initialize,\n    active,\n    initialized,\n    data\n  };\n}\nexport { useScrollSpy };","map":{"version":3,"names":["getHeadingsData","headings","getDepth","getValue","result","i","length","heading","push","depth","value","id","randomId","getNode","document","getElementById","getActiveElement","rects","closest","reduce","acc","item","index","Math","abs","position","y","getDefaultDepth","element","Number","tagName","getDefaultValue","textContent","useScrollSpy","selector","active","setActive","useState","initialized","setInitialized","data","setData","headingsRef","useRef","handleScroll","current","map","d","getBoundingClientRect","initialize","Array","from","querySelectorAll","useEffect","window","addEventListener","removeEventListener","reinitialize"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-scroll-spy\\use-scroll-spy.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { randomId } from '../utils';\n\nfunction getHeadingsData(\n  headings: HTMLElement[],\n  getDepth: (element: HTMLElement) => number,\n  getValue: (element: HTMLElement) => string\n): UseScrollSpyHeadingData[] {\n  const result: UseScrollSpyHeadingData[] = [];\n\n  for (let i = 0; i < headings.length; i += 1) {\n    const heading = headings[i];\n    result.push({\n      depth: getDepth(heading),\n      value: getValue(heading),\n      id: heading.id || randomId(),\n      getNode: () => (heading.id ? document.getElementById(heading.id)! : heading),\n    });\n  }\n\n  return result;\n}\n\nfunction getActiveElement(rects: DOMRect[]) {\n  if (rects.length === 0) {\n    return -1;\n  }\n\n  const closest = rects.reduce(\n    (acc, item, index) => {\n      if (Math.abs(acc.position) < Math.abs(item.y)) {\n        return acc;\n      }\n\n      return {\n        index,\n        position: item.y,\n      };\n    },\n    { index: 0, position: rects[0].y }\n  );\n\n  return closest.index;\n}\n\nfunction getDefaultDepth(element: HTMLElement) {\n  return Number(element.tagName[1]);\n}\n\nfunction getDefaultValue(element: HTMLElement) {\n  return element.textContent || '';\n}\n\nexport interface UseScrollSpyHeadingData {\n  /** Heading depth, 1-6 */\n  depth: number;\n\n  /** Heading text content value */\n  value: string;\n\n  /** Heading id */\n  id: string;\n\n  /** Function to get heading node */\n  getNode: () => HTMLElement;\n}\n\nexport interface UseScrollSpyOptions {\n  /** Selector to get headings, `'h1, h2, h3, h4, h5, h6'` by default */\n  selector?: string;\n\n  /** A function to retrieve depth of heading, by default depth is calculated based on tag name */\n  getDepth?: (element: HTMLElement) => number;\n\n  /** A function to retrieve heading value, by default `element.textContent` is used */\n  getValue?: (element: HTMLElement) => string;\n}\n\nexport interface UseScrollSpyReturnType {\n  /** Index of the active heading in the `data` array */\n  active: number;\n\n  /** Headings data. If not initialize, data is represented by an empty array. */\n  data: UseScrollSpyHeadingData[];\n\n  /** True if headings value have been retrieved from the DOM. */\n  initialized: boolean;\n\n  /** Function to update headings values after the parent component has mounted. */\n  reinitialize: () => void;\n}\n\nexport function useScrollSpy({\n  selector = 'h1, h2, h3, h4, h5, h6',\n  getDepth = getDefaultDepth,\n  getValue = getDefaultValue,\n}: UseScrollSpyOptions = {}): UseScrollSpyReturnType {\n  const [active, setActive] = useState(-1);\n  const [initialized, setInitialized] = useState(false);\n  const [data, setData] = useState<UseScrollSpyHeadingData[]>([]);\n  const headingsRef = useRef<UseScrollSpyHeadingData[]>([]);\n\n  const handleScroll = () => {\n    setActive(\n      getActiveElement(headingsRef.current.map((d) => d.getNode().getBoundingClientRect()))\n    );\n  };\n\n  const initialize = () => {\n    const headings = getHeadingsData(\n      Array.from(document.querySelectorAll(selector)),\n      getDepth,\n      getValue\n    );\n    headingsRef.current = headings;\n    setInitialized(true);\n    setData(headings);\n    setActive(getActiveElement(headings.map((d) => d.getNode().getBoundingClientRect())));\n  };\n\n  useEffect(() => {\n    initialize();\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return {\n    reinitialize: initialize,\n    active,\n    initialized,\n    data,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}