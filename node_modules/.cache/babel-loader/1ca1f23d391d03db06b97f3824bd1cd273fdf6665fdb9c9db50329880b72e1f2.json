{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../utils/keys/keys.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport { resolvers } from '../resolvers/index.mjs';\nimport { sortMediaQueries } from './sort-media-queries.mjs';\nfunction hasResponsiveStyles(styleProp) {\n  if (typeof styleProp !== \"object\" || styleProp === null) {\n    return false;\n  }\n  const breakpoints = Object.keys(styleProp);\n  if (breakpoints.length === 1 && breakpoints[0] === \"base\") {\n    return false;\n  }\n  return true;\n}\nfunction getBaseValue(value) {\n  if (typeof value === \"object\" && value !== null) {\n    if (\"base\" in value) {\n      return value.base;\n    }\n    return void 0;\n  }\n  return value;\n}\nfunction getBreakpointKeys(value) {\n  if (typeof value === \"object\" && value !== null) {\n    return keys(value).filter(key => key !== \"base\");\n  }\n  return [];\n}\nfunction getBreakpointValue(value, breakpoint) {\n  if (typeof value === \"object\" && value !== null && breakpoint in value) {\n    return value[breakpoint];\n  }\n  return value;\n}\nfunction parseStyleProps({\n  styleProps,\n  data,\n  theme\n}) {\n  return sortMediaQueries(keys(styleProps).reduce((acc, styleProp) => {\n    if (styleProp === \"hiddenFrom\" || styleProp === \"visibleFrom\" || styleProp === \"sx\") {\n      return acc;\n    }\n    const propertyData = data[styleProp];\n    const properties = Array.isArray(propertyData.property) ? propertyData.property : [propertyData.property];\n    const baseValue = getBaseValue(styleProps[styleProp]);\n    if (!hasResponsiveStyles(styleProps[styleProp])) {\n      properties.forEach(property => {\n        acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n      });\n      return acc;\n    }\n    acc.hasResponsiveStyles = true;\n    const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n    properties.forEach(property => {\n      if (baseValue) {\n        acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n      }\n      breakpoints.forEach(breakpoint => {\n        const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n        acc.media[bp] = {\n          ...acc.media[bp],\n          [property]: resolvers[propertyData.type](getBreakpointValue(styleProps[styleProp], breakpoint), theme)\n        };\n      });\n    });\n    return acc;\n  }, {\n    hasResponsiveStyles: false,\n    styles: {},\n    inlineStyles: {},\n    media: {}\n  }));\n}\nexport { parseStyleProps };","map":{"version":3,"names":["hasResponsiveStyles","styleProp","breakpoints","Object","keys","length","getBaseValue","value","base","getBreakpointKeys","filter","key","getBreakpointValue","breakpoint","parseStyleProps","styleProps","data","theme","sortMediaQueries","reduce","acc","propertyData","properties","Array","isArray","property","baseValue","forEach","inlineStyles","resolvers","type","styles","bp","media"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\Box\\style-props\\parse-style-props\\parse-style-props.ts"],"sourcesContent":["import { MantineTheme } from '../../../MantineProvider';\nimport { keys } from '../../../utils';\nimport { resolvers } from '../resolvers';\nimport type { SystemPropData } from '../style-props-data';\nimport type { StyleProp } from '../style-props.types';\nimport { sortMediaQueries, SortMediaQueriesResult } from './sort-media-queries';\n\nfunction hasResponsiveStyles(styleProp: StyleProp<unknown>) {\n  if (typeof styleProp !== 'object' || styleProp === null) {\n    return false;\n  }\n\n  const breakpoints = Object.keys(styleProp);\n\n  if (breakpoints.length === 1 && breakpoints[0] === 'base') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getBaseValue(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    if ('base' in value) {\n      return value.base;\n    }\n\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction getBreakpointKeys(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    return keys(value).filter((key) => key !== 'base');\n  }\n\n  return [];\n}\n\nfunction getBreakpointValue(value: StyleProp<unknown>, breakpoint: string) {\n  if (typeof value === 'object' && value !== null && breakpoint in value) {\n    return value[breakpoint as keyof typeof value];\n  }\n\n  return value;\n}\n\ninterface ParseStylePropsOptions {\n  styleProps: Record<string, StyleProp<any>>;\n  theme: MantineTheme;\n  data: Record<string, SystemPropData>;\n}\n\nexport interface ParseStylePropsResult {\n  hasResponsiveStyles: boolean;\n  inlineStyles: React.CSSProperties;\n  styles: React.CSSProperties;\n  media: Record<string, React.CSSProperties>;\n}\n\nexport function parseStyleProps({\n  styleProps,\n  data,\n  theme,\n}: ParseStylePropsOptions): SortMediaQueriesResult {\n  return sortMediaQueries(\n    keys(styleProps).reduce<{\n      hasResponsiveStyles: boolean;\n      inlineStyles: Record<string, unknown>;\n      styles: Record<string, unknown>;\n      media: Record<string, Record<string, unknown>>;\n    }>(\n      (acc, styleProp) => {\n        if (\n          (styleProp as string) === 'hiddenFrom' ||\n          (styleProp as string) === 'visibleFrom' ||\n          (styleProp as string) === 'sx'\n        ) {\n          return acc;\n        }\n\n        const propertyData = data[styleProp];\n        const properties = Array.isArray(propertyData.property)\n          ? propertyData.property\n          : [propertyData.property];\n        const baseValue = getBaseValue(styleProps[styleProp]);\n\n        if (!hasResponsiveStyles(styleProps[styleProp])) {\n          properties.forEach((property) => {\n            acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n          });\n\n          return acc;\n        }\n\n        acc.hasResponsiveStyles = true;\n\n        const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n\n        properties.forEach((property) => {\n          if (baseValue) {\n            acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n          }\n\n          breakpoints.forEach((breakpoint) => {\n            const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n            acc.media[bp] = {\n              ...acc.media[bp],\n              [property]: resolvers[propertyData.type](\n                getBreakpointValue(styleProps[styleProp], breakpoint),\n                theme\n              ),\n            };\n          });\n        });\n\n        return acc;\n      },\n      {\n        hasResponsiveStyles: false,\n        styles: {},\n        inlineStyles: {},\n        media: {},\n      }\n    )\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}