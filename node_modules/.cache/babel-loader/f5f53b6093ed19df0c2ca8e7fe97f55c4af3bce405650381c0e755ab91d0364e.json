{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport 'react';\nimport { getSafeId } from '../../core/utils/get-safe-id/get-safe-id.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { TabsProvider } from './Tabs.context.mjs';\nimport { TabsList } from './TabsList/TabsList.mjs';\nimport { TabsPanel } from './TabsPanel/TabsPanel.mjs';\nimport { TabsTab } from './TabsTab/TabsTab.mjs';\nimport classes from './Tabs.module.css.mjs';\nconst VALUE_ERROR = \"Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value\";\nconst defaultProps = {\n  keepMounted: true,\n  orientation: \"horizontal\",\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: \"default\",\n  placement: \"left\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  autoContrast\n}) => ({\n  root: {\n    \"--tabs-radius\": getRadius(radius),\n    \"--tabs-color\": getThemeColor(color, theme),\n    \"--tabs-text-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n      color,\n      theme,\n      autoContrast\n    }) : void 0\n  }\n}));\nconst Tabs = factory((_props, ref) => {\n  const props = useProps(\"Tabs\", defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const uid = useId(id);\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange\n  });\n  const getStyles = useStyles({\n    name: \"Tabs\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(TabsProvider, {\n    value: {\n      placement,\n      value: currentTab,\n      orientation,\n      id: uid,\n      loop,\n      activateTabWithKeyboard,\n      getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n      getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n      onChange: setCurrentTab,\n      allowTabDeactivation,\n      variant,\n      color,\n      radius,\n      inverted,\n      keepMounted,\n      unstyled,\n      getStyles\n    },\n    children: /* @__PURE__ */jsx(Box, {\n      ref,\n      id: uid,\n      variant,\n      mod: [{\n        orientation,\n        inverted: orientation === \"horizontal\" && inverted,\n        placement: orientation === \"vertical\" && placement\n      }, mod],\n      ...getStyles(\"root\"),\n      ...others,\n      children\n    })\n  });\n});\nTabs.classes = classes;\nTabs.displayName = \"@mantine/core/Tabs\";\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\nexport { Tabs };","map":{"version":3,"names":["VALUE_ERROR","defaultProps","keepMounted","orientation","loop","activateTabWithKeyboard","allowTabDeactivation","unstyled","inverted","variant","placement","varsResolver","createVarsResolver","theme","radius","color","autoContrast","root","getRadius","getThemeColor","getAutoContrastValue","getContrastColor","Tabs","factory","_props","ref","props","useProps","defaultValue","value","onChange","children","id","classNames","styles","className","style","vars","mod","others","uid","useId","currentTab","setCurrentTab","useUncontrolled","finalValue","getStyles","useStyles","name","classes","jsx","TabsProvider","getTabId","getSafeId","getPanelId","Box","displayName","Tab","TabsTab","Panel","TabsPanel","List","TabsList"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Tabs\\Tabs.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSafeId,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TabsProvider } from './Tabs.context';\nimport { TabsList, TabsListStylesNames } from './TabsList/TabsList';\nimport { TabsPanel, TabsPanelStylesNames } from './TabsPanel/TabsPanel';\nimport { TabsTab, TabsTabStylesNames } from './TabsTab/TabsTab';\nimport classes from './Tabs.module.css';\n\nexport type TabsStylesNames =\n  | 'root'\n  | TabsListStylesNames\n  | TabsPanelStylesNames\n  | TabsTabStylesNames;\n\nexport type TabsVariant = 'default' | 'outline' | 'pills';\nexport type TabsCssVariables = {\n  root: '--tabs-color' | '--tabs-radius';\n};\n\nexport interface TabsProps\n  extends BoxProps,\n    StylesApiProps<TabsFactory>,\n    ElementProps<'div', 'defaultValue' | 'value' | 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: string | null;\n\n  /** Value for controlled component */\n  value?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null) => void;\n\n  /** Tabs orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** `Tabs.List` placement relative to `Tabs.Panel`, applicable only when `orientation=\"vertical\"`, `'left'` by default */\n  placement?: 'left' | 'right';\n\n  /** Base id, used to generate ids to connect labels with controls, generated randomly by default */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, `true` by default */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, `false` by default */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children?: React.ReactNode;\n\n  /** Changes colors of `Tabs.Tab` components when variant is `pills` or `default`, does nothing for other variants */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether tabs should have inverted styles, `false` by default */\n  inverted?: boolean;\n\n  /** If set to `false`, `Tabs.Panel` content will be unmounted when the associated tab is not active, `true` by default */\n  keepMounted?: boolean;\n\n  /** Determines whether active item text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. Only applicable when `variant=\"pills\"` */\n  autoContrast?: boolean;\n}\n\nexport type TabsFactory = Factory<{\n  props: TabsProps;\n  ref: HTMLDivElement;\n  variant: TabsVariant;\n  stylesNames: TabsStylesNames;\n  vars: TabsCssVariables;\n  staticComponents: {\n    Tab: typeof TabsTab;\n    Panel: typeof TabsPanel;\n    List: typeof TabsList;\n  };\n}>;\n\nconst VALUE_ERROR =\n  'Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value';\n\nconst defaultProps: Partial<TabsProps> = {\n  keepMounted: true,\n  orientation: 'horizontal',\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: 'default',\n  placement: 'left',\n};\n\nconst varsResolver = createVarsResolver<TabsFactory>((theme, { radius, color, autoContrast }) => ({\n  root: {\n    '--tabs-radius': getRadius(radius),\n    '--tabs-color': getThemeColor(color, theme),\n    '--tabs-text-color': getAutoContrastValue(autoContrast, theme)\n      ? getContrastColor({ color, theme, autoContrast })\n      : undefined,\n  },\n}));\n\nexport const Tabs = factory<TabsFactory>((_props, ref) => {\n  const props = useProps('Tabs', defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const getStyles = useStyles<TabsFactory>({\n    name: 'Tabs',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TabsProvider\n      value={{\n        placement,\n        value: currentTab,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n        getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n        onChange: setCurrentTab,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        unstyled,\n        getStyles,\n      }}\n    >\n      <Box\n        ref={ref}\n        id={uid}\n        variant={variant}\n        mod={[\n          {\n            orientation,\n            inverted: orientation === 'horizontal' && inverted,\n            placement: orientation === 'vertical' && placement,\n          },\n          mod,\n        ]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {children}\n      </Box>\n    </TabsProvider>\n  );\n});\n\nTabs.classes = classes;\nTabs.displayName = '@mantine/core/Tabs';\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA,MAAMA,WACJ;AAEF,MAAMC,YAAmC;EACvCC,WAAa;EACbC,WAAa;EACbC,IAAM;EACNC,uBAAyB;EACzBC,oBAAsB;EACtBC,QAAU;EACVC,QAAU;EACVC,OAAS;EACTC,SAAW;AACb;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAgC,CAACC,KAAA,EAAO;EAAEC,MAAQ;EAAAC,KAAA;EAAOC;AAAA,CAAoB;EAChGC,IAAM;IACJ,iBAAiBC,SAAA,CAAUJ,MAAM;IACjC,gBAAgBK,aAAc,CAAAJ,KAAA,EAAOF,KAAK;IAC1C,qBAAqBO,oBAAqB,CAAAJ,YAAA,EAAcH,KAAK,IACzDQ,gBAAiB;MAAEN,KAAO;MAAAF,KAAA;MAAOG;IAAc,EAC/C;EAAA;AAER,CAAE;AAEK,MAAMM,IAAO,GAAAC,OAAA,CAAqB,CAACC,MAAA,EAAQC,GAAQ;EACxD,MAAMC,KAAQ,GAAAC,QAAA,CAAS,MAAQ,EAAA1B,YAAA,EAAcuB,MAAM;EAC7C;IACJI,YAAA;IACAC,KAAA;IACAC,QAAA;IACA3B,WAAA;IACA4B,QAAA;IACA3B,IAAA;IACA4B,EAAA;IACA3B,uBAAA;IACAC,oBAAA;IACAG,OAAA;IACAM,KAAA;IACAD,MAAA;IACAN,QAAA;IACAE,SAAA;IACAR,WAAA;IACA+B,UAAA;IACAC,MAAA;IACA3B,QAAA;IACA4B,SAAA;IACAC,KAAA;IACAC,IAAA;IACArB,YAAA;IACAsB,GAAA;IACA,GAAGC;EAAA,CACD,GAAAb,KAAA;EAEE,MAAAc,GAAA,GAAMC,KAAA,CAAMT,EAAE;EAEpB,MAAM,CAACU,UAAA,EAAYC,aAAa,IAAIC,eAAgB;IAClDf,KAAA;IACAD,YAAA;IACAiB,UAAY;IACZf;EAAA,CACD;EAED,MAAMgB,SAAA,GAAYC,SAAuB;IACvCC,IAAM;IACNtB,KAAA;IACAuB,OAAA;IACAd,SAAA;IACAC,KAAA;IACAH,UAAA;IACAC,MAAA;IACA3B,QAAA;IACA8B,IAAA;IACA1B;EAAA,CACD;EAGC,sBAAAuC,GAAA,CAACC,YAAA;IACCtB,KAAO;MACLnB,SAAA;MACAmB,KAAO,EAAAa,UAAA;MACPvC,WAAA;MACA6B,EAAI,EAAAQ,GAAA;MACJpC,IAAA;MACAC,uBAAA;MACA+C,QAAU,EAAAC,SAAA,CAAU,GAAGb,GAAG,QAAQxC,WAAW;MAC7CsD,UAAY,EAAAD,SAAA,CAAU,GAAGb,GAAG,UAAUxC,WAAW;MACjD8B,QAAU,EAAAa,aAAA;MACVrC,oBAAA;MACAG,OAAA;MACAM,KAAA;MACAD,MAAA;MACAN,QAAA;MACAN,WAAA;MACAK,QAAA;MACAuC;IACF;IAEAf,QAAA,iBAAAmB,GAAA,CAACK,GAAA;MACC9B,GAAA;MACAO,EAAI,EAAAQ,GAAA;MACJ/B,OAAA;MACA6B,GAAK,GACH;QACEnC,WAAA;QACAK,QAAA,EAAUL,WAAA,KAAgB,YAAgB,IAAAK,QAAA;QAC1CE,SAAA,EAAWP,WAAA,KAAgB,UAAc,IAAAO;MAC3C,GACA4B,GAAA,CACF;MACC,GAAGQ,SAAA,CAAU,MAAM;MACnB,GAAGP,MAAA;MAEHR;IAAA;EACH,CACF;AAEJ,CAAC;AAEDT,IAAA,CAAK2B,OAAU,GAAAA,OAAA;AACf3B,IAAA,CAAKkC,WAAc;AACnBlC,IAAA,CAAKmC,GAAM,GAAAC,OAAA;AACXpC,IAAA,CAAKqC,KAAQ,GAAAC,SAAA;AACbtC,IAAA,CAAKuC,IAAO,GAAAC,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}