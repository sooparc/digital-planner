{"ast":null,"code":"'use client';\n\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport { memoize } from '../../../core/utils/memoize/memoize.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getAllCheckedNodes } from '../get-all-checked-nodes/get-all-checked-nodes.mjs';\nfunction isNodeIndeterminate(value, data, checkedState) {\n  if (checkedState.length === 0) {\n    return false;\n  }\n  const checkedNodes = getAllCheckedNodes(data, checkedState).result;\n  return checkedNodes.some(node => node.value === value && node.indeterminate);\n}\nconst memoizedIsNodeIndeterminate = memoize(isNodeIndeterminate);\nexport { isNodeIndeterminate, memoizedIsNodeIndeterminate };","map":{"version":3,"names":["isNodeIndeterminate","value","data","checkedState","length","checkedNodes","getAllCheckedNodes","result","some","node","indeterminate","memoizedIsNodeIndeterminate","memoize"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Tree\\is-node-indeterminate\\is-node-indeterminate.ts"],"sourcesContent":["import { memoize } from '../../../core';\nimport { getAllCheckedNodes } from '../get-all-checked-nodes/get-all-checked-nodes';\nimport type { TreeNodeData } from '../Tree';\n\nexport function isNodeIndeterminate(\n  value: string,\n  data: TreeNodeData[],\n  checkedState: string[]\n): boolean {\n  if (checkedState.length === 0) {\n    return false;\n  }\n\n  const checkedNodes = getAllCheckedNodes(data, checkedState).result;\n  return checkedNodes.some((node) => node.value === value && node.indeterminate);\n}\n\nexport const memoizedIsNodeIndeterminate = memoize(isNodeIndeterminate);\n"],"mappings":";;;;;;;;;;;;;;;AAIgB,SAAAA,oBACdC,KACA,EAAAC,IAAA,EACAC,YACS;EACL,IAAAA,YAAA,CAAaC,MAAA,KAAW,CAAG;IACtB;EAAA;EAGT,MAAMC,YAAe,GAAAC,kBAAA,CAAmBJ,IAAM,EAAAC,YAAY,CAAE,CAAAI,MAAA;EACrD,OAAAF,YAAA,CAAaG,IAAA,CAAMC,IAAA,IAASA,IAAA,CAAKR,KAAU,KAAAA,KAAA,IAASQ,IAAA,CAAKC,aAAa;AAC/E;AAEa,MAAAC,2BAAA,GAA8BC,OAAA,CAAQZ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}