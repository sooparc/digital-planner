{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport 'react';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Input } from '../../Input/Input.mjs';\nimport '../../Input/InputWrapper/InputWrapper.mjs';\nimport '../../Input/InputDescription/InputDescription.mjs';\nimport '../../Input/InputError/InputError.mjs';\nimport '../../Input/InputLabel/InputLabel.mjs';\nimport '../../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../../Input/InputClearButton/InputClearButton.mjs';\nimport '../../Input/InputWrapper.context.mjs';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset/InputsGroupFieldset.mjs';\nimport { RadioGroupProvider } from '../RadioGroup.context.mjs';\nconst defaultProps = {};\nconst RadioGroup = factory((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    size,\n    wrapperProps,\n    children,\n    name,\n    readOnly,\n    ...others\n  } = useProps(\"RadioGroup\", defaultProps, props);\n  const _name = useId(name);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const handleChange = event => !readOnly && setValue(typeof event === \"string\" ? event : event.currentTarget.value);\n  return /* @__PURE__ */jsx(RadioGroupProvider, {\n    value: {\n      value: _value,\n      onChange: handleChange,\n      size,\n      name: _name\n    },\n    children: /* @__PURE__ */jsx(Input.Wrapper, {\n      size,\n      ref,\n      ...wrapperProps,\n      ...others,\n      labelElement: \"div\",\n      __staticSelector: \"RadioGroup\",\n      children: /* @__PURE__ */jsx(InputsGroupFieldset, {\n        role: \"radiogroup\",\n        children\n      })\n    })\n  });\n});\nRadioGroup.classes = Input.Wrapper.classes;\nRadioGroup.displayName = \"@mantine/core/RadioGroup\";\nexport { RadioGroup };","map":{"version":3,"names":["defaultProps","RadioGroup","factory","props","ref","value","defaultValue","onChange","size","wrapperProps","children","name","readOnly","others","useProps","_name","useId","_value","setValue","useUncontrolled","finalValue","handleChange","event","currentTarget","jsx","RadioGroupProvider","Input","Wrapper","labelElement","__staticSelector","InputsGroupFieldset","role","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Radio\\RadioGroup\\RadioGroup.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, MantineSize, useProps } from '../../../core';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset';\nimport { RadioGroupProvider } from '../RadioGroup.context';\n\nexport type RadioGroupStylesNames = InputWrapperStylesNames;\n\nexport interface RadioGroupProps\n  extends Omit<InputWrapperProps, 'onChange' | 'value' | 'defaultValue'> {\n  /** `Radio` components and any other elements */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string | null;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Props passed down to the `Input.Wrapper` */\n  wrapperProps?: Record<string, any>;\n\n  /** Controls size of the `Input.Wrapper`, `'sm'` by default */\n  size?: MantineSize;\n\n  /** `name` attribute of child radio inputs. By default, `name` is generated randomly. */\n  name?: string;\n\n  /** If set, value cannot be changed */\n  readOnly?: boolean;\n}\n\nexport type RadioGroupFactory = Factory<{\n  props: RadioGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: RadioGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<RadioGroupProps> = {};\n\nexport const RadioGroup = factory<RadioGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, name, readOnly, ...others } =\n    useProps('RadioGroup', defaultProps, props);\n\n  const _name = useId(name);\n\n  const [_value, setValue] = useUncontrolled({\n    value: value as string,\n    defaultValue: defaultValue as string,\n    finalValue: '',\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | string) =>\n    !readOnly && setValue(typeof event === 'string' ? event : event.currentTarget.value);\n\n  return (\n    <RadioGroupProvider value={{ value: _value, onChange: handleChange, size, name: _name }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"RadioGroup\"\n      >\n        <InputsGroupFieldset role=\"radiogroup\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </RadioGroupProvider>\n  );\n});\n\nRadioGroup.classes = Input.Wrapper.classes;\nRadioGroup.displayName = '@mantine/core/RadioGroup';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,MAAMA,YAAA,GAAyC,CAAC;AAEzC,MAAMC,UAAa,GAAAC,OAAA,CAA2B,CAACC,KAAA,EAAOC,GAAQ;EACnE,MAAM;IAAEC,KAAA;IAAOC,YAAc;IAAAC,QAAA;IAAUC,IAAA;IAAMC,YAAc;IAAAC,QAAA;IAAUC,IAAM;IAAAC,QAAA;IAAU,GAAGC;EAAO,IAC7FC,QAAS,eAAcd,YAAA,EAAcG,KAAK;EAEtC,MAAAY,KAAA,GAAQC,KAAA,CAAML,IAAI;EAExB,MAAM,CAACM,MAAA,EAAQC,QAAQ,IAAIC,eAAgB;IACzCd,KAAA;IACAC,YAAA;IACAc,UAAY;IACZb;EAAA,CACD;EAED,MAAMc,YAAe,GAACC,KACpB,KAACV,QAAY,IAAAM,QAAA,CAAS,OAAOI,KAAA,KAAU,QAAW,GAAAA,KAAA,GAAQA,KAAM,CAAAC,aAAA,CAAclB,KAAK;EAGnF,sBAAAmB,GAAA,CAACC,kBAAmB;IAAApB,KAAA,EAAO;MAAEA,KAAA,EAAOY,MAAQ;MAAAV,QAAA,EAAUc,YAAc;MAAAb,IAAA;MAAMG,IAAM,EAAAI;IAC9E;IAAAL,QAAA,iBAAAc,GAAA,CAACE,KAAM,CAAAC,OAAA,EAAN;MACCnB,IAAA;MACAJ,GAAA;MACC,GAAGK,YAAA;MACH,GAAGI,MAAA;MACJe,YAAa;MACbC,gBAAiB;MAEjBnB,QAAC,iBAAAc,GAAA,CAAAM,mBAAA;QAAoBC,IAAK;QAAcrB;MAAS;IAAA;EAErD;AAEJ,CAAC;AAEDT,UAAW,CAAA+B,OAAA,GAAUN,KAAA,CAAMC,OAAQ,CAAAK,OAAA;AACnC/B,UAAA,CAAWgC,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}