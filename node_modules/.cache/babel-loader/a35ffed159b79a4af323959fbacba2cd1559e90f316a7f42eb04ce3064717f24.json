{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Children, cloneElement } from 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport { CardProvider } from './Card.context.mjs';\nimport { CardSection } from './CardSection/CardSection.mjs';\nimport classes from './Card.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, {\n  padding\n}) => ({\n  root: {\n    \"--card-padding\": getSpacing(padding)\n  }\n}));\nconst Card = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Card\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    padding,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Card\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === \"object\" && child && \"type\" in child && child.type === CardSection) {\n      return cloneElement(child, {\n        \"data-first-section\": index === 0 || void 0,\n        \"data-last-section\": index === _children.length - 1 || void 0\n      });\n    }\n    return child;\n  });\n  return /* @__PURE__ */jsx(CardProvider, {\n    value: {\n      getStyles\n    },\n    children: /* @__PURE__ */jsx(Paper, {\n      ref,\n      unstyled,\n      ...getStyles(\"root\"),\n      ...others,\n      children: content\n    })\n  });\n});\nCard.classes = classes;\nCard.displayName = \"@mantine/core/Card\";\nCard.Section = CardSection;\nexport { Card };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","_","padding","root","getSpacing","Card","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","others","getStyles","useStyles","name","classes","_children","Children","toArray","content","map","child","index","type","CardSection","cloneElement","length","jsx","CardProvider","value","Paper","displayName","Section"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Card\\Card.tsx"],"sourcesContent":["import { Children, cloneElement } from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  getSpacing,\n  MantineRadius,\n  MantineShadow,\n  MantineSpacing,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Paper } from '../Paper';\nimport { CardProvider } from './Card.context';\nimport { CardSection } from './CardSection/CardSection';\nimport classes from './Card.module.css';\n\nexport type CardStylesNames = 'root' | 'section';\nexport type CardCssVariables = {\n  root: '--card-padding';\n};\n\nexport interface CardProps extends BoxProps, StylesApiProps<CardFactory> {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the card should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n\n  /** Controls `padding`, key of `theme.spacing` or any valid CSS value, `'md'` by default */\n  padding?: MantineSpacing;\n\n  /** Card content */\n  children?: React.ReactNode;\n}\n\nexport type CardFactory = PolymorphicFactory<{\n  props: CardProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CardStylesNames;\n  vars: CardCssVariables;\n  staticComponents: {\n    Section: typeof CardSection;\n  };\n}>;\n\nconst defaultProps: Partial<CardProps> = {};\n\nconst varsResolver = createVarsResolver<CardFactory>((_, { padding }) => ({\n  root: {\n    '--card-padding': getSpacing(padding),\n  },\n}));\n\nexport const Card = polymorphicFactory<CardFactory>((_props, ref) => {\n  const props = useProps('Card', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, children, padding, ...others } =\n    props;\n\n  const getStyles = useStyles<CardFactory>({\n    name: 'Card',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === 'object' && child && 'type' in child && child.type === CardSection) {\n      return cloneElement(child, {\n        'data-first-section': index === 0 || undefined,\n        'data-last-section': index === _children.length - 1 || undefined,\n      } as any);\n    }\n\n    return child;\n  });\n\n  return (\n    <CardProvider value={{ getStyles }}>\n      <Paper ref={ref} unstyled={unstyled} {...getStyles('root')} {...others}>\n        {content}\n      </Paper>\n    </CardProvider>\n  );\n});\n\nCard.classes = classes;\nCard.displayName = '@mantine/core/Card';\nCard.Section = CardSection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoDA,MAAMA,YAAA,GAAmC,CAAC;AAE1C,MAAMC,YAAA,GAAeC,kBAAgC,EAACC,CAAG;EAAEC;AAAA,CAAe;EACxEC,IAAM;IACJ,kBAAkBC,UAAA,CAAWF,OAAO;EAAA;AAExC,CAAE;AAEK,MAAMG,IAAO,GAAAC,kBAAA,CAAgC,CAACC,MAAA,EAAQC,GAAQ;EACnE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,MAAQ,EAAAZ,YAAA,EAAcS,MAAM;EAC7C;IAAEI,UAAY;IAAAC,SAAA;IAAWC,KAAO;IAAAC,MAAA;IAAQC,QAAU;IAAAC,IAAA;IAAMC,QAAU;IAAAf,OAAA;IAAS,GAAGgB;EAClF,IAAAT,KAAA;EAEF,MAAMU,SAAA,GAAYC,SAAuB;IACvCC,IAAM;IACNZ,KAAA;IACAa,OAAA;IACAV,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB;EAAA,CACD;EAEK,MAAAwB,SAAA,GAAYC,QAAS,CAAAC,OAAA,CAAQR,QAAQ;EAC3C,MAAMS,OAAU,GAAAH,SAAA,CAAUI,GAAI,EAACC,KAAA,EAAOC,KAAU;IAC1C,WAAOD,KAAA,KAAU,QAAY,IAAAA,KAAA,IAAS,UAAUA,KAAS,IAAAA,KAAA,CAAME,IAAA,KAASC,WAAa;MACvF,OAAOC,YAAA,CAAaJ,KAAO;QACzB,sBAAsBC,KAAA,KAAU,CAAK;QACrC,mBAAqB,EAAAA,KAAA,KAAUN,SAAU,CAAAU,MAAA,GAAS,CAAK;MAAA,CACjD;IAAA;IAGH,OAAAL,KAAA;EAAA,CACR;EAED,sBAAAM,GAAA,CACGC,YAAa;IAAAC,KAAA,EAAO;MAAEjB;IAAA;IACrBF,QAAC,iBAAAiB,GAAA,CAAAG,KAAA;MAAM7B,GAAU;MAAAO,QAAA;MAAqB,GAAGI,SAAU,OAAM;MAAI,GAAGD,MAAA;MAC7DD,QAAA,EAAAS;IACH;EACF;AAEJ,CAAC;AAEDrB,IAAA,CAAKiB,OAAU,GAAAA,OAAA;AACfjB,IAAA,CAAKiC,WAAc;AACnBjC,IAAA,CAAKkC,OAAU,GAAAR,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}