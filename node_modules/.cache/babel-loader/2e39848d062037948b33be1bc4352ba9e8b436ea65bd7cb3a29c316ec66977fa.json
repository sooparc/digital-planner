{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from '../ActionIcon.module.css.mjs';\nconst defaultProps = {\n  orientation: \"horizontal\"\n};\nconst varsResolver = createVarsResolver((_, {\n  borderWidth\n}) => ({\n  group: {\n    \"--ai-border-width\": rem(borderWidth)\n  }\n}));\nconst ActionIconGroup = factory((_props, ref) => {\n  const props = useProps(\"ActionIconGroup\", defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps(\"ActionIconGroup\", defaultProps, _props);\n  const getStyles = useStyles({\n    name: \"ActionIconGroup\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"group\"\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ...getStyles(\"group\"),\n    ref,\n    variant,\n    mod: [{\n      \"data-orientation\": orientation\n    }, mod],\n    role: \"group\",\n    ...others\n  });\n});\nActionIconGroup.classes = classes;\nActionIconGroup.displayName = \"@mantine/core/ActionIconGroup\";\nexport { ActionIconGroup };","map":{"version":3,"names":["defaultProps","orientation","varsResolver","createVarsResolver","_","borderWidth","group","rem","ActionIconGroup","factory","_props","ref","props","useProps","className","style","classNames","styles","unstyled","vars","variant","mod","others","getStyles","useStyles","name","classes","rootSelector","jsx","Box","role","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ActionIcon\\ActionIconGroup\\ActionIconGroup.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../ActionIcon.module.css';\n\nexport type ActionIconGroupStylesNames = 'group';\nexport type ActionIconGroupCssVariables = {\n  group: '--ai-border-width';\n};\n\nexport interface ActionIconGroupProps extends BoxProps, StylesApiProps<ActionIconGroupFactory> {\n  /** `ActionIcon` components only */\n  children?: React.ReactNode;\n\n  /** Controls group orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** `border-width` of the child `ActionIcon` components. Default value in `1` */\n  borderWidth?: number | string;\n}\n\nexport type ActionIconGroupFactory = Factory<{\n  props: ActionIconGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ActionIconGroupStylesNames;\n  vars: ActionIconGroupCssVariables;\n}>;\n\nconst defaultProps: Partial<ActionIconGroupProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<ActionIconGroupFactory>((_, { borderWidth }) => ({\n  group: { '--ai-border-width': rem(borderWidth) },\n}));\n\nexport const ActionIconGroup = factory<ActionIconGroupFactory>((_props, ref) => {\n  const props = useProps('ActionIconGroup', defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps('ActionIconGroup', defaultProps, _props);\n\n  const getStyles = useStyles<ActionIconGroupFactory>({\n    name: 'ActionIconGroup',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'group',\n  });\n\n  return (\n    <Box\n      {...getStyles('group')}\n      ref={ref}\n      variant={variant}\n      mod={[{ 'data-orientation': orientation }, mod]}\n      role=\"group\"\n      {...others}\n    />\n  );\n});\n\nActionIconGroup.classes = classes;\nActionIconGroup.displayName = '@mantine/core/ActionIconGroup';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAoCA,MAAMA,YAA8C;EAClDC,WAAa;AACf;AAEA,MAAMC,YAAA,GAAeC,kBAA2C,EAACC,CAAG;EAAEC;AAAA,CAAmB;EACvFC,KAAO;IAAE,mBAAqB,EAAAC,GAAA,CAAIF,WAAW;EAAE;AACjD,CAAE;AAEK,MAAMG,eAAkB,GAAAC,OAAA,CAAgC,CAACC,MAAA,EAAQC,GAAQ;EAC9E,MAAMC,KAAQ,GAAAC,QAAA,CAAS,iBAAmB,EAAAb,YAAA,EAAcU,MAAM;EACxD;IACJI,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAjB,WAAA;IACAkB,IAAA;IACAd,WAAA;IACAe,OAAA;IACAC,GAAA;IACA,GAAGC;EACD,IAAAT,QAAA,CAAS,iBAAmB,EAAAb,YAAA,EAAcU,MAAM;EAEpD,MAAMa,SAAA,GAAYC,SAAkC;IAClDC,IAAM;IACNb,KAAA;IACAc,OAAA;IACAZ,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB,YAAA;IACAyB,YAAc;EAAA,CACf;EAGC,sBAAAC,GAAA,CAACC,GAAA;IACE,GAAGN,SAAA,CAAU,OAAO;IACrBZ,GAAA;IACAS,OAAA;IACAC,GAAA,EAAK,CAAC;MAAE,kBAAoB,EAAApB;IAAA,GAAeoB,GAAG;IAC9CS,IAAK;IACJ,GAAGR;EAAA,CACN;AAEJ,CAAC;AAEDd,eAAA,CAAgBkB,OAAU,GAAAA,OAAA;AAC1BlB,eAAA,CAAgBuB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}