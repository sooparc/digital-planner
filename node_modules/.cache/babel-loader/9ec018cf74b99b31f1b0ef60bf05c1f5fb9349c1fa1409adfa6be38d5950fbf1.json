{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Fieldset.module.css.mjs';\nconst defaultProps = {\n  variant: \"default\"\n};\nconst varsResolver = createVarsResolver((_, {\n  radius\n}) => ({\n  root: {\n    \"--fieldset-radius\": radius === void 0 ? void 0 : getRadius(radius)\n  }\n}));\nconst Fieldset = factory((_props, ref) => {\n  const props = useProps(\"Fieldset\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    legend,\n    variant,\n    children,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Fieldset\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, {\n    component: \"fieldset\",\n    ref,\n    variant,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    ...others,\n    children: [legend && /* @__PURE__ */jsx(\"legend\", {\n      ...getStyles(\"legend\", {\n        variant\n      }),\n      children: legend\n    }), children]\n  });\n});\nFieldset.classes = classes;\nFieldset.displayName = \"@mantine/core/Fieldset\";\nexport { Fieldset };","map":{"version":3,"names":["defaultProps","variant","varsResolver","createVarsResolver","_","radius","root","getRadius","Fieldset","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","legend","children","others","getStyles","useStyles","name","classes","jsxs","Box","component","jsx","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Fieldset\\Fieldset.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Fieldset.module.css';\n\nexport type FieldsetStylesNames = 'root' | 'legend';\nexport type FieldsetVariant = 'default' | 'filled' | 'unstyled';\nexport type FieldsetCSSVariables = {\n  root: '--fieldset-radius';\n};\n\nexport interface FieldsetProps\n  extends BoxProps,\n    StylesApiProps<FieldsetFactory>,\n    ElementProps<'fieldset'> {\n  /** Fieldset legend */\n  legend?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n}\n\nexport type FieldsetFactory = Factory<{\n  props: FieldsetProps;\n  ref: HTMLFieldSetElement;\n  stylesNames: FieldsetStylesNames;\n  vars: FieldsetCSSVariables;\n  variant: FieldsetVariant;\n}>;\n\nconst defaultProps: Partial<FieldsetProps> = {\n  variant: 'default',\n};\n\nconst varsResolver = createVarsResolver<FieldsetFactory>((_, { radius }) => ({\n  root: {\n    '--fieldset-radius': radius === undefined ? undefined : getRadius(radius),\n  },\n}));\n\nexport const Fieldset = factory<FieldsetFactory>((_props, ref) => {\n  const props = useProps('Fieldset', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    legend,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FieldsetFactory>({\n    name: 'Fieldset',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      component=\"fieldset\"\n      ref={ref}\n      variant={variant}\n      {...getStyles('root', { variant })}\n      {...others}\n    >\n      {legend && <legend {...getStyles('legend', { variant })}>{legend}</legend>}\n      {children}\n    </Box>\n  );\n});\n\nFieldset.classes = classes;\nFieldset.displayName = '@mantine/core/Fieldset';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAwCA,MAAMA,YAAuC;EAC3CC,OAAS;AACX;AAEA,MAAMC,YAAA,GAAeC,kBAAoC,EAACC,CAAG;EAAEC;AAAA,CAAc;EAC3EC,IAAM;IACJ,mBAAqB,EAAAD,MAAA,KAAW,KAAY,aAAYE,SAAA,CAAUF,MAAM;EAAA;AAE5E,CAAE;AAEK,MAAMG,QAAW,GAAAC,OAAA,CAAyB,CAACC,MAAA,EAAQC,GAAQ;EAChE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,UAAY,EAAAb,YAAA,EAAcU,MAAM;EACjD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,MAAA;IACAnB,OAAA;IACAoB,QAAA;IACA,GAAGC;EAAA,CACD,GAAAV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAA2B;IAC3CC,IAAM;IACNC,OAAA;IACAd,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB;EAAA,CACD;EAGC,sBAAAyB,IAAA,CAACC,GAAA;IACCC,SAAU;IACVlB,GAAA;IACAV,OAAA;IACC,GAAGsB,SAAA,CAAU,MAAQ;MAAEtB;IAAA,CAAS;IAChC,GAAGqB,MAAA;IAEHD,QAAA,GAAUD,MAAA,mBAAAU,GAAA,CAAC;MAAQ,GAAGP,SAAA,CAAU,UAAU;QAAEtB;MAAS;MAAIoB,QAAO,EAAAD;IAAA,IAChEC,QAAA;EAAA,CACH;AAEJ,CAAC;AAEDb,QAAA,CAASkB,OAAU,GAAAA,OAAA;AACnBlB,QAAA,CAASuB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}