{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef(({\n  children,\n  style,\n  ...others\n}, ref) => {\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */jsx(Box, {\n    ...others,\n    ref: rootRef,\n    style: {\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...style\n    },\n    children: /* @__PURE__ */jsx(\"div\", {\n      style: {\n        minWidth: \"100%\",\n        display: \"table\"\n      },\n      ref: ctx.onContentChange,\n      children\n    })\n  });\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":{"version":3,"names":["ScrollAreaViewport","forwardRef","children","style","others","ref","ctx","useScrollAreaContext","rootRef","useMergedRef","onViewportChange","jsx","Box","overflowX","scrollbarXEnabled","overflowY","scrollbarYEnabled","minWidth","display","onContentChange","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaViewport\\ScrollAreaViewport.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { Box, BoxProps, ElementProps } from '../../../core';\nimport { useScrollAreaContext } from '../ScrollArea.context';\n\nexport interface ScrollAreaViewportProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ScrollAreaViewport = forwardRef<HTMLDivElement, ScrollAreaViewportProps>(\n  ({ children, style, ...others }, ref) => {\n    const ctx = useScrollAreaContext();\n    const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n    return (\n      <Box\n        {...others}\n        ref={rootRef}\n        style={{\n          overflowX: ctx.scrollbarXEnabled ? 'scroll' : 'hidden',\n          overflowY: ctx.scrollbarYEnabled ? 'scroll' : 'hidden',\n          ...style,\n        }}\n      >\n        <div style={{ minWidth: '100%', display: 'table' }} ref={ctx.onContentChange}>\n          {children}\n        </div>\n      </Box>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = '@mantine/core/ScrollAreaViewport';\n"],"mappings":";;;;;;;;;;;;;;AAOO,MAAMA,kBAAqB,GAAAC,UAAA,CAChC,CAAC;EAAEC,QAAA;EAAUC,KAAA;EAAO,GAAGC;AAAA,GAAUC,GAAQ;EACvC,MAAMC,GAAA,GAAMC,oBAAqB;EACjC,MAAMC,OAAU,GAAAC,YAAA,CAAaJ,GAAK,EAAAC,GAAA,CAAII,gBAAgB;EAGpD,sBAAAC,GAAA,CAACC,GAAA;IACE,GAAGR,MAAA;IACJC,GAAK,EAAAG,OAAA;IACLL,KAAO;MACLU,SAAA,EAAWP,GAAI,CAAAQ,iBAAA,GAAoB,QAAW;MAC9CC,SAAA,EAAWT,GAAI,CAAAU,iBAAA,GAAoB,QAAW;MAC9C,GAAGb;IACL;IAEAD,QAAC,iBAAAS,GAAA;MAAIR,KAAO;QAAEc,QAAU;QAAQC,OAAS;MAAA,CAAW;MAAAb,GAAA,EAAKC,GAAI,CAAAa,eAAA;MAC1DjB;IACH;EAAA,CACF;AAAA,CAGN;AAEAF,kBAAA,CAAmBoB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}