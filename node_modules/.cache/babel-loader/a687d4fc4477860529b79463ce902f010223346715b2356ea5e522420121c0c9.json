{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ProgressLabel } from './ProgressLabel/ProgressLabel.mjs';\nimport { ProgressRoot } from './ProgressRoot/ProgressRoot.mjs';\nimport { ProgressSection } from './ProgressSection/ProgressSection.mjs';\nimport classes from './Progress.module.css.mjs';\nconst defaultProps = {};\nconst Progress = factory((_props, ref) => {\n  const props = useProps(\"Progress\", defaultProps, _props);\n  const {\n    value,\n    classNames,\n    styles,\n    vars,\n    color,\n    striped,\n    animated,\n    \"aria-label\": label,\n    ...others\n  } = props;\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  return /* @__PURE__ */jsx(ProgressRoot, {\n    ref,\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    vars,\n    ...others,\n    children: /* @__PURE__ */jsx(ProgressSection, {\n      value,\n      color,\n      striped,\n      animated,\n      \"aria-label\": label\n    })\n  });\n});\nProgress.classes = classes;\nProgress.displayName = \"@mantine/core/Progress\";\nProgress.Section = ProgressSection;\nProgress.Root = ProgressRoot;\nProgress.Label = ProgressLabel;\nexport { Progress };","map":{"version":3,"names":["defaultProps","Progress","factory","_props","ref","props","useProps","value","classNames","styles","vars","color","striped","animated","label","others","resolvedClassNames","resolvedStyles","useResolvedStylesApi","jsx","ProgressRoot","children","ProgressSection","classes","displayName","Section","Root","Label","ProgressLabel"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Progress\\Progress.tsx"],"sourcesContent":["import {\n  factory,\n  Factory,\n  MantineColor,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { ProgressLabel } from './ProgressLabel/ProgressLabel';\nimport {\n  __ProgressRootProps,\n  ProgressRoot,\n  ProgressRootCssVariables,\n  ProgressRootStylesNames,\n} from './ProgressRoot/ProgressRoot';\nimport { ProgressSection } from './ProgressSection/ProgressSection';\nimport classes from './Progress.module.css';\n\nexport type ProgressStylesNames = ProgressRootStylesNames;\n\nexport interface ProgressProps extends __ProgressRootProps, StylesApiProps<ProgressFactory> {\n  /** Value of the progress */\n  value: number;\n\n  /** Key of `theme.colors` or any valid CSS value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the section should have stripes, `false` by default */\n  striped?: boolean;\n\n  /** Determines whether the sections stripes should be animated, if set, `striped` prop is ignored, `false` by default */\n  animated?: boolean;\n}\n\nexport type ProgressFactory = Factory<{\n  props: ProgressProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressStylesNames;\n  vars: ProgressRootCssVariables;\n  staticComponents: {\n    Section: typeof ProgressSection;\n    Root: typeof ProgressRoot;\n    Label: typeof ProgressLabel;\n  };\n}>;\n\nconst defaultProps: Partial<ProgressProps> = {};\n\nexport const Progress = factory<ProgressFactory>((_props, ref) => {\n  const props = useProps('Progress', defaultProps, _props);\n  const {\n    value,\n    classNames,\n    styles,\n    vars,\n    color,\n    striped,\n    animated,\n    'aria-label': label,\n    ...others\n  } = props;\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<ProgressFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  return (\n    <ProgressRoot\n      ref={ref}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      vars={vars as any}\n      {...others}\n    >\n      <ProgressSection\n        value={value}\n        color={color}\n        striped={striped}\n        animated={animated}\n        aria-label={label}\n      />\n    </ProgressRoot>\n  );\n});\n\nProgress.classes = classes;\nProgress.displayName = '@mantine/core/Progress';\nProgress.Section = ProgressSection;\nProgress.Root = ProgressRoot;\nProgress.Label = ProgressLabel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA8CA,MAAMA,YAAA,GAAuC,CAAC;AAEvC,MAAMC,QAAW,GAAAC,OAAA,CAAyB,CAACC,MAAA,EAAQC,GAAQ;EAChE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,UAAY,EAAAN,YAAA,EAAcG,MAAM;EACjD;IACJI,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,IAAA;IACAC,KAAA;IACAC,OAAA;IACAC,QAAA;IACA,YAAc,EAAAC,KAAA;IACd,GAAGC;EAAA,CACD,GAAAV,KAAA;EAEJ,MAAM;IAAEW,kBAAA;IAAoBC;EAAe,IAAIC,oBAAsC;IACnFV,UAAA;IACAC,MAAA;IACAJ;EAAA,CACD;EAGC,sBAAAc,GAAA,CAACC,YAAA;IACChB,GAAA;IACAI,UAAY,EAAAQ,kBAAA;IACZP,MAAQ,EAAAQ,cAAA;IACRP,IAAA;IACC,GAAGK,MAAA;IAEJM,QAAA,iBAAAF,GAAA,CAACG,eAAA;MACCf,KAAA;MACAI,KAAA;MACAC,OAAA;MACAC,QAAA;MACA,YAAY,EAAAC;IAAA;EACd,CACF;AAEJ,CAAC;AAEDb,QAAA,CAASsB,OAAU,GAAAA,OAAA;AACnBtB,QAAA,CAASuB,WAAc;AACvBvB,QAAA,CAASwB,OAAU,GAAAH,eAAA;AACnBrB,QAAA,CAASyB,IAAO,GAAAN,YAAA;AAChBnB,QAAA,CAAS0B,KAAQ,GAAAC,aAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}