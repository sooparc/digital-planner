{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const {\n    onChange,\n    children,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef,\n    disabled,\n    capture,\n    inputProps,\n    ...others\n  } = useProps(\"FileButton\", defaultProps, props);\n  const inputRef = useRef(null);\n  const onClick = () => {\n    !disabled && inputRef.current?.click();\n  };\n  const handleChange = event => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n  const reset = () => {\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [children({\n      onClick,\n      ...others\n    }), /* @__PURE__ */jsx(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      accept,\n      multiple,\n      onChange: handleChange,\n      ref: useMergedRef(ref, inputRef),\n      name,\n      form,\n      capture,\n      ...inputProps\n    })]\n  });\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"names":["defaultProps","multiple","FileButton","forwardRef","props","ref","onChange","children","accept","name","form","resetRef","disabled","capture","inputProps","others","useProps","inputRef","useRef","onClick","current","click","handleChange","event","Array","from","currentTarget","files","reset","value","assignRef","jsxs","Fragment","jsx","style","display","type","useMergedRef","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\FileButton\\FileButton.tsx"],"sourcesContent":["import { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children: (props: { onClick: () => void }) => React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Passes down props to the input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps,\n      ...others\n    } = useProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onClick = () => {\n      !disabled && inputRef.current?.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget!.files!) as any);\n      } else {\n        onChange(event.currentTarget!.files![0] || null);\n      }\n    };\n\n    const reset = () => {\n      if (inputRef.current) {\n        inputRef.current.value = '';\n      }\n    };\n\n    assignRef(resetRef!, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n          capture={capture}\n          {...inputProps}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"],"mappings":";;;;;;;;;;;;;;AAoCA,MAAMA,YAAyC;EAC7CC,QAAU;AACZ;AAMO,MAAMC,UAAkC,GAAAC,UAAA,CAC7C,CAACC,KAAA,EAAOC,GAAQ;EACR;IACJC,QAAA;IACAC,QAAA;IACAN,QAAA;IACAO,MAAA;IACAC,IAAA;IACAC,IAAA;IACAC,QAAA;IACAC,QAAA;IACAC,OAAA;IACAC,UAAA;IACA,GAAGC;EACD,IAAAC,QAAA,CAAS,YAAc,EAAAhB,YAAA,EAAcI,KAAK;EAExC,MAAAa,QAAA,GAAWC,MAAA,CAAyB,IAAI;EAE9C,MAAMC,OAAA,GAAUA,CAAA,KAAM;IACnB,CAAAP,QAAA,IAAYK,QAAS,CAAAG,OAAA,EAASC,KAAM;EACvC;EAEM,MAAAC,YAAA,GAAgBC,KAA+C;IACnE,IAAItB,QAAU;MACZK,QAAA,CAASkB,KAAM,CAAAC,IAAA,CAAKF,KAAM,CAAAG,aAAA,CAAeC,KAAM,CAAQ;IAAA,CAClD;MACLrB,QAAA,CAASiB,KAAM,CAAAG,aAAA,CAAeC,KAAO,EAAC,KAAK,IAAI;IAAA;EAEnD;EAEA,MAAMC,KAAA,GAAQA,CAAA,KAAM;IAClB,IAAIX,QAAA,CAASG,OAAS;MACpBH,QAAA,CAASG,OAAA,CAAQS,KAAQ;IAAA;EAE7B;EAEAC,SAAA,CAAUnB,QAAA,EAAWiB,KAAK;EAE1B,sBAEKG,IAAA,CAAAC,QAAA;IAAAzB,QAAA,GAAAA,QAAA,CAAS;MAAEY,OAAA;MAAS,GAAGJ;IAAA,CAAQ,kBAEhCkB,GAAA,CAAC;MACCC,KAAA,EAAO;QAAEC,OAAA,EAAS;MAAO;MACzBC,IAAK;MACL5B,MAAA;MACAP,QAAA;MACAK,QAAU,EAAAgB,YAAA;MACVjB,GAAA,EAAKgC,YAAa,CAAAhC,GAAA,EAAKY,QAAQ;MAC/BR,IAAA;MACAC,IAAA;MACAG,OAAA;MACC,GAAGC;IAAA;EAER;AAAA,CAGN;AAEAZ,UAAA,CAAWoC,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}