{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Divider.module.css.mjs';\nconst defaultProps = {\n  orientation: \"horizontal\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  variant,\n  size\n}) => ({\n  root: {\n    \"--divider-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--divider-border-style\": variant,\n    \"--divider-size\": getSize(size, \"divider-size\")\n  }\n}));\nconst Divider = factory((_props, ref) => {\n  const props = useProps(\"Divider\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Divider\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    mod: [{\n      orientation,\n      \"with-label\": !!label\n    }, mod],\n    ...getStyles(\"root\"),\n    ...others,\n    role: \"separator\",\n    children: label && /* @__PURE__ */jsx(Box, {\n      component: \"span\",\n      mod: {\n        position: labelPosition\n      },\n      ...getStyles(\"label\"),\n      children: label\n    })\n  });\n});\nDivider.classes = classes;\nDivider.displayName = \"@mantine/core/Divider\";\nexport { Divider };","map":{"version":3,"names":["defaultProps","orientation","varsResolver","createVarsResolver","theme","color","variant","size","root","getThemeColor","getSize","Divider","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","label","labelPosition","mod","others","getStyles","useStyles","name","classes","jsx","Box","role","children","component","position","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Divider\\Divider.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Divider.module.css';\n\nexport type DividerStylesNames = 'root' | 'label';\nexport type DividerVariant = 'solid' | 'dashed' | 'dotted';\nexport type DividerCssVariables = {\n  root: '--divider-color' | '--divider-border-style' | '--divider-size';\n};\n\nexport interface DividerProps\n  extends BoxProps,\n    StylesApiProps<DividerFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value, by default value depends on color scheme */\n  color?: MantineColor;\n\n  /** Controls width/height (depends on orientation), `'xs'` by default */\n  size?: MantineSize | number | (string & {});\n\n  /** Divider label, visible only when `orientation` is `horizontal` */\n  label?: React.ReactNode;\n\n  /** Controls label position, `'center'` by default */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Controls orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n}\n\nexport type DividerFactory = Factory<{\n  props: DividerProps;\n  ref: HTMLDivElement;\n  stylesNames: DividerStylesNames;\n  vars: DividerCssVariables;\n  variant: DividerVariant;\n}>;\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<DividerFactory>((theme, { color, variant, size }) => ({\n  root: {\n    '--divider-color': color ? getThemeColor(color, theme) : undefined,\n    '--divider-border-style': variant,\n    '--divider-size': getSize(size, 'divider-size'),\n  },\n}));\n\nexport const Divider = factory<DividerFactory>((_props, ref) => {\n  const props = useProps('Divider', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DividerFactory>({\n    name: 'Divider',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ orientation, 'with-label': !!label }, mod]}\n      {...getStyles('root')}\n      {...others}\n      role=\"separator\"\n    >\n      {label && (\n        <Box component=\"span\" mod={{ position: labelPosition }} {...getStyles('label')}>\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n});\n\nDivider.classes = classes;\nDivider.displayName = '@mantine/core/Divider';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAmDA,MAAMA,YAAsC;EAC1CC,WAAa;AACf;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAmC,CAACC,KAAA,EAAO;EAAEC,KAAO;EAAAC,OAAA;EAASC;AAAA,CAAY;EAC5FC,IAAM;IACJ,iBAAmB,EAAAH,KAAA,GAAQI,aAAc,CAAAJ,KAAA,EAAOD,KAAK,CAAI;IACzD,wBAA0B,EAAAE,OAAA;IAC1B,kBAAkBI,OAAQ,CAAAH,IAAA,EAAM,cAAc;EAAA;AAElD,CAAE;AAEK,MAAMI,OAAU,GAAAC,OAAA,CAAwB,CAACC,MAAA,EAAQC,GAAQ;EAC9D,MAAMC,KAAQ,GAAAC,QAAA,CAAS,SAAW,EAAAhB,YAAA,EAAca,MAAM;EAChD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB,KAAA;IACAJ,WAAA;IACAsB,KAAA;IACAC,aAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACD,GAAAX,KAAA;EAEJ,MAAMY,SAAA,GAAYC,SAA0B;IAC1CC,IAAM;IACNC,OAAA;IACAf,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACApB;EAAA,CACD;EAGC,sBAAA6B,GAAA,CAACC,GAAA;IACClB,GAAA;IACAW,GAAA,EAAK,CAAC;MAAExB,WAAA;MAAa,cAAc,CAAC,CAACsB;IAAM,GAAGE,GAAG;IAChD,GAAGE,SAAA,CAAU,MAAM;IACnB,GAAGD,MAAA;IACJO,IAAK;IAEJC,QACC,EAAAX,KAAA,mBAAAQ,GAAA,CAACC,GAAI;MAAAG,SAAA,EAAU;MAAOV,GAAK;QAAEW,QAAU,EAAAZ;MAAkB;MAAA,GAAGG,SAAU,QAAO;MAC1EO,QACH,EAAAX;IAAA;EAAA,CAEJ;AAEJ,CAAC;AAEDZ,OAAA,CAAQmB,OAAU,GAAAA,OAAA;AAClBnB,OAAA,CAAQ0B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}