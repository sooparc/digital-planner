{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { useMergedRef, useDebouncedCallback } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { useScrollbarContext } from '../ScrollAreaScrollbar/Scrollbar.context.mjs';\nimport { composeEventHandlers } from '../utils/compose-event-handlers.mjs';\nimport { addUnlinkedScrollListener } from '../utils/add-unlinked-scroll-listener.mjs';\nconst Thumb = forwardRef((props, forwardedRef) => {\n  const {\n    style,\n    ...others\n  } = props;\n  const scrollAreaContext = useScrollAreaContext();\n  const scrollbarContext = useScrollbarContext();\n  const {\n    onThumbPositionChange\n  } = scrollbarContext;\n  const composedRef = useMergedRef(forwardedRef, node => scrollbarContext.onThumbChange(node));\n  const removeUnlinkedScrollListenerRef = useRef(void 0);\n  const debounceScrollEnd = useDebouncedCallback(() => {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = void 0;\n    }\n  }, 100);\n  useEffect(() => {\n    const {\n      viewport\n    } = scrollAreaContext;\n    if (viewport) {\n      const handleScroll = () => {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n    return void 0;\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n  return /* @__PURE__ */jsx(\"div\", {\n    \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n    ...others,\n    ref: composedRef,\n    style: {\n      width: \"var(--sa-thumb-width)\",\n      height: \"var(--sa-thumb-height)\",\n      ...style\n    },\n    onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, event => {\n      const thumb = event.target;\n      const thumbRect = thumb.getBoundingClientRect();\n      const x = event.clientX - thumbRect.left;\n      const y = event.clientY - thumbRect.top;\n      scrollbarContext.onThumbPointerDown({\n        x,\n        y\n      });\n    }),\n    onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n  });\n});\nThumb.displayName = \"@mantine/core/ScrollAreaThumb\";\nconst ScrollAreaThumb = forwardRef((props, forwardedRef) => {\n  const {\n    forceMount,\n    ...thumbProps\n  } = props;\n  const scrollbarContext = useScrollbarContext();\n  if (forceMount || scrollbarContext.hasThumb) {\n    return /* @__PURE__ */jsx(Thumb, {\n      ref: forwardedRef,\n      ...thumbProps\n    });\n  }\n  return null;\n});\nScrollAreaThumb.displayName = \"@mantine/core/ScrollAreaThumb\";\nexport { ScrollAreaThumb, Thumb };","map":{"version":3,"names":["Thumb","forwardRef","props","forwardedRef","style","others","scrollAreaContext","useScrollAreaContext","scrollbarContext","useScrollbarContext","onThumbPositionChange","composedRef","useMergedRef","node","onThumbChange","removeUnlinkedScrollListenerRef","useRef","debounceScrollEnd","useDebouncedCallback","current","useEffect","viewport","handleScroll","listener","addUnlinkedScrollListener","addEventListener","removeEventListener","jsx","hasThumb","ref","width","height","onPointerDownCapture","composeEventHandlers","event","thumb","target","thumbRect","getBoundingClientRect","x","clientX","left","y","clientY","top","onThumbPointerDown","onPointerUp","onThumbPointerUp","displayName","ScrollAreaThumb","forceMount","thumbProps"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaThumb\\ScrollAreaThumb.tsx"],"sourcesContent":["import { forwardRef, useEffect, useRef } from 'react';\nimport { useDebouncedCallback, useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { useScrollbarContext } from '../ScrollAreaScrollbar/Scrollbar.context';\nimport { addUnlinkedScrollListener, composeEventHandlers } from '../utils';\n\ninterface ThumbProps extends React.ComponentPropsWithoutRef<'div'> {}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>((props, forwardedRef) => {\n  const { style, ...others } = props;\n  const scrollAreaContext = useScrollAreaContext();\n  const scrollbarContext = useScrollbarContext();\n  const { onThumbPositionChange } = scrollbarContext;\n  const composedRef = useMergedRef(forwardedRef, (node) => scrollbarContext.onThumbChange(node));\n  const removeUnlinkedScrollListenerRef = useRef<(() => void) | undefined>(undefined);\n  const debounceScrollEnd = useDebouncedCallback(() => {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = undefined;\n    }\n  }, 100);\n\n  useEffect(() => {\n    const { viewport } = scrollAreaContext;\n    if (viewport) {\n      const handleScroll = () => {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n\n    return undefined;\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n  return (\n    <div\n      data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n      {...others}\n      ref={composedRef}\n      style={{\n        width: 'var(--sa-thumb-width)',\n        height: 'var(--sa-thumb-height)',\n        ...style,\n      }}\n      onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n        const thumb = event.target as HTMLElement;\n        const thumbRect = thumb.getBoundingClientRect();\n        const x = event.clientX - thumbRect.left;\n        const y = event.clientY - thumbRect.top;\n        scrollbarContext.onThumbPointerDown({ x, y });\n      })}\n      onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n    />\n  );\n});\n\nThumb.displayName = '@mantine/core/ScrollAreaThumb';\n\ninterface ScrollAreaThumbProps extends ThumbProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaThumb = forwardRef<HTMLDivElement, ScrollAreaThumbProps>(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext();\n\n    if (forceMount || scrollbarContext.hasThumb) {\n      return <Thumb ref={forwardedRef} {...thumbProps} />;\n    }\n\n    return null;\n  }\n);\n\nScrollAreaThumb.displayName = '@mantine/core/ScrollAreaThumb';\n"],"mappings":";;;;;;;;;AAQO,MAAMA,KAAQ,GAAAC,UAAA,CAAuC,CAACC,KAAA,EAAOC,YAAiB;EACnF,MAAM;IAAEC,KAAA;IAAO,GAAGC;EAAA,CAAW,GAAAH,KAAA;EAC7B,MAAMI,iBAAA,GAAoBC,oBAAqB;EAC/C,MAAMC,gBAAA,GAAmBC,mBAAoB;EACvC;IAAEC;EAAA,CAA0B,GAAAF,gBAAA;EAC5B,MAAAG,WAAA,GAAcC,YAAA,CAAaT,YAAc,EAACU,IAAA,IAASL,gBAAiB,CAAAM,aAAA,CAAcD,IAAI,CAAC;EACvF,MAAAE,+BAAA,GAAkCC,MAAA,CAAiC,KAAS;EAC5E,MAAAC,iBAAA,GAAoBC,oBAAA,CAAqB,MAAM;IACnD,IAAIH,+BAAA,CAAgCI,OAAS;MAC3CJ,+BAAA,CAAgCI,OAAQ;MACxCJ,+BAAA,CAAgCI,OAAU;IAAA;EAC5C,GACC,GAAG;EAENC,SAAA,CAAU,MAAM;IACR;MAAEC;IAAA,CAAa,GAAAf,iBAAA;IACrB,IAAIe,QAAU;MACZ,MAAMC,YAAA,GAAeA,CAAA,KAAM;QACPL,iBAAA;QACd,KAACF,+BAAA,CAAgCI,OAAS;UACtC,MAAAI,QAAA,GAAWC,yBAA0B,CAAAH,QAAA,EAAUX,qBAAqB;UAC1EK,+BAAA,CAAgCI,OAAU,GAAAI,QAAA;UACpBb,qBAAA;QAAA;MAE1B;MACsBA,qBAAA;MACbW,QAAA,CAAAI,gBAAA,CAAiB,UAAUH,YAAY;MAChD,OAAO,MAAMD,QAAA,CAASK,mBAAoB,WAAUJ,YAAY;IAAA;IAG3D;EAAA,GACN,CAAChB,iBAAA,CAAkBe,QAAU,EAAAJ,iBAAA,EAAmBP,qBAAqB,CAAC;EAGvE,sBAAAiB,GAAA,CAAC;IACC,cAAYnB,gBAAiB,CAAAoB,QAAA,GAAW,SAAY;IACnD,GAAGvB,MAAA;IACJwB,GAAK,EAAAlB,WAAA;IACLP,KAAO;MACL0B,KAAO;MACPC,MAAQ;MACR,GAAG3B;IACL;IACA4B,oBAAsB,EAAAC,oBAAA,CAAqB/B,KAAM,CAAA8B,oBAAA,EAAuBE,KAAU;MAChF,MAAMC,KAAA,GAAQD,KAAM,CAAAE,MAAA;MACd,MAAAC,SAAA,GAAYF,KAAA,CAAMG,qBAAsB;MACxC,MAAAC,CAAA,GAAIL,KAAM,CAAAM,OAAA,GAAUH,SAAU,CAAAI,IAAA;MAC9B,MAAAC,CAAA,GAAIR,KAAM,CAAAS,OAAA,GAAUN,SAAU,CAAAO,GAAA;MACpCpC,gBAAA,CAAiBqC,kBAAmB;QAAEN,CAAG;QAAAG;MAAA,CAAG;IAAA,CAC7C;IACDI,WAAa,EAAAb,oBAAA,CAAqB/B,KAAM,CAAA4C,WAAA,EAAatC,gBAAA,CAAiBuC,gBAAgB;EAAA,CACxF;AAEJ,CAAC;AAED/C,KAAA,CAAMgD,WAAc;AAMb,MAAMC,eAAkB,GAAAhD,UAAA,CAC7B,CAACC,KAAA,EAAOC,YAAiB;EACvB,MAAM;IAAE+C,UAAA;IAAY,GAAGC;EAAA,CAAe,GAAAjD,KAAA;EACtC,MAAMM,gBAAA,GAAmBC,mBAAoB;EAEzC,IAAAyC,UAAA,IAAc1C,gBAAA,CAAiBoB,QAAU;IAC3C,OAAQ,eAAAD,GAAA,CAAA3B,KAAA;MAAM6B,GAAK,EAAA1B,YAAA;MAAe,GAAGgD;IAAY;EAAA;EAG5C;AAAA,CAEX;AAEAF,eAAA,CAAgBD,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}