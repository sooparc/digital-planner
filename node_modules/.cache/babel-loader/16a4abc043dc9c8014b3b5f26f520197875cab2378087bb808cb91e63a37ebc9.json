{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Badge.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  gradient,\n  variant,\n  size,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--badge-height\": getSize(size, \"badge-height\"),\n      \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n      \"--badge-fz\": getSize(size, \"badge-fz\"),\n      \"--badge-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--badge-bg\": color || variant ? colors.background : void 0,\n      \"--badge-color\": color || variant ? colors.color : void 0,\n      \"--badge-bd\": color || variant ? colors.border : void 0,\n      \"--badge-dot-color\": variant === \"dot\" ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Badge = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Badge\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, {\n    variant,\n    mod: [{\n      block: fullWidth,\n      circle,\n      \"with-right-section\": !!rightSection,\n      \"with-left-section\": !!leftSection\n    }, mod],\n    ...getStyles(\"root\", {\n      variant\n    }),\n    ref,\n    ...others,\n    children: [leftSection && /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"section\"),\n      \"data-position\": \"left\",\n      children: leftSection\n    }), /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"label\"),\n      children\n    }), rightSection && /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"section\"),\n      \"data-position\": \"right\",\n      children: rightSection\n    })]\n  });\n});\nBadge.classes = classes;\nBadge.displayName = \"@mantine/core/Badge\";\nexport { Badge };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","radius","color","gradient","variant","size","autoContrast","colors","variantColorResolver","primaryColor","root","getSize","getRadius","background","border","getThemeColor","Badge","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","leftSection","rightSection","children","fullWidth","circle","mod","others","getStyles","useStyles","name","classes","jsxs","Box","block","jsx","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Badge\\Badge.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Badge.module.css';\n\nexport type BadgeStylesNames = 'root' | 'section' | 'label';\nexport type BadgeVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'dot'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type BadgeCssVariables = {\n  root:\n    | '--badge-height'\n    | '--badge-padding-x'\n    | '--badge-fz'\n    | '--badge-radius'\n    | '--badge-bg'\n    | '--badge-color'\n    | '--badge-bd'\n    | '--badge-dot-color';\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** If set, badge `min-width` becomes equal to its `height` and horizontal padding is removed */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width, `false` by default */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst defaultProps: Partial<BadgeProps> = {};\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--badge-height': getSize(size, 'badge-height'),\n        '--badge-padding-x': getSize(size, 'badge-padding-x'),\n        '--badge-fz': getSize(size, 'badge-fz'),\n        '--badge-radius': radius === undefined ? undefined : getRadius(radius),\n        '--badge-bg': color || variant ? colors.background : undefined,\n        '--badge-color': color || variant ? colors.color : undefined,\n        '--badge-bd': color || variant ? colors.border : undefined,\n        '--badge-dot-color': variant === 'dot' ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  }\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps('Badge', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: 'Badge',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={[\n        {\n          block: fullWidth,\n          circle,\n          'with-right-section': !!rightSection,\n          'with-left-section': !!leftSection,\n        },\n        mod,\n      ]}\n      {...getStyles('root', { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles('section')} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles('label')}>{children}</span>\n      {rightSection && (\n        <span {...getStyles('section')} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.classes = classes;\nBadge.displayName = '@mantine/core/Badge';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAmFA,MAAMA,YAAA,GAAoC,CAAC;AAE3C,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,KAAA,EAAO;EAAEC,MAAA;EAAQC,KAAA;EAAOC,QAAU;EAAAC,OAAA;EAASC,IAAM;EAAAC;AAAA,CAAmB;EAC7D,MAAAC,MAAA,GAASP,KAAA,CAAMQ,oBAAqB;IACxCN,KAAA,EAAOA,KAAA,IAASF,KAAM,CAAAS,YAAA;IACtBT,KAAA;IACAG,QAAA;IACAC,OAAA,EAASA,OAAW;IACpBE;EAAA,CACD;EAEM;IACLI,IAAM;MACJ,kBAAkBC,OAAQ,CAAAN,IAAA,EAAM,cAAc;MAC9C,qBAAqBM,OAAQ,CAAAN,IAAA,EAAM,iBAAiB;MACpD,cAAcM,OAAQ,CAAAN,IAAA,EAAM,UAAU;MACtC,gBAAkB,EAAAJ,MAAA,KAAW,KAAY,aAAYW,SAAA,CAAUX,MAAM;MACrE,YAAc,EAAAC,KAAA,IAASE,OAAU,GAAAG,MAAA,CAAOM,UAAa;MACrD,eAAiB,EAAAX,KAAA,IAASE,OAAU,GAAAG,MAAA,CAAOL,KAAQ;MACnD,YAAc,EAAAA,KAAA,IAASE,OAAU,GAAAG,MAAA,CAAOO,MAAS;MACjD,qBAAqBV,OAAY,aAAQW,aAAc,CAAAb,KAAA,EAAOF,KAAK,CAAI;IAAA;EAE3E;AAAA,CAEJ;AAEO,MAAMgB,KAAQ,GAAAC,kBAAA,CAAiC,CAACC,MAAA,EAAQC,GAAQ;EACrE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,OAAS,EAAAxB,YAAA,EAAcqB,MAAM;EAC9C;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACA1B,MAAA;IACAC,KAAA;IACAC,QAAA;IACAyB,WAAA;IACAC,YAAA;IACAC,QAAA;IACA1B,OAAA;IACA2B,SAAA;IACAzB,YAAA;IACA0B,MAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACD,GAAAd,KAAA;EAEJ,MAAMe,SAAA,GAAYC,SAAwB;IACxCC,IAAM;IACNjB,KAAA;IACAkB,OAAA;IACAf,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACA7B;EAAA,CACD;EAGC,sBAAAyC,IAAA,CAACC,GAAA;IACCpC,OAAA;IACA6B,GAAK,GACH;MACEQ,KAAO,EAAAV,SAAA;MACPC,MAAA;MACA,sBAAsB,CAAC,CAACH,YAAA;MACxB,qBAAqB,CAAC,CAACD;IACzB,GACAK,GAAA,CACF;IACC,GAAGE,SAAA,CAAU,MAAQ;MAAE/B;IAAA,CAAS;IACjCe,GAAA;IACC,GAAGe,MAAA;IAEHJ,QAAA,GACCF,WAAA,mBAAAc,GAAA,CAAC;MAAM,GAAGP,SAAA,CAAU,SAAS,CAAG;MAAA,iBAAc;MAC3CL,QACH,EAAAF;IAAA,mBAAAc,GAAA,CAED,MAAM;MAAA,GAAGP,SAAU,QAAO;MAAIL;IAAS,IACvCD,YAAA,mBAAAa,GAAA,CACE,MAAM;MAAA,GAAGP,SAAA,CAAU,SAAS;MAAG,eAAc;MAC3CL,QACH,EAAAD;IAAA;EAAA,CAEJ;AAEJ,CAAC;AAEDb,KAAA,CAAMsB,OAAU,GAAAA,OAAA;AAChBtB,KAAA,CAAM2B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}