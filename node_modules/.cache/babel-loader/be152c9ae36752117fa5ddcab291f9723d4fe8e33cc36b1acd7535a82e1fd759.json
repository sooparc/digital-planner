{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useId } from '@mantine/hooks';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport classes from './Alert.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  variant,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--alert-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--alert-bg\": color || variant ? colors.background : void 0,\n      \"--alert-color\": colors.color,\n      \"--alert-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Alert = factory((_props, ref) => {\n  const props = useProps(\"Alert\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Alert\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const rootId = useId(id);\n  const titleId = title && `${rootId}-title` || void 0;\n  const bodyId = `${rootId}-body`;\n  return /* @__PURE__ */jsx(Box, {\n    id: rootId,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    variant,\n    ref,\n    ...others,\n    role: \"alert\",\n    \"aria-describedby\": bodyId,\n    \"aria-labelledby\": titleId,\n    children: /* @__PURE__ */jsxs(\"div\", {\n      ...getStyles(\"wrapper\"),\n      children: [icon && /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"icon\"),\n        children: icon\n      }), /* @__PURE__ */jsxs(\"div\", {\n        ...getStyles(\"body\"),\n        children: [title && /* @__PURE__ */jsx(\"div\", {\n          ...getStyles(\"title\"),\n          \"data-with-close-button\": withCloseButton || void 0,\n          children: /* @__PURE__ */jsx(\"span\", {\n            id: titleId,\n            ...getStyles(\"label\"),\n            children: title\n          })\n        }), children && /* @__PURE__ */jsx(\"div\", {\n          id: bodyId,\n          ...getStyles(\"message\"),\n          \"data-variant\": variant,\n          children\n        })]\n      }), withCloseButton && /* @__PURE__ */jsx(CloseButton, {\n        ...getStyles(\"closeButton\"),\n        onClick: onClose,\n        variant: \"transparent\",\n        size: 16,\n        iconSize: 16,\n        \"aria-label\": closeButtonLabel,\n        unstyled\n      })]\n    })\n  });\n});\nAlert.classes = classes;\nAlert.displayName = \"@mantine/core/Alert\";\nexport { Alert };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","radius","color","variant","autoContrast","colors","variantColorResolver","primaryColor","root","getRadius","background","border","Alert","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","title","children","id","icon","withCloseButton","onClose","closeButtonLabel","others","getStyles","useStyles","name","classes","rootId","useId","titleId","bodyId","jsx","Box","role","jsxs","CloseButton","onClick","size","iconSize","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Alert\\Alert.tsx"],"sourcesContent":["import { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport classes from './Alert.module.css';\n\nexport type AlertStylesNames =\n  | 'root'\n  | 'body'\n  | 'label'\n  | 'title'\n  | 'icon'\n  | 'wrapper'\n  | 'message'\n  | 'closeButton';\nexport type AlertVariant = 'filled' | 'light' | 'outline' | 'default' | 'transparent' | 'white';\nexport type AlertCssVariables = {\n  root: '--alert-radius' | '--alert-bg' | '--alert-color' | '--alert-bd';\n};\n\nexport interface AlertProps\n  extends BoxProps,\n    StylesApiProps<AlertFactory>,\n    ElementProps<'div', 'title'> {\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Alert title */\n  title?: React.ReactNode;\n\n  /** Icon displayed next to the title */\n  icon?: React.ReactNode;\n\n  /** Determines whether close button should be displayed, `false` by default */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Close button `aria-label` */\n  closeButtonLabel?: string;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type AlertFactory = Factory<{\n  props: AlertProps;\n  ref: HTMLDivElement;\n  stylesNames: AlertStylesNames;\n  vars: AlertCssVariables;\n  variant: AlertVariant;\n}>;\n\nconst defaultProps: Partial<AlertProps> = {};\n\nconst varsResolver = createVarsResolver<AlertFactory>(\n  (theme, { radius, color, variant, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--alert-radius': radius === undefined ? undefined : getRadius(radius),\n        '--alert-bg': color || variant ? colors.background : undefined,\n        '--alert-color': colors.color,\n        '--alert-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Alert = factory<AlertFactory>((_props, ref) => {\n  const props = useProps('Alert', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AlertFactory>({\n    name: 'Alert',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const rootId = useId(id);\n  const titleId = (title && `${rootId}-title`) || undefined;\n  const bodyId = `${rootId}-body`;\n\n  return (\n    <Box\n      id={rootId}\n      {...getStyles('root', { variant })}\n      variant={variant}\n      ref={ref}\n      {...others}\n      role=\"alert\"\n      aria-describedby={bodyId}\n      aria-labelledby={titleId}\n    >\n      <div {...getStyles('wrapper')}>\n        {icon && <div {...getStyles('icon')}>{icon}</div>}\n\n        <div {...getStyles('body')}>\n          {title && (\n            <div {...getStyles('title')} data-with-close-button={withCloseButton || undefined}>\n              <span id={titleId} {...getStyles('label')}>\n                {title}\n              </span>\n            </div>\n          )}\n\n          {children && (\n            <div id={bodyId} {...getStyles('message')} data-variant={variant}>\n              {children}\n            </div>\n          )}\n        </div>\n\n        {withCloseButton && (\n          <CloseButton\n            {...getStyles('closeButton')}\n            onClick={onClose}\n            variant=\"transparent\"\n            size={16}\n            iconSize={16}\n            aria-label={closeButtonLabel}\n            unstyled={unstyled}\n          />\n        )}\n      </div>\n    </Box>\n  );\n});\n\nAlert.classes = classes;\nAlert.displayName = '@mantine/core/Alert';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}