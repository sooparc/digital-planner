{"ast":null,"code":"'use client';\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.mjs';\nconst eventListerOptions = {\n  passive: true\n};\nfunction useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const setSize = useCallback(() => {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0\n    });\n  }, []);\n  useWindowEvent(\"resize\", setSize, eventListerOptions);\n  useWindowEvent(\"orientationchange\", setSize, eventListerOptions);\n  useEffect(setSize, []);\n  return windowSize;\n}\nexport { useViewportSize };","map":{"version":3,"names":["eventListerOptions","passive","useViewportSize","windowSize","setWindowSize","useState","width","height","setSize","useCallback","window","innerWidth","innerHeight","useWindowEvent","useEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-viewport-size\\use-viewport-size.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nconst eventListerOptions = {\n  passive: true,\n};\n\nexport function useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  const setSize = useCallback(() => {\n    setWindowSize({ width: window.innerWidth || 0, height: window.innerHeight || 0 });\n  }, []);\n\n  useWindowEvent('resize', setSize, eventListerOptions);\n  useWindowEvent('orientationchange', setSize, eventListerOptions);\n  useEffect(setSize, []);\n\n  return windowSize;\n}\n"],"mappings":";;;;AAGA,MAAMA,kBAAqB;EACzBC,OAAS;AACX;AAEO,SAASC,eAAkBA,CAAA;EAChC,MAAM,CAACC,UAAA,EAAYC,aAAa,IAAIC,QAAS;IAC3CC,KAAO;IACPC,MAAQ;EAAA,CACT;EAEK,MAAAC,OAAA,GAAUC,WAAA,CAAY,MAAM;IAClBL,aAAA;MAAEE,KAAA,EAAOI,MAAO,CAAAC,UAAA,IAAc;MAAGJ,MAAQ,EAAAG,MAAA,CAAOE,WAAe;IAAA,CAAG;EAClF,GAAG,EAAE;EAEUC,cAAA,WAAUL,OAAA,EAASR,kBAAkB;EACrCa,cAAA,sBAAqBL,OAAA,EAASR,kBAAkB;EACrDc,SAAA,CAAAN,OAAA,EAAS,EAAE;EAEd,OAAAL,UAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}