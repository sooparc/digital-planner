{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useAppShellContext } from '../AppShell.context.mjs';\nimport classes from '../AppShell.module.css.mjs';\nconst defaultProps = {};\nconst AppShellMain = factory((_props, ref) => {\n  const props = useProps(\"AppShellMain\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n  return /* @__PURE__ */jsx(Box, {\n    component: \"main\",\n    ref,\n    ...ctx.getStyles(\"main\", {\n      className,\n      style,\n      classNames,\n      styles\n    }),\n    ...others\n  });\n});\nAppShellMain.classes = classes;\nAppShellMain.displayName = \"@mantine/core/AppShellMain\";\nexport { AppShellMain };","map":{"version":3,"names":["defaultProps","AppShellMain","factory","_props","ref","props","useProps","classNames","className","style","styles","vars","others","ctx","useAppShellContext","jsx","Box","component","getStyles","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\AppShell\\AppShellMain\\AppShellMain.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellMainStylesNames = 'main';\n\nexport interface AppShellMainProps\n  extends BoxProps,\n    CompoundStylesApiProps<AppShellMainFactory>,\n    ElementProps<'main'> {}\n\nexport type AppShellMainFactory = Factory<{\n  props: AppShellMainProps;\n  ref: HTMLElement;\n  stylesNames: AppShellMainStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AppShellMainProps> = {};\n\nexport const AppShellMain = factory<AppShellMainFactory>((_props, ref) => {\n  const props = useProps('AppShellMain', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n  const ctx = useAppShellContext();\n\n  return (\n    <Box\n      component=\"main\"\n      ref={ref}\n      {...ctx.getStyles('main', { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nAppShellMain.classes = classes;\nAppShellMain.displayName = '@mantine/core/AppShellMain';\n"],"mappings":";;;;;;;;;;;;;;;;;AA0BA,MAAMA,YAAA,GAA2C,CAAC;AAE3C,MAAMC,YAAe,GAAAC,OAAA,CAA6B,CAACC,MAAA,EAAQC,GAAQ;EACxE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,cAAgB,EAAAN,YAAA,EAAcG,MAAM;EACrD;IAAEI,UAAA;IAAYC,SAAW;IAAAC,KAAA;IAAOC,MAAA;IAAQC,IAAM;IAAA,GAAGC;EAAA,CAAW,GAAAP,KAAA;EAClE,MAAMQ,GAAA,GAAMC,kBAAmB;EAG7B,sBAAAC,GAAA,CAACC,GAAA;IACCC,SAAU;IACVb,GAAA;IACC,GAAGS,GAAA,CAAIK,SAAU,SAAQ;MAAEV,SAAW;MAAAC,KAAA;MAAOF,UAAY;MAAAG;IAAA,CAAQ;IACjE,GAAGE;EAAA,CACN;AAEJ,CAAC;AAEDX,YAAA,CAAakB,OAAU,GAAAA,OAAA;AACvBlB,YAAA,CAAamB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}