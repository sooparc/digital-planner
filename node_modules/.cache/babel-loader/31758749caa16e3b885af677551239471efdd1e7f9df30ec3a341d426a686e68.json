{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.mjs';\nfunction useFocusReturn({\n  opened,\n  shouldReturnFocus = true\n}) {\n  const lastActiveElement = useRef(null);\n  const returnFocus = () => {\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      lastActiveElement.current?.focus({\n        preventScroll: true\n      });\n    }\n  };\n  useDidUpdate(() => {\n    let timeout = -1;\n    const clearFocusTimeout = event => {\n      if (event.key === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n  return returnFocus;\n}\nexport { useFocusReturn };","map":{"version":3,"names":["useFocusReturn","opened","shouldReturnFocus","lastActiveElement","useRef","returnFocus","current","focus","preventScroll","useDidUpdate","timeout","clearFocusTimeout","event","key","window","clearTimeout","document","addEventListener","activeElement","setTimeout","removeEventListener"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-focus-return\\use-focus-return.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  shouldReturnFocus?: boolean;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({ opened, shouldReturnFocus = true }: UseFocusReturn) {\n  const lastActiveElement = useRef<HTMLElement>(null);\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus({ preventScroll: true });\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n\n  return returnFocus;\n}\n"],"mappings":";;;;AASO,SAASA,cAAeA,CAAA;EAAEC,MAAQ;EAAAC,iBAAA,GAAoB;AAAA,CAAwB;EAC7E,MAAAC,iBAAA,GAAoBC,MAAA,CAAoB,IAAI;EAClD,MAAMC,WAAA,GAAcA,CAAA,KAAM;IAEtB,IAAAF,iBAAA,CAAkBG,OAAA,IAClB,OAAW,IAAAH,iBAAA,CAAkBG,OAAA,IAC7B,OAAOH,iBAAA,CAAkBG,OAAQ,CAAAC,KAAA,KAAU,UAC3C;MACAJ,iBAAA,CAAkBG,OAAS,EAAAC,KAAA,CAAM;QAAEC,aAAA,EAAe;MAAA,CAAM;IAAA;EAE5D;EAEAC,YAAA,CAAa,MAAM;IACjB,IAAIC,OAAU;IAER,MAAAC,iBAAA,GAAqBC,KAAyB;MAC9C,IAAAA,KAAA,CAAMC,GAAA,KAAQ,KAAO;QACvBC,MAAA,CAAOC,YAAA,CAAaL,OAAO;MAAA;IAE/B;IAESM,QAAA,CAAAC,gBAAA,CAAiB,WAAWN,iBAAiB;IAEtD,IAAIV,MAAQ;MACVE,iBAAA,CAAkBG,OAAA,GAAUU,QAAS,CAAAE,aAAA;IAAA,WAC5BhB,iBAAmB;MAClBQ,OAAA,GAAAI,MAAA,CAAOK,UAAW,CAAAd,WAAA,EAAa,EAAE;IAAA;IAG7C,OAAO,MAAM;MACXS,MAAA,CAAOC,YAAA,CAAaL,OAAO;MAClBM,QAAA,CAAAI,mBAAA,CAAoB,WAAWT,iBAAiB;IAC3D;EAAA,CACC,GAACV,MAAQ,EAAAC,iBAAiB,CAAC;EAEvB,OAAAG,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}