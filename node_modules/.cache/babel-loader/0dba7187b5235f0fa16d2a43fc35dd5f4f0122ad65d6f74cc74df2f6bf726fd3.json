{"ast":null,"code":"'use client';\n\nfunction createPinArray(length, value) {\n  if (length < 1) {\n    return [];\n  }\n  const values = new Array(length).fill(\"\");\n  if (value) {\n    const splitted = value.trim().split(\"\");\n    for (let i = 0; i < Math.min(length, splitted.length); i += 1) {\n      values[i] = splitted[i] === \" \" ? \"\" : splitted[i];\n    }\n  }\n  return values;\n}\nexport { createPinArray };","map":{"version":3,"names":["createPinArray","length","value","values","Array","fill","splitted","trim","split","i","Math","min"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\PinInput\\create-pin-array\\create-pin-array.ts"],"sourcesContent":["export function createPinArray(length: number, value: string): string[] {\n  if (length < 1) {\n    return [];\n  }\n\n  const values = new Array<string>(length).fill('');\n\n  if (value) {\n    const splitted = value.trim().split('');\n    for (let i = 0; i < Math.min(length, splitted.length); i += 1) {\n      values[i] = splitted[i] === ' ' ? '' : splitted[i];\n    }\n  }\n\n  return values;\n}\n"],"mappings":";;AAAgB,SAAAA,eAAeC,MAAA,EAAgBC,KAAyB;EACtE,IAAID,MAAA,GAAS,CAAG;IACd,OAAO,EAAC;EAAA;EAGV,MAAME,MAAA,GAAS,IAAIC,KAAA,CAAcH,MAAM,EAAEI,IAAA,CAAK,EAAE;EAEhD,IAAIH,KAAO;IACT,MAAMI,QAAW,GAAAJ,KAAA,CAAMK,IAAK,GAAEC,KAAA,CAAM,EAAE;IAC7B,SAAAC,CAAA,GAAI,CAAG,EAAAA,CAAA,GAAIC,IAAK,CAAAC,GAAA,CAAIV,MAAA,EAAQK,QAAS,CAAAL,MAAM,CAAG,EAAAQ,CAAA,IAAK,CAAG;MACtDN,MAAA,CAAAM,CAAC,IAAIH,QAAS,CAAAG,CAAC,MAAM,GAAM,QAAKH,QAAA,CAASG,CAAC;IAAA;EACnD;EAGK,OAAAN,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}