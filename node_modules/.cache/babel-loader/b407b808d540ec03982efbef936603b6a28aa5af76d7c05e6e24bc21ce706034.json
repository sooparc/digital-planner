{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useEffect } from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ModalBody } from './ModalBody.mjs';\nimport { ModalCloseButton } from './ModalCloseButton.mjs';\nimport { ModalContent } from './ModalContent.mjs';\nimport { ModalHeader } from './ModalHeader.mjs';\nimport { ModalOverlay } from './ModalOverlay.mjs';\nimport { ModalRoot } from './ModalRoot.mjs';\nimport { ModalStack, useModalStackContext } from './ModalStack.mjs';\nimport { ModalTitle } from './ModalTitle.mjs';\nimport classes from './Modal.module.css.mjs';\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex(\"modal\"),\n  transitionProps: {\n    duration: 200,\n    transition: \"fade-down\"\n  },\n  withOverlay: true,\n  withCloseButton: true\n};\nconst Modal = factory((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    radius,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps(\"Modal\", defaultProps, _props);\n  const ctx = useModalStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps = ctx && stackId ? {\n    closeOnEscape: ctx.currentId === stackId,\n    trapFocus: ctx.currentId === stackId,\n    zIndex: ctx.getZIndex(stackId)\n  } : {};\n  const overlayVisible = withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened ? ctx.addModal(stackId, zIndex || getDefaultZIndex(\"modal\")) : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n  return /* @__PURE__ */jsxs(ModalRoot, {\n    ref,\n    radius,\n    opened,\n    zIndex: ctx && stackId ? ctx.getZIndex(stackId) : zIndex,\n    ...others,\n    ...stackProps,\n    children: [withOverlay && /* @__PURE__ */jsx(ModalOverlay, {\n      visible: overlayVisible,\n      transitionProps: ctx && stackId ? {\n        duration: 0\n      } : void 0,\n      ...overlayProps\n    }), /* @__PURE__ */jsxs(ModalContent, {\n      radius,\n      __hidden: ctx && stackId && opened ? stackId !== ctx.currentId : false,\n      children: [hasHeader && /* @__PURE__ */jsxs(ModalHeader, {\n        children: [title && /* @__PURE__ */jsx(ModalTitle, {\n          children: title\n        }), withCloseButton && /* @__PURE__ */jsx(ModalCloseButton, {\n          ...closeButtonProps\n        })]\n      }), /* @__PURE__ */jsx(ModalBody, {\n        children\n      })]\n    })]\n  });\n});\nModal.classes = classes;\nModal.displayName = \"@mantine/core/Modal\";\nModal.Root = ModalRoot;\nModal.Overlay = ModalOverlay;\nModal.Content = ModalContent;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.CloseButton = ModalCloseButton;\nModal.Stack = ModalStack;\nexport { Modal };","map":{"version":3,"names":["defaultProps","closeOnClickOutside","withinPortal","lockScroll","trapFocus","returnFocus","closeOnEscape","keepMounted","zIndex","getDefaultZIndex","transitionProps","duration","transition","withOverlay","withCloseButton","Modal","factory","_props","ref","title","overlayProps","closeButtonProps","children","radius","opened","stackId","others","useProps","ctx","useModalStackContext","hasHeader","stackProps","currentId","getZIndex","overlayVisible","useEffect","addModal","removeModal","jsxs","ModalRoot","jsx","ModalOverlay","visible","ModalContent","__hidden","ModalHeader","ModalTitle","ModalCloseButton","ModalBody","classes","displayName","Root","Overlay","Content","Body","Header","Title","CloseButton","Stack","ModalStack"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Modal\\Modal.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { ModalBody } from './ModalBody';\nimport { ModalCloseButton } from './ModalCloseButton';\nimport { ModalContent } from './ModalContent';\nimport { ModalHeader } from './ModalHeader';\nimport { ModalOverlay } from './ModalOverlay';\nimport {\n  ModalRoot,\n  ModalRootCssVariables,\n  ModalRootProps,\n  ModalRootStylesNames,\n} from './ModalRoot';\nimport { ModalStack, useModalStackContext } from './ModalStack';\nimport { ModalTitle } from './ModalTitle';\nimport classes from './Modal.module.css';\n\nexport type ModalStylesNames = ModalRootStylesNames;\nexport type ModalCssVariables = ModalRootCssVariables;\n\nexport interface ModalProps extends ModalRootProps {\n  __staticSelector?: string;\n\n  /** Modal title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, use to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Modal content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n\n  /** Id of the modal in the `Modal.Stack` */\n  stackId?: string;\n}\n\nexport type ModalFactory = Factory<{\n  props: ModalProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalStylesNames;\n  vars: ModalCssVariables;\n  staticComponents: {\n    Root: typeof ModalRoot;\n    Overlay: typeof ModalOverlay;\n    Content: typeof ModalContent;\n    Body: typeof ModalBody;\n    Header: typeof ModalHeader;\n    Title: typeof ModalTitle;\n    CloseButton: typeof ModalCloseButton;\n    Stack: typeof ModalStack;\n  };\n}>;\n\nconst defaultProps: Partial<ModalProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  transitionProps: { duration: 200, transition: 'fade-down' },\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Modal = factory<ModalFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    radius,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps('Modal', defaultProps, _props);\n  const ctx = useModalStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps =\n    ctx && stackId\n      ? {\n          closeOnEscape: ctx.currentId === stackId,\n          trapFocus: ctx.currentId === stackId,\n          zIndex: ctx.getZIndex(stackId),\n        }\n      : {};\n\n  const overlayVisible =\n    withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened\n        ? ctx.addModal(stackId, zIndex || getDefaultZIndex('modal'))\n        : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n\n  return (\n    <ModalRoot\n      ref={ref}\n      radius={radius}\n      opened={opened}\n      zIndex={ctx && stackId ? ctx.getZIndex(stackId) : zIndex}\n      {...others}\n      {...stackProps}\n    >\n      {withOverlay && (\n        <ModalOverlay\n          visible={overlayVisible}\n          transitionProps={ctx && stackId ? { duration: 0 } : undefined}\n          {...overlayProps}\n        />\n      )}\n      <ModalContent\n        radius={radius}\n        __hidden={ctx && stackId && opened ? stackId !== ctx.currentId : false}\n      >\n        {hasHeader && (\n          <ModalHeader>\n            {title && <ModalTitle>{title}</ModalTitle>}\n            {withCloseButton && <ModalCloseButton {...closeButtonProps} />}\n          </ModalHeader>\n        )}\n\n        <ModalBody>{children}</ModalBody>\n      </ModalContent>\n    </ModalRoot>\n  );\n});\n\nModal.classes = classes;\nModal.displayName = '@mantine/core/Modal';\nModal.Root = ModalRoot;\nModal.Overlay = ModalOverlay;\nModal.Content = ModalContent;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.CloseButton = ModalCloseButton;\nModal.Stack = ModalStack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}