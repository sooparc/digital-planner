{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Image.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, {\n  radius,\n  fit\n}) => ({\n  root: {\n    \"--image-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--image-object-fit\": fit\n  }\n}));\nconst Image = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Image\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n  const [error, setError] = useState(!src);\n  useEffect(() => setError(!src), [src]);\n  const getStyles = useStyles({\n    name: \"Image\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  if (error && fallbackSrc) {\n    return /* @__PURE__ */jsx(Box, {\n      component: \"img\",\n      ref,\n      src: fallbackSrc,\n      ...getStyles(\"root\"),\n      onError,\n      mod: [\"fallback\", mod],\n      ...others\n    });\n  }\n  return /* @__PURE__ */jsx(Box, {\n    component: \"img\",\n    ref,\n    ...getStyles(\"root\"),\n    src,\n    onError: event => {\n      onError?.(event);\n      setError(true);\n    },\n    mod,\n    ...others\n  });\n});\nImage.classes = classes;\nImage.displayName = \"@mantine/core/Image\";\nexport { Image };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","_","radius","fit","root","getRadius","Image","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","onError","src","fallbackSrc","mod","others","error","setError","useState","useEffect","getStyles","useStyles","name","classes","jsx","Box","component","event","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Image\\Image.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `0` by default */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style, `'cover'` by default */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url that will be used as a fallback in case `src` prop is not set or image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst defaultProps: Partial<ImageProps> = {};\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        ref={ref}\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod={['fallback', mod]}\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      mod={mod}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AA6CA,MAAMA,YAAA,GAAoC,CAAC;AAE3C,MAAMC,YAAA,GAAeC,kBAAiC,EAACC,CAAA,EAAG;EAAEC,MAAA;EAAQC;AAAA,CAAW;EAC7EC,IAAM;IACJ,gBAAkB,EAAAF,MAAA,KAAW,KAAY,aAAYG,SAAA,CAAUH,MAAM;IACrE,oBAAsB,EAAAC;EAAA;AAE1B,CAAE;AAEK,MAAMG,KAAQ,GAAAC,kBAAA,CAAiC,CAACC,MAAA,EAAQC,GAAQ;EACrE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,OAAS,EAAAb,YAAA,EAAcU,MAAM;EAC9C;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,OAAA;IACAC,GAAA;IACAjB,MAAA;IACAC,GAAA;IACAiB,WAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACD,GAAAZ,KAAA;EAEJ,MAAM,CAACa,KAAO,EAAAC,QAAQ,CAAI,GAAAC,QAAA,CAAS,CAACN,GAAG;EAEvCO,SAAA,CAAU,MAAMF,QAAS,EAACL,GAAG,CAAG,GAACA,GAAG,CAAC;EAErC,MAAMQ,SAAA,GAAYC,SAAwB;IACxCC,IAAM;IACNC,OAAA;IACApB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAlB;EAAA,CACD;EAED,IAAIwB,KAAA,IAASH,WAAa;IAEtB,sBAAAW,GAAA,CAACC,GAAA;MACCC,SAAU;MACVxB,GAAA;MACAU,GAAK,EAAAC,WAAA;MACJ,GAAGO,SAAA,CAAU,MAAM;MACpBT,OAAA;MACAG,GAAA,EAAK,CAAC,YAAYA,GAAG;MACpB,GAAGC;IAAA,CACN;EAAA;EAKF,sBAAAS,GAAA,CAACC,GAAA;IACCC,SAAU;IACVxB,GAAA;IACC,GAAGkB,SAAA,CAAU,MAAM;IACpBR,GAAA;IACAD,OAAA,EAAUgB,KAAU;MAClBhB,OAAA,GAAUgB,KAAK;MACfV,QAAA,CAAS,IAAI;IACf;IACAH,GAAA;IACC,GAAGC;EAAA,CACN;AAEJ,CAAC;AAEDhB,KAAA,CAAMwB,OAAU,GAAAA,OAAA;AAChBxB,KAAA,CAAM6B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}