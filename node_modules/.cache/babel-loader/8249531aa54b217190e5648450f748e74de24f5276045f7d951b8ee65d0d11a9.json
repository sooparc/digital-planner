{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './ThemeIcon.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  size,\n  radius,\n  variant,\n  gradient,\n  color,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--ti-size\": getSize(size, \"ti-size\"),\n      \"--ti-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--ti-bg\": color || variant ? colors.background : void 0,\n      \"--ti-color\": color || variant ? colors.color : void 0,\n      \"--ti-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst ThemeIcon = factory((_props, ref) => {\n  const props = useProps(\"ThemeIcon\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"ThemeIcon\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    ...others\n  });\n});\nThemeIcon.classes = classes;\nThemeIcon.displayName = \"@mantine/core/ThemeIcon\";\nexport { ThemeIcon };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","size","radius","variant","gradient","color","autoContrast","colors","variantColorResolver","primaryColor","root","getSize","getRadius","background","border","ThemeIcon","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","others","getStyles","useStyles","name","classes","jsx","Box","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ThemeIcon\\ThemeIcon.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './ThemeIcon.module.css';\n\nexport type ThemeIconStylesNames = 'root';\nexport type ThemeIconVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type ThemeIconCssVariables = {\n  root: '--ti-radius' | '--ti-size' | '--ti-bg' | '--ti-color' | '--ti-bd';\n};\n\nexport interface ThemeIconProps\n  extends BoxProps,\n    StylesApiProps<ThemeIconFactory>,\n    ElementProps<'div'> {\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color. Default value is `theme.primaryColor`.  */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n\n  /** Gradient data used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Icon displayed inside the component */\n  children?: React.ReactNode;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type ThemeIconFactory = Factory<{\n  props: ThemeIconProps;\n  ref: HTMLDivElement;\n  stylesNames: ThemeIconStylesNames;\n  vars: ThemeIconCssVariables;\n  variant: ThemeIconVariant;\n}>;\n\nconst defaultProps: Partial<ThemeIconProps> = {};\n\nconst varsResolver = createVarsResolver<ThemeIconFactory>(\n  (theme, { size, radius, variant, gradient, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--ti-size': getSize(size, 'ti-size'),\n        '--ti-radius': radius === undefined ? undefined : getRadius(radius),\n        '--ti-bg': color || variant ? colors.background : undefined,\n        '--ti-color': color || variant ? colors.color : undefined,\n        '--ti-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const ThemeIcon = factory<ThemeIconFactory>((_props, ref) => {\n  const props = useProps('ThemeIcon', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, autoContrast, ...others } = props;\n\n  const getStyles = useStyles<ThemeIconFactory>({\n    name: 'ThemeIcon',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} {...others} />;\n});\n\nThemeIcon.classes = classes;\nThemeIcon.displayName = '@mantine/core/ThemeIcon';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAgEA,MAAMA,YAAA,GAAwC,CAAC;AAE/C,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,KAAA,EAAO;EAAEC,IAAA;EAAMC,MAAA;EAAQC,OAAS;EAAAC,QAAA;EAAUC,KAAO;EAAAC;AAAA,CAAmB;EAC7D,MAAAC,MAAA,GAASP,KAAA,CAAMQ,oBAAqB;IACxCH,KAAA,EAAOA,KAAA,IAASL,KAAM,CAAAS,YAAA;IACtBT,KAAA;IACAI,QAAA;IACAD,OAAA,EAASA,OAAW;IACpBG;EAAA,CACD;EAEM;IACLI,IAAM;MACJ,aAAaC,OAAQ,CAAAV,IAAA,EAAM,SAAS;MACpC,aAAe,EAAAC,MAAA,KAAW,KAAY,aAAYU,SAAA,CAAUV,MAAM;MAClE,SAAW,EAAAG,KAAA,IAASF,OAAU,GAAAI,MAAA,CAAOM,UAAa;MAClD,YAAc,EAAAR,KAAA,IAASF,OAAU,GAAAI,MAAA,CAAOF,KAAQ;MAChD,SAAW,EAAAA,KAAA,IAASF,OAAU,GAAAI,MAAA,CAAOO,MAAS;IAAA;EAElD;AAAA,CAEJ;AAEO,MAAMC,SAAY,GAAAC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAQ;EAClE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,WAAa,EAAAvB,YAAA,EAAcoB,MAAM;EAClD;IAAEI,UAAY;IAAAC,SAAA;IAAWC,KAAO;IAAAC,MAAA;IAAQC,QAAA;IAAUC,IAAM;IAAApB,YAAA;IAAc,GAAGqB;EAAA,CAAW,GAAAR,KAAA;EAE1F,MAAMS,SAAA,GAAYC,SAA4B;IAC5CC,IAAM;IACNC,OAAA;IACAZ,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACA5B;EAAA,CACD;EAEM,sBAAAkC,GAAA,CAACC,GAAA;IAAIf,GAAW;IAAA,GAAGU,SAAA,CAAU,MAAM;IAAI,GAAGD;EAAQ;AAC3D,CAAC;AAEDZ,SAAA,CAAUgB,OAAU,GAAAA,OAAA;AACpBhB,SAAA,CAAUmB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}