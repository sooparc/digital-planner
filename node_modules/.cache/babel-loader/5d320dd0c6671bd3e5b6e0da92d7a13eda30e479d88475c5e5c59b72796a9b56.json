{"ast":null,"code":"'use client';\n\nfunction parseItem(item) {\n  if (typeof item === \"string\") {\n    return {\n      value: item,\n      label: item\n    };\n  }\n  if (\"value\" in item && !(\"label\" in item)) {\n    return {\n      value: item.value,\n      label: item.value,\n      disabled: item.disabled\n    };\n  }\n  if (typeof item === \"number\") {\n    return {\n      value: item.toString(),\n      label: item.toString()\n    };\n  }\n  if (\"group\" in item) {\n    return {\n      group: item.group,\n      items: item.items.map(i => parseItem(i))\n    };\n  }\n  return item;\n}\nfunction getParsedComboboxData(data) {\n  if (!data) {\n    return [];\n  }\n  return data.map(item => parseItem(item));\n}\nexport { getParsedComboboxData };","map":{"version":3,"names":["parseItem","item","value","label","disabled","toString","group","items","map","i","getParsedComboboxData","data"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Combobox\\get-parsed-combobox-data\\get-parsed-combobox-data.ts"],"sourcesContent":["import {\n  ComboboxData,\n  ComboboxItem,\n  ComboboxItemGroup,\n  ComboboxParsedItem,\n  ComboboxParsedItemGroup,\n  ComboboxStringData,\n  ComboboxStringItem,\n} from '../Combobox.types';\n\nfunction parseItem(\n  item: string | ComboboxItem | ComboboxStringItem | ComboboxItemGroup\n): ComboboxItem | ComboboxParsedItemGroup {\n  if (typeof item === 'string') {\n    return { value: item, label: item };\n  }\n\n  if ('value' in item && !('label' in item)) {\n    return { value: item.value, label: item.value, disabled: item.disabled };\n  }\n\n  if (typeof item === 'number') {\n    return { value: (item as number).toString(), label: (item as number).toString() };\n  }\n\n  if ('group' in item) {\n    return {\n      group: item.group,\n      items: item.items.map((i) => parseItem(i) as ComboboxItem),\n    };\n  }\n\n  return item;\n}\n\nexport function getParsedComboboxData(\n  data: ComboboxData | ComboboxStringData | undefined\n): ComboboxParsedItem[] {\n  if (!data) {\n    return [];\n  }\n\n  return data.map((item) => parseItem(item as ComboboxItem));\n}\n"],"mappings":";;AAUA,SAASA,UACPC,IACwC;EACpC,WAAOA,IAAA,KAAS,QAAU;IAC5B,OAAO;MAAEC,KAAA,EAAOD,IAAM;MAAAE,KAAA,EAAOF;IAAK;EAAA;EAGpC,IAAI,OAAW,IAAAA,IAAA,IAAQ,EAAE,WAAWA,IAAO;IAClC;MAAEC,KAAA,EAAOD,IAAK,CAAAC,KAAA;MAAOC,KAAA,EAAOF,IAAK,CAAAC,KAAA;MAAOE,QAAU,EAAAH,IAAA,CAAKG;IAAS;EAAA;EAGrE,WAAOH,IAAA,KAAS,QAAU;IACrB;MAAEC,KAAA,EAAQD,IAAgB,CAAAI,QAAA;MAAYF,KAAQ,EAAAF,IAAA,CAAgBI,QAAA;IAAW;EAAA;EAGlF,IAAI,WAAWJ,IAAM;IACZ;MACLK,KAAA,EAAOL,IAAK,CAAAK,KAAA;MACZC,KAAA,EAAON,IAAA,CAAKM,KAAM,CAAAC,GAAA,CAAKC,CAAM,IAAAT,SAAA,CAAUS,CAAC,CAAiB;IAC3D;EAAA;EAGK,OAAAR,IAAA;AACT;AAEO,SAASS,sBACdC,IACsB;EACtB,IAAI,CAACA,IAAM;IACT,OAAO,EAAC;EAAA;EAGV,OAAOA,IAAA,CAAKH,GAAI,CAACP,IAAS,IAAAD,SAAA,CAAUC,IAAoB,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}