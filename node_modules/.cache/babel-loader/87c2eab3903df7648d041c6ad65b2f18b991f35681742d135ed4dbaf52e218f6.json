{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { Overlay } from '../Overlay/Overlay.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport classes from './LoadingOverlay.module.css.mjs';\nconst defaultProps = {\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  overlayProps: {\n    backgroundOpacity: 0.75\n  },\n  zIndex: getDefaultZIndex(\"overlay\")\n};\nconst varsResolver = createVarsResolver((_, {\n  zIndex\n}) => ({\n  root: {\n    \"--lo-z-index\": zIndex?.toString()\n  }\n}));\nconst LoadingOverlay = factory((_props, ref) => {\n  const props = useProps(\"LoadingOverlay\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    transitionProps,\n    loaderProps,\n    overlayProps,\n    visible,\n    zIndex,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const getStyles = useStyles({\n    name: \"LoadingOverlay\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _overlayProps = {\n    ...defaultProps.overlayProps,\n    ...overlayProps\n  };\n  return /* @__PURE__ */jsx(Transition, {\n    transition: \"fade\",\n    ...transitionProps,\n    mounted: !!visible,\n    children: transitionStyles => /* @__PURE__ */jsxs(Box, {\n      ...getStyles(\"root\", {\n        style: transitionStyles\n      }),\n      ref,\n      ...others,\n      children: [/* @__PURE__ */jsx(Loader, {\n        ...getStyles(\"loader\"),\n        unstyled,\n        ...loaderProps\n      }), /* @__PURE__ */jsx(Overlay, {\n        ..._overlayProps,\n        ...getStyles(\"overlay\"),\n        darkHidden: true,\n        unstyled,\n        color: overlayProps?.color || theme.white\n      }), /* @__PURE__ */jsx(Overlay, {\n        ..._overlayProps,\n        ...getStyles(\"overlay\"),\n        lightHidden: true,\n        unstyled,\n        color: overlayProps?.color || theme.colors.dark[5]\n      })]\n    })\n  });\n});\nLoadingOverlay.classes = classes;\nLoadingOverlay.displayName = \"@mantine/core/LoadingOverlay\";\nexport { LoadingOverlay };","map":{"version":3,"names":["defaultProps","transitionProps","transition","duration","overlayProps","backgroundOpacity","zIndex","getDefaultZIndex","varsResolver","createVarsResolver","_","root","toString","LoadingOverlay","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","loaderProps","visible","others","theme","useMantineTheme","getStyles","useStyles","name","classes","_overlayProps","jsx","Transition","mounted","children","transitionStyles","jsxs","Box","Loader","Overlay","darkHidden","color","white","lightHidden","colors","dark","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\LoadingOverlay\\LoadingOverlay.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Loader, LoaderProps } from '../Loader';\nimport { Overlay, OverlayProps } from '../Overlay';\nimport { Transition, TransitionOverride } from '../Transition';\nimport classes from './LoadingOverlay.module.css';\n\nexport type LoadingOverlayStylesNames = 'root' | 'loader' | 'overlay';\nexport type LoadingOverlayCssVariables = {\n  root: '--lo-z-index';\n};\n\nexport interface LoadingOverlayProps\n  extends BoxProps,\n    StylesApiProps<LoadingOverlayFactory>,\n    ElementProps<'div'> {\n  /** Props passed down to `Transition` component, `{ transition: 'fade', duration: 0 }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Props passed down to `Loader` component */\n  loaderProps?: LoaderProps;\n\n  /** Props passed down to `Overlay` component */\n  overlayProps?: OverlayProps;\n\n  /** Determines whether the overlay should be visible, `false` by default */\n  visible?: boolean;\n\n  /** Controls overlay `z-index`, `400` by default */\n  zIndex?: string | number;\n}\n\nexport type LoadingOverlayFactory = Factory<{\n  props: LoadingOverlayProps;\n  ref: HTMLDivElement;\n  stylesNames: LoadingOverlayStylesNames;\n  vars: LoadingOverlayCssVariables;\n}>;\n\nconst defaultProps: Partial<LoadingOverlayProps> = {\n  transitionProps: { transition: 'fade', duration: 0 },\n  overlayProps: { backgroundOpacity: 0.75 },\n  zIndex: getDefaultZIndex('overlay'),\n};\n\nconst varsResolver = createVarsResolver<LoadingOverlayFactory>((_, { zIndex }) => ({\n  root: {\n    '--lo-z-index': zIndex?.toString(),\n  },\n}));\n\nexport const LoadingOverlay = factory<LoadingOverlayFactory>((_props, ref) => {\n  const props = useProps('LoadingOverlay', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    transitionProps,\n    loaderProps,\n    overlayProps,\n    visible,\n    zIndex,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n\n  const getStyles = useStyles<LoadingOverlayFactory>({\n    name: 'LoadingOverlay',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _overlayProps = { ...defaultProps.overlayProps, ...overlayProps };\n\n  return (\n    <Transition transition=\"fade\" {...transitionProps} mounted={!!visible}>\n      {(transitionStyles) => (\n        <Box {...getStyles('root', { style: transitionStyles })} ref={ref} {...others}>\n          <Loader {...getStyles('loader')} unstyled={unstyled} {...loaderProps} />\n\n          <Overlay\n            {..._overlayProps}\n            {...getStyles('overlay')}\n            darkHidden\n            unstyled={unstyled}\n            color={overlayProps?.color || theme.white}\n          />\n\n          <Overlay\n            {..._overlayProps}\n            {...getStyles('overlay')}\n            lightHidden\n            unstyled={unstyled}\n            color={overlayProps?.color || theme.colors.dark[5]}\n          />\n        </Box>\n      )}\n    </Transition>\n  );\n});\n\nLoadingOverlay.classes = classes;\nLoadingOverlay.displayName = '@mantine/core/LoadingOverlay';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAkDA,MAAMA,YAA6C;EACjDC,eAAiB;IAAEC,UAAY;IAAQC,QAAA,EAAU;EAAE;EACnDC,YAAA,EAAc;IAAEC,iBAAA,EAAmB;EAAK;EACxCC,MAAA,EAAQC,gBAAA,CAAiB,SAAS;AACpC;AAEA,MAAMC,YAAA,GAAeC,kBAA0C,EAACC,CAAG;EAAEJ;AAAA,CAAc;EACjFK,IAAM;IACJ,gBAAgBL,MAAA,EAAQM,QAAS;EAAA;AAErC,CAAE;AAEK,MAAMC,cAAiB,GAAAC,OAAA,CAA+B,CAACC,MAAA,EAAQC,GAAQ;EAC5E,MAAMC,KAAQ,GAAAC,QAAA,CAAS,gBAAkB,EAAAlB,YAAA,EAAce,MAAM;EACvD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAvB,eAAA;IACAwB,WAAA;IACArB,YAAA;IACAsB,OAAA;IACApB,MAAA;IACA,GAAGqB;EAAA,CACD,GAAAV,KAAA;EAEJ,MAAMW,KAAA,GAAQC,eAAgB;EAE9B,MAAMC,SAAA,GAAYC,SAAiC;IACjDC,IAAM;IACNC,OAAA;IACAhB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAhB;EAAA,CACD;EAED,MAAM0B,aAAA,GAAgB;IAAE,GAAGlC,YAAa,CAAAI,YAAA;IAAc,GAAGA;EAAa;EAGpE,sBAAA+B,GAAA,CAACC,UAAW;IAAAlC,UAAA,EAAW,MAAQ;IAAA,GAAGD,eAAA;IAAiBoC,OAAS,GAAC,CAACX,OAAA;IAC3DY,QAAC,EAAAC,gBAAA,mBAAAC,IAAA,CACCC,GAAK;MAAA,GAAGX,SAAU,SAAQ;QAAET,KAAA,EAAOkB;MAAA,CAAkB;MAAGvB,GAAW;MAAA,GAAGW,MACrE;MAAAW,QAAA,kBAAAH,GAAA,CAACO,MAAA;QAAQ,GAAGZ,SAAA,CAAU,QAAQ,CAAG;QAAAP,QAAA;QAAqB,GAAGE;MAAa,mBAEtEU,GAAA,CAACQ,OAAA;QACE,GAAGT,aAAA;QACH,GAAGJ,SAAA,CAAU,SAAS;QACvBc,UAAU;QACVrB,QAAA;QACAsB,KAAA,EAAOzC,YAAc,EAAAyC,KAAA,IAASjB,KAAM,CAAAkB;MAAA,CACtC,kBAEAX,GAAA,CAACQ,OAAA;QACE,GAAGT,aAAA;QACH,GAAGJ,SAAA,CAAU,SAAS;QACvBiB,WAAW;QACXxB,QAAA;QACAsB,KAAA,EAAOzC,YAAc,EAAAyC,KAAA,IAASjB,KAAM,CAAAoB,MAAA,CAAOC,IAAA,CAAK,CAAC;MAAA;IACnD,CACF;EAEJ;AAEJ,CAAC;AAEDpC,cAAA,CAAeoB,OAAU,GAAAA,OAAA;AACzBpB,cAAA,CAAeqC,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}