{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { isScrollingWithinScrollbarBounds } from '../utils/is-scrolling-within-scrollbar-bounds.mjs';\nimport { getThumbSize } from '../utils/get-thumb-size.mjs';\nimport { toInt } from '../utils/to-int.mjs';\nimport { Scrollbar } from './Scrollbar.mjs';\nconst ScrollAreaScrollbarX = forwardRef((props, forwardedRef) => {\n  const {\n    sizes,\n    onSizesChange,\n    style,\n    ...others\n  } = props;\n  const ctx = useScrollAreaContext();\n  const [computedStyle, setComputedStyle] = useState();\n  const ref = useRef(null);\n  const composeRefs = useMergedRef(forwardedRef, ref, ctx.onScrollbarXChange);\n  useEffect(() => {\n    if (ref.current) {\n      setComputedStyle(getComputedStyle(ref.current));\n    }\n  }, [ref]);\n  return /* @__PURE__ */jsx(Scrollbar, {\n    \"data-orientation\": \"horizontal\",\n    ...others,\n    ref: composeRefs,\n    sizes,\n    style: {\n      ...style,\n      [\"--sa-thumb-width\"]: `${getThumbSize(sizes)}px`\n    },\n    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.x),\n    onDragScroll: pointerPos => props.onDragScroll(pointerPos.x),\n    onWheelScroll: (event, maxScrollPos) => {\n      if (ctx.viewport) {\n        const scrollPos = ctx.viewport.scrollLeft + event.deltaX;\n        props.onWheelScroll(scrollPos);\n        if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n          event.preventDefault();\n        }\n      }\n    },\n    onResize: () => {\n      if (ref.current && ctx.viewport && computedStyle) {\n        onSizesChange({\n          content: ctx.viewport.scrollWidth,\n          viewport: ctx.viewport.offsetWidth,\n          scrollbar: {\n            size: ref.current.clientWidth,\n            paddingStart: toInt(computedStyle.paddingLeft),\n            paddingEnd: toInt(computedStyle.paddingRight)\n          }\n        });\n      }\n    }\n  });\n});\nScrollAreaScrollbarX.displayName = \"@mantine/core/ScrollAreaScrollbarX\";\nexport { ScrollAreaScrollbarX };","map":{"version":3,"names":["ScrollAreaScrollbarX","forwardRef","props","forwardedRef","sizes","onSizesChange","style","others","ctx","useScrollAreaContext","computedStyle","setComputedStyle","useState","ref","useRef","composeRefs","useMergedRef","onScrollbarXChange","useEffect","current","getComputedStyle","jsx","Scrollbar","getThumbSize","onThumbPointerDown","pointerPos","x","onDragScroll","onWheelScroll","event","maxScrollPos","viewport","scrollPos","scrollLeft","deltaX","isScrollingWithinScrollbarBounds","preventDefault","onResize","content","scrollWidth","offsetWidth","scrollbar","size","clientWidth","paddingStart","toInt","paddingLeft","paddingEnd","paddingRight","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaScrollbar\\ScrollbarX.tsx"],"sourcesContent":["import { forwardRef, useEffect, useRef, useState } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAxisProps } from '../ScrollArea.types';\nimport { getThumbSize, isScrollingWithinScrollbarBounds, toInt } from '../utils';\nimport { Scrollbar } from './Scrollbar';\n\nexport const ScrollAreaScrollbarX = forwardRef<HTMLDivElement, ScrollAreaScrollbarAxisProps>(\n  (props, forwardedRef) => {\n    const { sizes, onSizesChange, style, ...others } = props;\n    const ctx = useScrollAreaContext();\n    const [computedStyle, setComputedStyle] = useState<CSSStyleDeclaration>();\n    const ref = useRef<HTMLDivElement>(null);\n    const composeRefs = useMergedRef(forwardedRef, ref, ctx.onScrollbarXChange);\n\n    useEffect(() => {\n      if (ref.current) {\n        setComputedStyle(getComputedStyle(ref.current));\n      }\n    }, [ref]);\n\n    return (\n      <Scrollbar\n        data-orientation=\"horizontal\"\n        {...others}\n        ref={composeRefs}\n        sizes={sizes}\n        style={{\n          ...style,\n          ['--sa-thumb-width' as any]: `${getThumbSize(sizes)}px`,\n        }}\n        onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n        onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n        onWheelScroll={(event, maxScrollPos) => {\n          if (ctx.viewport) {\n            const scrollPos = ctx.viewport.scrollLeft + event.deltaX;\n            props.onWheelScroll(scrollPos);\n            if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n              event.preventDefault();\n            }\n          }\n        }}\n        onResize={() => {\n          if (ref.current && ctx.viewport && computedStyle) {\n            onSizesChange({\n              content: ctx.viewport.scrollWidth,\n              viewport: ctx.viewport.offsetWidth,\n              scrollbar: {\n                size: ref.current.clientWidth,\n                paddingStart: toInt(computedStyle.paddingLeft),\n                paddingEnd: toInt(computedStyle.paddingRight),\n              },\n            });\n          }\n        }}\n      />\n    );\n  }\n);\n\nScrollAreaScrollbarX.displayName = '@mantine/core/ScrollAreaScrollbarX';\n"],"mappings":";;;;;;;;;;AAOO,MAAMA,oBAAuB,GAAAC,UAAA,CAClC,CAACC,KAAA,EAAOC,YAAiB;EACvB,MAAM;IAAEC,KAAO;IAAAC,aAAA;IAAeC,KAAO;IAAA,GAAGC;EAAW,IAAAL,KAAA;EACnD,MAAMM,GAAA,GAAMC,oBAAqB;EACjC,MAAM,CAACC,aAAA,EAAeC,gBAAgB,IAAIC,QAA8B;EAClE,MAAAC,GAAA,GAAMC,MAAA,CAAuB,IAAI;EACvC,MAAMC,WAAc,GAAAC,YAAA,CAAab,YAAc,EAAAU,GAAA,EAAKL,GAAA,CAAIS,kBAAkB;EAE1EC,SAAA,CAAU,MAAM;IACd,IAAIL,GAAA,CAAIM,OAAS;MACER,gBAAA,CAAAS,gBAAA,CAAiBP,GAAI,CAAAM,OAAO,CAAC;IAAA;EAChD,CACF,EAAG,CAACN,GAAG,CAAC;EAGN,sBAAAQ,GAAA,CAACC,SAAA;IACC,kBAAiB;IAChB,GAAGf,MAAA;IACJM,GAAK,EAAAE,WAAA;IACLX,KAAA;IACAE,KAAO;MACL,GAAGA,KAAA;MACH,CAAC,kBAAyB,GAAG,GAAGiB,YAAA,CAAanB,KAAK,CAAC;IACrD;IACAoB,kBAAA,EAAqBC,UAAA,IAAevB,KAAM,CAAAsB,kBAAA,CAAmBC,UAAA,CAAWC,CAAC;IACzEC,YAAA,EAAeF,UAAA,IAAevB,KAAM,CAAAyB,YAAA,CAAaF,UAAA,CAAWC,CAAC;IAC7DE,aAAA,EAAeA,CAACC,KAAA,EAAOC,YAAiB;MACtC,IAAItB,GAAA,CAAIuB,QAAU;QAChB,MAAMC,SAAY,GAAAxB,GAAA,CAAIuB,QAAS,CAAAE,UAAA,GAAaJ,KAAM,CAAAK,MAAA;QAClDhC,KAAA,CAAM0B,aAAA,CAAcI,SAAS;QACzB,IAAAG,gCAAA,CAAiCH,SAAW,EAAAF,YAAY,CAAG;UAC7DD,KAAA,CAAMO,cAAe;QAAA;MACvB;IAEJ;IACAC,QAAA,EAAUA,CAAA,KAAM;MACd,IAAIxB,GAAI,CAAAM,OAAA,IAAWX,GAAI,CAAAuB,QAAA,IAAYrB,aAAe;QAClCL,aAAA;UACZiC,OAAA,EAAS9B,GAAA,CAAIuB,QAAS,CAAAQ,WAAA;UACtBR,QAAA,EAAUvB,GAAA,CAAIuB,QAAS,CAAAS,WAAA;UACvBC,SAAW;YACTC,IAAA,EAAM7B,GAAA,CAAIM,OAAQ,CAAAwB,WAAA;YAClBC,YAAA,EAAcC,KAAM,CAAAnC,aAAA,CAAcoC,WAAW;YAC7CC,UAAA,EAAYF,KAAM,CAAAnC,aAAA,CAAcsC,YAAY;UAAA;QAC9C,CACD;MAAA;IACH;EACF,CACF;AAAA,CAGN;AAEAhD,oBAAA,CAAqBiD,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}