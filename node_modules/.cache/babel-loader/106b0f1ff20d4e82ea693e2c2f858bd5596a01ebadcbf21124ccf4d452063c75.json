{"ast":null,"code":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.mjs';\nfunction useHash({\n  getInitialValueInEffect = true\n} = {}) {\n  const [hash, setHash] = useState(getInitialValueInEffect ? \"\" : window.location.hash || \"\");\n  const setHashHandler = value => {\n    const valueWithHash = value.startsWith(\"#\") ? value : `#${value}`;\n    window.location.hash = valueWithHash;\n    setHash(valueWithHash);\n  };\n  useWindowEvent(\"hashchange\", () => {\n    const newHash = window.location.hash;\n    if (hash !== newHash) {\n      setHash(newHash);\n    }\n  });\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setHash(window.location.hash);\n    }\n  }, []);\n  return [hash, setHashHandler];\n}\nexport { useHash };","map":{"version":3,"names":["useHash","getInitialValueInEffect","hash","setHash","useState","window","location","setHashHandler","value","valueWithHash","startsWith","useWindowEvent","newHash","useEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-hash\\use-hash.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface UseHashOptions {\n  getInitialValueInEffect?: boolean;\n}\n\nexport function useHash({ getInitialValueInEffect = true }: UseHashOptions = {}) {\n  const [hash, setHash] = useState<string>(\n    getInitialValueInEffect ? '' : window.location.hash || ''\n  );\n\n  const setHashHandler = (value: string) => {\n    const valueWithHash = value.startsWith('#') ? value : `#${value}`;\n    window.location.hash = valueWithHash;\n    setHash(valueWithHash);\n  };\n\n  useWindowEvent('hashchange', () => {\n    const newHash = window.location.hash;\n    if (hash !== newHash) {\n      setHash(newHash);\n    }\n  });\n\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setHash(window.location.hash);\n    }\n  }, []);\n\n  return [hash, setHashHandler] as const;\n}\n"],"mappings":";;;;AAOO,SAASA,QAAQ;EAAEC,uBAAA,GAA0B;AAAK,IAAoB,EAAI;EACzE,OAACC,IAAM,EAAAC,OAAO,CAAI,GAAAC,QAAA,CACtBH,uBAA0B,QAAKI,MAAO,CAAAC,QAAA,CAASJ,IAAQ,MACzD;EAEM,MAAAK,cAAA,GAAkBC,KAAkB;IACxC,MAAMC,aAAA,GAAgBD,KAAM,CAAAE,UAAA,CAAW,GAAG,CAAI,GAAAF,KAAA,GAAQ,IAAIA,KAAK;IAC/DH,MAAA,CAAOC,QAAA,CAASJ,IAAO,GAAAO,aAAA;IACvBN,OAAA,CAAQM,aAAa;EACvB;EAEAE,cAAA,CAAe,cAAc,MAAM;IAC3B,MAAAC,OAAA,GAAUP,MAAA,CAAOC,QAAS,CAAAJ,IAAA;IAChC,IAAIA,IAAA,KAASU,OAAS;MACpBT,OAAA,CAAQS,OAAO;IAAA;EACjB,CACD;EAEDC,SAAA,CAAU,MAAM;IACd,IAAIZ,uBAAyB;MACnBE,OAAA,CAAAE,MAAA,CAAOC,QAAA,CAASJ,IAAI;IAAA;EAEhC,GAAG,EAAE;EAEE,QAACA,IAAA,EAAMK,cAAc;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}