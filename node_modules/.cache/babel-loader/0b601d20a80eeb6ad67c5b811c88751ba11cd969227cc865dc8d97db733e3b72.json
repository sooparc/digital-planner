{"ast":null,"code":"'use client';\n\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst headings = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\nconst sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nfunction getTitleSize(order, size) {\n  const titleSize = size !== void 0 ? size : `h${order}`;\n  if (headings.includes(titleSize)) {\n    return {\n      fontSize: `var(--mantine-${titleSize}-font-size)`,\n      fontWeight: `var(--mantine-${titleSize}-font-weight)`,\n      lineHeight: `var(--mantine-${titleSize}-line-height)`\n    };\n  } else if (sizes.includes(titleSize)) {\n    return {\n      fontSize: `var(--mantine-font-size-${titleSize})`,\n      fontWeight: `var(--mantine-h${order}-font-weight)`,\n      lineHeight: `var(--mantine-h${order}-line-height)`\n    };\n  }\n  return {\n    fontSize: rem(titleSize),\n    fontWeight: `var(--mantine-h${order}-font-weight)`,\n    lineHeight: `var(--mantine-h${order}-line-height)`\n  };\n}\nexport { getTitleSize };","map":{"version":3,"names":["headings","sizes","getTitleSize","order","size","titleSize","includes","fontSize","fontWeight","lineHeight","rem"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Title\\get-title-size.ts"],"sourcesContent":["import { rem } from '../../core';\nimport type { TitleOrder, TitleSize } from './Title';\n\nconst headings: unknown[] = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nconst sizes: unknown[] = ['xs', 'sm', 'md', 'lg', 'xl'];\n\nexport interface GetTitleSizeResult {\n  fontSize: string;\n  fontWeight: string;\n  lineHeight: string;\n}\n\nexport function getTitleSize(order: TitleOrder, size?: TitleSize): GetTitleSizeResult {\n  const titleSize = size !== undefined ? size : `h${order}`;\n\n  if (headings.includes(titleSize)) {\n    return {\n      fontSize: `var(--mantine-${titleSize}-font-size)`,\n      fontWeight: `var(--mantine-${titleSize}-font-weight)`,\n      lineHeight: `var(--mantine-${titleSize}-line-height)`,\n    };\n  } else if (sizes.includes(titleSize)) {\n    return {\n      fontSize: `var(--mantine-font-size-${titleSize})`,\n      fontWeight: `var(--mantine-h${order}-font-weight)`,\n      lineHeight: `var(--mantine-h${order}-line-height)`,\n    };\n  }\n\n  return {\n    fontSize: rem(titleSize),\n    fontWeight: `var(--mantine-h${order}-font-weight)`,\n    lineHeight: `var(--mantine-h${order}-line-height)`,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;AAGA,MAAMA,QAAA,GAAsB,CAAC,MAAM,MAAM,IAAM,QAAM,MAAM,IAAI;AAC/D,MAAMC,KAAA,GAAmB,CAAC,MAAM,IAAM,QAAM,MAAM,IAAI;AAQtC,SAAAC,aAAaC,KAAA,EAAmBC,IAAsC;EACpF,MAAMC,SAAY,GAAAD,IAAA,KAAS,KAAY,IAAAA,IAAA,GAAO,IAAID,KAAK;EAEnD,IAAAH,QAAA,CAASM,QAAS,CAAAD,SAAS,CAAG;IACzB;MACLE,QAAA,EAAU,iBAAiBF,SAAS;MACpCG,UAAA,EAAY,iBAAiBH,SAAS;MACtCI,UAAA,EAAY,iBAAiBJ,SAAS;IACxC;EACS,WAAAJ,KAAA,CAAMK,QAAS,CAAAD,SAAS,CAAG;IAC7B;MACLE,QAAA,EAAU,2BAA2BF,SAAS;MAC9CG,UAAA,EAAY,kBAAkBL,KAAK;MACnCM,UAAA,EAAY,kBAAkBN,KAAK;IACrC;EAAA;EAGK;IACLI,QAAA,EAAUG,GAAA,CAAIL,SAAS;IACvBG,UAAA,EAAY,kBAAkBL,KAAK;IACnCM,UAAA,EAAY,kBAAkBN,KAAK;EACrC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}