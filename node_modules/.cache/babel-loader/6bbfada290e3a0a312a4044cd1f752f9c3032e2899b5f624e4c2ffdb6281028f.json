{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nimport classes from '../Menu.module.css.mjs';\nconst defaultProps = {};\nconst MenuDropdown = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    onKeyDown,\n    children,\n    ...others\n  } = useProps(\"MenuDropdown\", defaultProps, props);\n  const wrapperRef = useRef(null);\n  const ctx = useMenuContext();\n  const handleKeyDown = createEventHandler(onKeyDown, event => {\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      event.preventDefault();\n      wrapperRef.current?.querySelectorAll(\"[data-menu-item]:not(:disabled)\")[0]?.focus();\n    }\n  });\n  const handleMouseEnter = createEventHandler(onMouseEnter, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.openDropdown());\n  const handleMouseLeave = createEventHandler(onMouseLeave, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.closeDropdown());\n  return /* @__PURE__ */jsxs(Popover.Dropdown, {\n    ...others,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    ref: useMergedRef(ref, wrapperRef),\n    ...ctx.getStyles(\"dropdown\", {\n      className,\n      style,\n      styles,\n      classNames,\n      withStaticClass: false\n    }),\n    tabIndex: -1,\n    \"data-menu-dropdown\": true,\n    onKeyDown: handleKeyDown,\n    children: [ctx.withInitialFocusPlaceholder && /* @__PURE__ */jsx(\"div\", {\n      tabIndex: -1,\n      \"data-autofocus\": true,\n      \"data-mantine-stop-propagation\": true,\n      style: {\n        outline: 0\n      }\n    }), children]\n  });\n});\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = \"@mantine/core/MenuDropdown\";\nexport { MenuDropdown };","map":{"version":3,"names":["defaultProps","MenuDropdown","factory","props","ref","classNames","className","style","styles","vars","onMouseEnter","onMouseLeave","onKeyDown","children","others","useProps","wrapperRef","useRef","ctx","useMenuContext","handleKeyDown","createEventHandler","event","key","preventDefault","current","querySelectorAll","focus","handleMouseEnter","trigger","openDropdown","handleMouseLeave","closeDropdown","jsxs","Popover","Dropdown","role","useMergedRef","getStyles","withStaticClass","tabIndex","withInitialFocusPlaceholder","jsx","outline","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Menu\\MenuDropdown\\MenuDropdown.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  createEventHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuDropdownStylesNames = 'dropdown';\n\nexport interface MenuDropdownProps\n  extends BoxProps,\n    CompoundStylesApiProps<MenuDropdownFactory>,\n    ElementProps<'div'> {}\n\nexport type MenuDropdownFactory = Factory<{\n  props: MenuDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuDropdownProps> = {};\n\nexport const MenuDropdown = factory<MenuDropdownFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    onKeyDown,\n    children,\n    ...others\n  } = useProps('MenuDropdown', defaultProps, props);\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const ctx = useMenuContext();\n\n  const handleKeyDown = createEventHandler<any>(onKeyDown, (event) => {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      wrapperRef.current\n        ?.querySelectorAll<HTMLButtonElement>('[data-menu-item]:not(:disabled)')[0]\n        ?.focus();\n    }\n  });\n\n  const handleMouseEnter = createEventHandler<any>(\n    onMouseEnter,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.openDropdown()\n  );\n\n  const handleMouseLeave = createEventHandler<any>(\n    onMouseLeave,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.closeDropdown()\n  );\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      ref={useMergedRef(ref, wrapperRef)}\n      {...ctx.getStyles('dropdown', {\n        className,\n        style,\n        styles,\n        classNames,\n        withStaticClass: false,\n      })}\n      tabIndex={-1}\n      data-menu-dropdown\n      onKeyDown={handleKeyDown}\n    >\n      {ctx.withInitialFocusPlaceholder && (\n        <div tabIndex={-1} data-autofocus data-mantine-stop-propagation style={{ outline: 0 }} />\n      )}\n      {children}\n    </Popover.Dropdown>\n  );\n});\n\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = '@mantine/core/MenuDropdown';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA6BA,MAAMA,YAAA,GAA2C,CAAC;AAE3C,MAAMC,YAAe,GAAAC,OAAA,CAA6B,CAACC,KAAA,EAAOC,GAAQ;EACjE;IACJC,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,IAAA;IACAC,YAAA;IACAC,YAAA;IACAC,SAAA;IACAC,QAAA;IACA,GAAGC;EACD,IAAAC,QAAA,CAAS,cAAgB,EAAAf,YAAA,EAAcG,KAAK;EAE1C,MAAAa,UAAA,GAAaC,MAAA,CAAuB,IAAI;EAC9C,MAAMC,GAAA,GAAMC,cAAe;EAE3B,MAAMC,aAAgB,GAAAC,kBAAA,CAAwBT,SAAW,EAACU,KAAU;IAClE,IAAIA,KAAM,CAAAC,GAAA,KAAQ,SAAa,IAAAD,KAAA,CAAMC,GAAA,KAAQ,WAAa;MACxDD,KAAA,CAAME,cAAe;MACrBR,UAAA,CAAWS,OAAA,EACPC,gBAAoC,kCAAiC,CAAE,EAAC,GACxEC,KAAM;IAAA;EACZ,CACD;EAED,MAAMC,gBAAmB,GAAAP,kBAAA,CACvBX,YAAA,EACA,OAAOQ,GAAA,CAAIW,OAAY,gBAAWX,GAAA,CAAIW,OAAY,uBAAkBX,GAAA,CAAIY,YAAa,EACvF;EAEA,MAAMC,gBAAmB,GAAAV,kBAAA,CACvBV,YAAA,EACA,OAAOO,GAAA,CAAIW,OAAY,gBAAWX,GAAA,CAAIW,OAAY,uBAAkBX,GAAA,CAAIc,aAAc,EACxF;EAGE,sBAAAC,IAAA,CAACC,OAAQ,CAAAC,QAAA,EAAR;IACE,GAAGrB,MAAA;IACJJ,YAAc,EAAAkB,gBAAA;IACdjB,YAAc,EAAAoB,gBAAA;IACdK,IAAK;IACL,kBAAiB;IACjBhC,GAAA,EAAKiC,YAAa,CAAAjC,GAAA,EAAKY,UAAU;IAChC,GAAGE,GAAI,CAAAoB,SAAA,CAAU,UAAY;MAC5BhC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAH,UAAA;MACAkC,eAAiB;IAAA,CAClB;IACDC,QAAU;IACV,oBAAkB;IAClB5B,SAAW,EAAAQ,aAAA;IAEVP,QAAA,GAAAK,GAAA,CAAIuB,2BACH,mBAAAC,GAAA,CAAC,KAAI;MAAAF,QAAA,EAAU,CAAI;MAAA,kBAAc,IAAC;MAAA,iCAA6B,IAAC;MAAAjC,KAAA,EAAO;QAAEoC,OAAA,EAAS;MAAA;IAAK,IAExF9B,QAAA;EAAA,CACH;AAEJ,CAAC;AAEDZ,YAAA,CAAa2C,OAAU,GAAAA,OAAA;AACvB3C,YAAA,CAAa4C,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}