{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nimport { useWindowScroll } from '../use-window-scroll/use-window-scroll.mjs';\nconst isFixed = (current, fixedAt) => current <= fixedAt;\nconst isPinnedOrReleased = (current, fixedAt, isCurrentlyPinnedRef, isScrollingUp, onPin, onRelease) => {\n  const isInFixedPosition = isFixed(current, fixedAt);\n  if (isInFixedPosition && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isScrollingUp && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = false;\n    onRelease?.();\n  }\n};\nconst useScrollDirection = () => {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  useEffect(() => {\n    let resizeTimer;\n    const onResize = () => {\n      setIsResizing(true);\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setIsResizing(false);\n      }, 300);\n    };\n    const onScroll = () => {\n      if (isResizing) {\n        return;\n      }\n      const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrollingUp(currentScrollTop < lastScrollTop);\n      setLastScrollTop(currentScrollTop);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [lastScrollTop, isResizing]);\n  return isScrollingUp;\n};\nfunction useHeadroom({\n  fixedAt = 0,\n  onPin,\n  onFix,\n  onRelease\n} = {}) {\n  const isCurrentlyPinnedRef = useRef(false);\n  const isScrollingUp = useScrollDirection();\n  const [{\n    y: scrollPosition\n  }] = useWindowScroll();\n  useIsomorphicEffect(() => {\n    isPinnedOrReleased(scrollPosition, fixedAt, isCurrentlyPinnedRef, isScrollingUp, onPin, onRelease);\n  }, [scrollPosition]);\n  useIsomorphicEffect(() => {\n    if (isFixed(scrollPosition, fixedAt)) {\n      onFix?.();\n    }\n  }, [scrollPosition, fixedAt, onFix]);\n  if (isFixed(scrollPosition, fixedAt) || isScrollingUp) {\n    return true;\n  }\n  return false;\n}\nexport { isFixed, isPinnedOrReleased, useHeadroom, useScrollDirection };","map":{"version":3,"names":["isFixed","current","fixedAt","isPinnedOrReleased","isCurrentlyPinnedRef","isScrollingUp","onPin","onRelease","isInFixedPosition","useScrollDirection","lastScrollTop","setLastScrollTop","useState","setIsScrollingUp","isResizing","setIsResizing","useEffect","resizeTimer","onResize","clearTimeout","setTimeout","onScroll","currentScrollTop","window","pageYOffset","document","documentElement","scrollTop","addEventListener","removeEventListener","useHeadroom","onFix","useRef","y","scrollPosition","useWindowScroll","useIsomorphicEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-headroom\\use-headroom.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\nimport { useWindowScroll } from '../use-window-scroll/use-window-scroll';\n\nexport const isFixed = (current: number, fixedAt: number) => current <= fixedAt;\nexport const isPinned = (current: number, previous: number) => current <= previous;\nexport const isReleased = (current: number, previous: number, fixedAt: number) =>\n  !isPinned(current, previous) && !isFixed(current, fixedAt);\n\nexport const isPinnedOrReleased = (\n  current: number,\n  fixedAt: number,\n  isCurrentlyPinnedRef: React.MutableRefObject<boolean>,\n  isScrollingUp: boolean,\n  onPin?: () => void,\n  onRelease?: () => void\n) => {\n  const isInFixedPosition = isFixed(current, fixedAt);\n  if (isInFixedPosition && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isScrollingUp && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = false;\n    onRelease?.();\n  }\n};\n\nexport const useScrollDirection = () => {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n\n  useEffect(() => {\n    let resizeTimer: NodeJS.Timeout | undefined;\n\n    const onResize = () => {\n      setIsResizing(true);\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setIsResizing(false);\n      }, 300); // Reset the resizing flag after a timeout\n    };\n\n    const onScroll = () => {\n      if (isResizing) {\n        return; // Skip scroll events if resizing is in progress\n      }\n      const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrollingUp(currentScrollTop < lastScrollTop);\n      setLastScrollTop(currentScrollTop);\n    };\n\n    window.addEventListener('scroll', onScroll);\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n      window.removeEventListener('resize', onResize);\n    };\n  }, [lastScrollTop, isResizing]);\n\n  return isScrollingUp;\n};\n\ninterface UseHeadroomInput {\n  /** Number in px at which element should be fixed */\n  fixedAt?: number;\n\n  /** Called when element is pinned */\n  onPin?: () => void;\n\n  /** Called when element is at fixed position */\n  onFix?: () => void;\n\n  /** Called when element is unpinned */\n  onRelease?: () => void;\n}\n\nexport function useHeadroom({ fixedAt = 0, onPin, onFix, onRelease }: UseHeadroomInput = {}) {\n  const isCurrentlyPinnedRef = useRef(false);\n  const isScrollingUp = useScrollDirection();\n  const [{ y: scrollPosition }] = useWindowScroll();\n\n  useIsomorphicEffect(() => {\n    isPinnedOrReleased(\n      scrollPosition,\n      fixedAt,\n      isCurrentlyPinnedRef,\n      isScrollingUp,\n      onPin,\n      onRelease\n    );\n  }, [scrollPosition]);\n\n  useIsomorphicEffect(() => {\n    if (isFixed(scrollPosition, fixedAt)) {\n      onFix?.();\n    }\n  }, [scrollPosition, fixedAt, onFix]);\n\n  if (isFixed(scrollPosition, fixedAt) || isScrollingUp) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":";;;;;AAIO,MAAMA,OAAU,GAAAA,CAACC,OAAiB,EAAAC,OAAA,KAAoBD,OAAW,IAAAC,OAAA;AAKjE,MAAMC,kBAAA,GAAqBA,CAChCF,OAAA,EACAC,OAAA,EACAE,oBACA,EAAAC,aAAA,EACAC,KAAA,EACAC,SACG;EACG,MAAAC,iBAAA,GAAoBR,OAAQ,CAAAC,OAAA,EAASC,OAAO;EAC9C,IAAAM,iBAAA,IAAqB,CAACJ,oBAAA,CAAqBH,OAAS;IACtDG,oBAAA,CAAqBH,OAAU;IACvBK,KAAA;EAAA,WACC,CAACE,iBAAA,IAAqBH,aAAiB,KAACD,oBAAA,CAAqBH,OAAS;IAC/EG,oBAAA,CAAqBH,OAAU;IACvBK,KAAA;EACC,YAACE,iBAAqB,IAAAJ,oBAAA,CAAqBH,OAAS;IAC7DG,oBAAA,CAAqBH,OAAU;IACnBM,SAAA;EAAA;AAEhB;AAEO,MAAME,kBAAA,GAAqBA,CAAA,KAAM;EACtC,MAAM,CAACC,aAAA,EAAeC,gBAAgB,IAAIC,QAAA,CAAS,CAAC;EACpD,MAAM,CAACP,aAAA,EAAeQ,gBAAgB,IAAID,QAAA,CAAS,KAAK;EACxD,MAAM,CAACE,UAAA,EAAYC,aAAa,IAAIH,QAAA,CAAS,KAAK;EAElDI,SAAA,CAAU,MAAM;IACV,IAAAC,WAAA;IAEJ,MAAMC,QAAA,GAAWA,CAAA,KAAM;MACrBH,aAAA,CAAc,IAAI;MAClBI,YAAA,CAAaF,WAAW;MACxBA,WAAA,GAAcG,UAAA,CAAW,MAAM;QAC7BL,aAAA,CAAc,KAAK;MAAA,GAClB,GAAG;IACR;IAEA,MAAMM,QAAA,GAAWA,CAAA,KAAM;MACrB,IAAIP,UAAY;QACd;MAAA;MAEF,MAAMQ,gBAAmB,GAAAC,MAAA,CAAOC,WAAe,IAAAC,QAAA,CAASC,eAAgB,CAAAC,SAAA;MACxEd,gBAAA,CAAiBS,gBAAA,GAAmBZ,aAAa;MACjDC,gBAAA,CAAiBW,gBAAgB;IACnC;IAEOC,MAAA,CAAAK,gBAAA,CAAiB,UAAUP,QAAQ;IACnCE,MAAA,CAAAK,gBAAA,CAAiB,UAAUV,QAAQ;IAE1C,OAAO,MAAM;MACJK,MAAA,CAAAM,mBAAA,CAAoB,UAAUR,QAAQ;MACtCE,MAAA,CAAAM,mBAAA,CAAoB,UAAUX,QAAQ;IAC/C;EAAA,CACC,GAACR,aAAe,EAAAI,UAAU,CAAC;EAEvB,OAAAT,aAAA;AACT;AAgBgB,SAAAyB,YAAY;EAAE5B,OAAU;EAAGI,KAAA;EAAOyB,KAAO;EAAAxB;AAAgC,MAAI;EACrF,MAAAH,oBAAA,GAAuB4B,MAAA,CAAO,KAAK;EACzC,MAAM3B,aAAA,GAAgBI,kBAAmB;EACzC,MAAM,CAAC;IAAEwB,CAAA,EAAGC;EAAgB,KAAIC,eAAgB;EAEhDC,mBAAA,CAAoB,MAAM;IACxBjC,kBAAA,CACE+B,cAAA,EACAhC,OAAA,EACAE,oBAAA,EACAC,aAAA,EACAC,KAAA,EACAC,SACF;EAAA,CACF,EAAG,CAAC2B,cAAc,CAAC;EAEnBE,mBAAA,CAAoB,MAAM;IACpB,IAAApC,OAAA,CAAQkC,cAAgB,EAAAhC,OAAO,CAAG;MAC5B6B,KAAA;IAAA;EAET,IAACG,cAAgB,EAAAhC,OAAA,EAAS6B,KAAK,CAAC;EAEnC,IAAI/B,OAAQ,CAAAkC,cAAA,EAAgBhC,OAAO,KAAKG,aAAe;IAC9C;EAAA;EAGF;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}