{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { AppShellProvider } from './AppShell.context.mjs';\nimport { AppShellAside } from './AppShellAside/AppShellAside.mjs';\nimport { AppShellFooter } from './AppShellFooter/AppShellFooter.mjs';\nimport { AppShellHeader } from './AppShellHeader/AppShellHeader.mjs';\nimport { AppShellMain } from './AppShellMain/AppShellMain.mjs';\nimport { AppShellMediaStyles } from './AppShellMediaStyles/AppShellMediaStyles.mjs';\nimport { AppShellNavbar } from './AppShellNavbar/AppShellNavbar.mjs';\nimport { AppShellSection } from './AppShellSection/AppShellSection.mjs';\nimport { useResizing } from './use-resizing/use-resizing.mjs';\nimport classes from './AppShell.module.css.mjs';\nconst defaultProps = {\n  withBorder: true,\n  padding: 0,\n  transitionDuration: 200,\n  transitionTimingFunction: \"ease\",\n  zIndex: getDefaultZIndex(\"app\")\n};\nconst varsResolver = createVarsResolver((_, {\n  transitionDuration,\n  transitionTimingFunction\n}) => ({\n  root: {\n    \"--app-shell-transition-duration\": `${transitionDuration}ms`,\n    \"--app-shell-transition-timing-function\": transitionTimingFunction\n  }\n}));\nconst AppShell = factory((_props, ref) => {\n  const props = useProps(\"AppShell\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    navbar,\n    withBorder,\n    padding,\n    transitionDuration,\n    transitionTimingFunction,\n    header,\n    zIndex,\n    layout,\n    disabled,\n    aside,\n    footer,\n    offsetScrollbars = layout !== \"alt\",\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"AppShell\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const resizing = useResizing({\n    disabled,\n    transitionDuration\n  });\n  return /* @__PURE__ */jsxs(AppShellProvider, {\n    value: {\n      getStyles,\n      withBorder,\n      zIndex,\n      disabled,\n      offsetScrollbars\n    },\n    children: [/* @__PURE__ */jsx(AppShellMediaStyles, {\n      navbar,\n      header,\n      aside,\n      footer,\n      padding\n    }), /* @__PURE__ */jsx(Box, {\n      ref,\n      ...getStyles(\"root\"),\n      mod: [{\n        resizing,\n        layout,\n        disabled\n      }, mod],\n      ...others\n    })]\n  });\n});\nAppShell.classes = classes;\nAppShell.displayName = \"@mantine/core/AppShell\";\nAppShell.Navbar = AppShellNavbar;\nAppShell.Header = AppShellHeader;\nAppShell.Main = AppShellMain;\nAppShell.Aside = AppShellAside;\nAppShell.Footer = AppShellFooter;\nAppShell.Section = AppShellSection;\nexport { AppShell };","map":{"version":3,"names":["defaultProps","withBorder","padding","transitionDuration","transitionTimingFunction","zIndex","getDefaultZIndex","varsResolver","createVarsResolver","_","root","AppShell","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","navbar","header","layout","disabled","aside","footer","offsetScrollbars","mod","others","getStyles","useStyles","name","classes","resizing","useResizing","jsxs","AppShellProvider","value","children","jsx","AppShellMediaStyles","Box","displayName","Navbar","AppShellNavbar","Header","AppShellHeader","Main","AppShellMain","Aside","AppShellAside","Footer","AppShellFooter","Section","AppShellSection"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\AppShell\\AppShell.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AppShellProvider } from './AppShell.context';\nimport {\n  AppShellAsideConfiguration,\n  AppShellFooterConfiguration,\n  AppShellHeaderConfiguration,\n  AppShellNavbarConfiguration,\n  AppShellResponsiveSize,\n} from './AppShell.types';\nimport { AppShellAside } from './AppShellAside/AppShellAside';\nimport { AppShellFooter } from './AppShellFooter/AppShellFooter';\nimport { AppShellHeader } from './AppShellHeader/AppShellHeader';\nimport { AppShellMain } from './AppShellMain/AppShellMain';\nimport { AppShellMediaStyles } from './AppShellMediaStyles/AppShellMediaStyles';\nimport { AppShellNavbar } from './AppShellNavbar/AppShellNavbar';\nimport { AppShellSection } from './AppShellSection/AppShellSection';\nimport { useResizing } from './use-resizing/use-resizing';\nimport classes from './AppShell.module.css';\n\nexport type AppShellStylesNames =\n  | 'root'\n  | 'navbar'\n  | 'main'\n  | 'header'\n  | 'footer'\n  | 'aside'\n  | 'section';\n\nexport type AppShellCssVariables = {\n  root: '--app-shell-transition-duration' | '--app-shell-transition-timing-function';\n};\n\nexport interface AppShellProps\n  extends BoxProps,\n    StylesApiProps<AppShellFactory>,\n    ElementProps<'div'> {\n  /** Determines whether associated components should have a border, `true` by default */\n  withBorder?: boolean;\n\n  /** Controls padding of the main section, `0` by default. !important!: use `padding` prop instead of `p`. */\n  padding?: MantineSpacing | AppShellResponsiveSize;\n\n  /** AppShell.Navbar configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Navbar component. */\n  navbar?: AppShellNavbarConfiguration;\n\n  /** AppShell.Aside configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Aside component. */\n  aside?: AppShellAsideConfiguration;\n\n  /** AppShell.Header configuration, controls height, offset and collapsed state. Required if you use AppShell.Header component. */\n  header?: AppShellHeaderConfiguration;\n\n  /** AppShell.Footer configuration, controls height, offset and collapsed state. Required if you use AppShell.Footer component. */\n  footer?: AppShellFooterConfiguration;\n\n  /** Duration of all transitions in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Timing function of all transitions, `ease` by default */\n  transitionTimingFunction?: React.CSSProperties['transitionTimingFunction'];\n\n  /** `z-index` of all associated elements, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines how Navbar/Aside are arranged relative to Header/Footer, `default` by default */\n  layout?: 'default' | 'alt';\n\n  /** If set, Navbar, Aside, Header and Footer components be hidden */\n  disabled?: boolean;\n\n  /** Determines whether Header and Footer components should include styles to offset scrollbars. Based on `react-remove-scroll`. `true` by default for `layout=\"default\"`, `false` for `layout=\"alt\"` */\n  offsetScrollbars?: boolean;\n}\n\nexport type AppShellFactory = Factory<{\n  props: AppShellProps;\n  ref: HTMLDivElement;\n  stylesNames: AppShellStylesNames;\n  vars: AppShellCssVariables;\n  staticComponents: {\n    Navbar: typeof AppShellNavbar;\n    Header: typeof AppShellHeader;\n    Main: typeof AppShellMain;\n    Aside: typeof AppShellAside;\n    Footer: typeof AppShellFooter;\n    Section: typeof AppShellSection;\n  };\n}>;\n\nconst defaultProps: Partial<AppShellProps> = {\n  withBorder: true,\n  padding: 0,\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  zIndex: getDefaultZIndex('app'),\n};\n\nconst varsResolver = createVarsResolver<AppShellFactory>(\n  (_, { transitionDuration, transitionTimingFunction }) => ({\n    root: {\n      '--app-shell-transition-duration': `${transitionDuration}ms`,\n      '--app-shell-transition-timing-function': transitionTimingFunction,\n    },\n  })\n);\n\nexport const AppShell = factory<AppShellFactory>((_props, ref) => {\n  const props = useProps('AppShell', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    navbar,\n    withBorder,\n    padding,\n    transitionDuration,\n    transitionTimingFunction,\n    header,\n    zIndex,\n    layout,\n    disabled,\n    aside,\n    footer,\n    offsetScrollbars = layout !== 'alt',\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AppShellFactory>({\n    name: 'AppShell',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const resizing = useResizing({ disabled, transitionDuration });\n\n  return (\n    <AppShellProvider value={{ getStyles, withBorder, zIndex, disabled, offsetScrollbars }}>\n      <AppShellMediaStyles\n        navbar={navbar}\n        header={header}\n        aside={aside}\n        footer={footer}\n        padding={padding}\n      />\n      <Box\n        ref={ref}\n        {...getStyles('root')}\n        mod={[{ resizing, layout, disabled }, mod]}\n        {...others}\n      />\n    </AppShellProvider>\n  );\n});\n\nAppShell.classes = classes;\nAppShell.displayName = '@mantine/core/AppShell';\nAppShell.Navbar = AppShellNavbar;\nAppShell.Header = AppShellHeader;\nAppShell.Main = AppShellMain;\nAppShell.Aside = AppShellAside;\nAppShell.Footer = AppShellFooter;\nAppShell.Section = AppShellSection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA,MAAMA,YAAuC;EAC3CC,UAAY;EACZC,OAAS;EACTC,kBAAoB;EACpBC,wBAA0B;EAC1BC,MAAA,EAAQC,gBAAA,CAAiB,KAAK;AAChC;AAEA,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,CAAA,EAAG;EAAEN,kBAAA;EAAoBC;AAAA,CAAgC;EACxDM,IAAM;IACJ,mCAAmC,GAAGP,kBAAkB;IACxD,wCAA0C,EAAAC;EAAA;AAE9C,EACF;AAEO,MAAMO,QAAW,GAAAC,OAAA,CAAyB,CAACC,MAAA,EAAQC,GAAQ;EAChE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,UAAY,EAAAhB,YAAA,EAAca,MAAM;EACjD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,MAAA;IACAtB,UAAA;IACAC,OAAA;IACAC,kBAAA;IACAC,wBAAA;IACAoB,MAAA;IACAnB,MAAA;IACAoB,MAAA;IACAC,QAAA;IACAC,KAAA;IACAC,MAAA;IACAC,gBAAA,GAAmBJ,MAAW;IAC9BK,GAAA;IACA,GAAGC;EAAA,CACD,GAAAhB,KAAA;EAEJ,MAAMiB,SAAA,GAAYC,SAA2B;IAC3CC,IAAM;IACNC,OAAA;IACApB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAf;EAAA,CACD;EAED,MAAM6B,QAAW,GAAAC,WAAA,CAAY;IAAEX,QAAA;IAAUvB;EAAA,CAAoB;EAG3D,sBAAAmC,IAAA,CAACC,gBAAA;IAAiBC,KAAO;MAAER,SAAA;MAAW/B,UAAY;MAAAI,MAAA;MAAQqB,QAAU;MAAAG;IAAA,CAClE;IAAAY,QAAA,kBAAAC,GAAA,CAACC,mBAAA;MACCpB,MAAA;MACAC,MAAA;MACAG,KAAA;MACAC,MAAA;MACA1B;IAAA,CACF,kBACAwC,GAAA,CAACE,GAAA;MACC9B,GAAA;MACC,GAAGkB,SAAA,CAAU,MAAM;MACpBF,GAAA,EAAK,CAAC;QAAEM,QAAA;QAAUX,MAAQ;QAAAC;MAAA,GAAYI,GAAG;MACxC,GAAGC;IAAA;EAER;AAEJ,CAAC;AAEDpB,QAAA,CAASwB,OAAU,GAAAA,OAAA;AACnBxB,QAAA,CAASkC,WAAc;AACvBlC,QAAA,CAASmC,MAAS,GAAAC,cAAA;AAClBpC,QAAA,CAASqC,MAAS,GAAAC,cAAA;AAClBtC,QAAA,CAASuC,IAAO,GAAAC,YAAA;AAChBxC,QAAA,CAASyC,KAAQ,GAAAC,aAAA;AACjB1C,QAAA,CAAS2C,MAAS,GAAAC,cAAA;AAClB5C,QAAA,CAAS6C,OAAU,GAAAC,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}