{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {};\nconst ComboboxGroup = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    children,\n    label,\n    ...others\n  } = useProps(\"ComboboxGroup\", defaultProps, props);\n  const ctx = useComboboxContext();\n  return /* @__PURE__ */jsxs(Box, {\n    ref,\n    ...ctx.getStyles(\"group\", {\n      className,\n      classNames,\n      style,\n      styles\n    }),\n    ...others,\n    children: [label && /* @__PURE__ */jsx(\"div\", {\n      ...ctx.getStyles(\"groupLabel\", {\n        classNames,\n        styles\n      }),\n      children: label\n    }), children]\n  });\n});\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = \"@mantine/core/ComboboxGroup\";\nexport { ComboboxGroup };","map":{"version":3,"names":["defaultProps","ComboboxGroup","factory","props","ref","classNames","className","style","styles","vars","children","label","others","useProps","ctx","useComboboxContext","jsxs","Box","getStyles","jsx","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Combobox\\ComboboxGroup\\ComboboxGroup.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxGroupStylesNames = 'group' | 'groupLabel';\n\nexport interface ComboboxGroupProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxGroupFactory>,\n    ElementProps<'div'> {\n  /** Group label */\n  label?: React.ReactNode;\n}\n\nexport type ComboboxGroupFactory = Factory<{\n  props: ComboboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxGroupStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxGroupProps> = {};\n\nexport const ComboboxGroup = factory<ComboboxGroupFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, label, ...others } = useProps(\n    'ComboboxGroup',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('group', { className, classNames, style, styles })}\n      {...others}\n    >\n      {label && <div {...ctx.getStyles('groupLabel', { classNames, styles })}>{label}</div>}\n      {children}\n    </Box>\n  );\n});\n\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = '@mantine/core/ComboboxGroup';\n"],"mappings":";;;;;;;;;;;;;;;;;AA6BA,MAAMA,YAAA,GAA4C,CAAC;AAE5C,MAAMC,aAAgB,GAAAC,OAAA,CAA8B,CAACC,KAAA,EAAOC,GAAQ;EACnE;IAAEC,UAAY;IAAAC,SAAA;IAAWC,KAAO;IAAAC,MAAA;IAAQC,IAAA;IAAMC,QAAU;IAAAC,KAAA;IAAO,GAAGC;EAAA,CAAW,GAAAC,QAAA,CACjF,iBACAb,YAAA,EACAG,KACF;EAEA,MAAMW,GAAA,GAAMC,kBAAmB;EAG7B,sBAAAC,IAAA,CAACC,GAAA;IACCb,GAAA;IACC,GAAGU,GAAA,CAAII,SAAU,UAAS;MAAEZ,SAAW;MAAAD,UAAA;MAAYE,KAAO;MAAAC;IAAA,CAAQ;IAClE,GAAGI,MAAA;IAEHF,QAAA,GAASC,KAAA,mBAAAQ,GAAA,CAAC,KAAK;MAAA,GAAGL,GAAI,CAAAI,SAAA,CAAU,YAAc;QAAEb,UAAY;QAAAG;MAAA,CAAQ;MAAIE,QAAM,EAAAC;IAAA,IAC9ED,QAAA;EAAA,CACH;AAEJ,CAAC;AAEDT,aAAA,CAAcmB,OAAU,GAAAA,OAAA;AACxBnB,aAAA,CAAcoB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}