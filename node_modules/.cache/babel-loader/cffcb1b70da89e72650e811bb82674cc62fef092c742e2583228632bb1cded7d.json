{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useCallback } from 'react';\nfunction useInViewport() {\n  const observer = useRef(null);\n  const [inViewport, setInViewport] = useState(false);\n  const ref = useCallback(node => {\n    if (typeof IntersectionObserver !== \"undefined\") {\n      if (node && !observer.current) {\n        observer.current = new IntersectionObserver(entries => setInViewport(entries.some(entry => entry.isIntersecting)));\n      } else {\n        observer.current?.disconnect();\n      }\n      if (node) {\n        observer.current?.observe(node);\n      } else {\n        setInViewport(false);\n      }\n    }\n  }, []);\n  return {\n    ref,\n    inViewport\n  };\n}\nexport { useInViewport };","map":{"version":3,"names":["useInViewport","observer","useRef","inViewport","setInViewport","useState","ref","useCallback","node","IntersectionObserver","current","entries","some","entry","isIntersecting","disconnect","observe"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-in-viewport\\use-in-viewport.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport function useInViewport<T extends HTMLElement = any>() {\n  const observer = useRef<IntersectionObserver | null>(null);\n  const [inViewport, setInViewport] = useState(false);\n\n  const ref = useCallback((node: T | null) => {\n    if (typeof IntersectionObserver !== 'undefined') {\n      if (node && !observer.current) {\n        observer.current = new IntersectionObserver((entries) =>\n          setInViewport(entries.some((entry) => entry.isIntersecting))\n        );\n      } else {\n        observer.current?.disconnect();\n      }\n\n      if (node) {\n        observer.current?.observe(node);\n      } else {\n        setInViewport(false);\n      }\n    }\n  }, []);\n\n  return { ref, inViewport };\n}\n"],"mappings":";;;AAEO,SAASA,aAA6CA,CAAA;EACrD,MAAAC,QAAA,GAAWC,MAAA,CAAoC,IAAI;EACzD,MAAM,CAACC,UAAA,EAAYC,aAAa,IAAIC,QAAA,CAAS,KAAK;EAE5C,MAAAC,GAAA,GAAMC,WAAY,CAACC,IAAmB;IACtC,WAAOC,oBAAA,KAAyB,WAAa;MAC3C,IAAAD,IAAA,IAAQ,CAACP,QAAA,CAASS,OAAS;QAC7BT,QAAA,CAASS,OAAA,GAAU,IAAID,oBAAA,CAAsBE,OAAA,IAC3CP,aAAc,CAAAO,OAAA,CAAQC,IAAA,CAAMC,KAAA,IAAUA,KAAM,CAAAC,cAAc,CAAC,CAC7D;MAAA,CACK;QACLb,QAAA,CAASS,OAAA,EAASK,UAAW;MAAA;MAG/B,IAAIP,IAAM;QACCP,QAAA,CAAAS,OAAA,EAASM,OAAA,CAAQR,IAAI;MAAA,CACzB;QACLJ,aAAA,CAAc,KAAK;MAAA;IACrB;EAEJ,GAAG,EAAE;EAEE;IAAEE,GAAA;IAAKH;EAAW;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}