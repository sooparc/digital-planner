{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Transition } from '../../Transition/Transition.mjs';\nimport { useSliderContext } from '../Slider.context.mjs';\nconst Thumb = forwardRef(({\n  max,\n  min,\n  value,\n  position,\n  label,\n  dragging,\n  onMouseDown,\n  onKeyDownCapture,\n  labelTransitionProps,\n  labelAlwaysOn,\n  thumbLabel,\n  onFocus,\n  onBlur,\n  showLabelOnHover,\n  isHovered,\n  children = null,\n  disabled\n}, ref) => {\n  const {\n    getStyles\n  } = useSliderContext();\n  const [focused, setFocused] = useState(false);\n  const isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover && isHovered;\n  return /* @__PURE__ */jsxs(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref,\n    __vars: {\n      \"--slider-thumb-offset\": `${position}%`\n    },\n    ...getStyles(\"thumb\", {\n      focusable: true\n    }),\n    mod: {\n      dragging,\n      disabled\n    },\n    onFocus: event => {\n      setFocused(true);\n      typeof onFocus === \"function\" && onFocus(event);\n    },\n    onBlur: event => {\n      setFocused(false);\n      typeof onBlur === \"function\" && onBlur(event);\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown,\n    onKeyDownCapture,\n    onClick: event => event.stopPropagation(),\n    children: [children, /* @__PURE__ */jsx(Transition, {\n      mounted: label != null && !!isVisible,\n      transition: \"fade\",\n      duration: 0,\n      ...labelTransitionProps,\n      children: transitionStyles => /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"label\", {\n          style: transitionStyles\n        }),\n        children: label\n      })\n    })]\n  });\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":{"version":3,"names":["Thumb","forwardRef","max","min","value","position","label","dragging","onMouseDown","onKeyDownCapture","labelTransitionProps","labelAlwaysOn","thumbLabel","onFocus","onBlur","showLabelOnHover","isHovered","children","disabled","ref","getStyles","useSliderContext","focused","setFocused","useState","isVisible","jsxs","Box","tabIndex","role","__vars","focusable","mod","event","onTouchStart","onClick","stopPropagation","jsx","Transition","mounted","transition","duration","transitionStyles","style","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Slider\\Thumb\\Thumb.tsx"],"sourcesContent":["import { forwardRef, useState } from 'react';\nimport { Box } from '../../../core';\nimport { Transition, TransitionOverride } from '../../Transition';\nimport { useSliderContext } from '../Slider.context';\n\nexport interface ThumbProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'value'> {\n  max: number;\n  min: number;\n  value: number;\n  position: number;\n  dragging: boolean;\n  label: React.ReactNode;\n  onKeyDownCapture?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onMouseDown?: (event: any) => void;\n  labelTransitionProps: TransitionOverride | undefined;\n  labelAlwaysOn: boolean | undefined;\n  thumbLabel: string | undefined;\n  showLabelOnHover: boolean | undefined;\n  isHovered?: boolean;\n  children?: React.ReactNode;\n  disabled: boolean | undefined;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (\n    {\n      max,\n      min,\n      value,\n      position,\n      label,\n      dragging,\n      onMouseDown,\n      onKeyDownCapture,\n      labelTransitionProps,\n      labelAlwaysOn,\n      thumbLabel,\n      onFocus,\n      onBlur,\n      showLabelOnHover,\n      isHovered,\n      children = null,\n      disabled,\n    }: ThumbProps,\n    ref\n  ) => {\n    const { getStyles } = useSliderContext();\n\n    const [focused, setFocused] = useState(false);\n\n    const isVisible = labelAlwaysOn || dragging || focused || (showLabelOnHover && isHovered);\n\n    return (\n      <Box<'div'>\n        tabIndex={0}\n        role=\"slider\"\n        aria-label={thumbLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        ref={ref}\n        __vars={{ '--slider-thumb-offset': `${position}%` }}\n        {...getStyles('thumb', { focusable: true })}\n        mod={{ dragging, disabled }}\n        onFocus={(event) => {\n          setFocused(true);\n          typeof onFocus === 'function' && onFocus(event);\n        }}\n        onBlur={(event) => {\n          setFocused(false);\n          typeof onBlur === 'function' && onBlur(event);\n        }}\n        onTouchStart={onMouseDown}\n        onMouseDown={onMouseDown}\n        onKeyDownCapture={onKeyDownCapture}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n        <Transition\n          mounted={label != null && !!isVisible}\n          transition=\"fade\"\n          duration={0}\n          {...labelTransitionProps}\n        >\n          {(transitionStyles) => (\n            <div {...getStyles('label', { style: transitionStyles })}>{label}</div>\n          )}\n        </Transition>\n      </Box>\n    );\n  }\n);\n\nThumb.displayName = '@mantine/core/SliderThumb';\n"],"mappings":";;;;;;;;;;;;;;;AAyBO,MAAMA,KAAQ,GAAAC,UAAA,CACnB,CACE;EACEC,GAAA;EACAC,GAAA;EACAC,KAAA;EACAC,QAAA;EACAC,KAAA;EACAC,QAAA;EACAC,WAAA;EACAC,gBAAA;EACAC,oBAAA;EACAC,aAAA;EACAC,UAAA;EACAC,OAAA;EACAC,MAAA;EACAC,gBAAA;EACAC,SAAA;EACAC,QAAW;EACXC;AAAA,GAEFC,GACG;EACG;IAAEC;EAAU,IAAIC,gBAAiB;EAEvC,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIC,QAAA,CAAS,KAAK;EAE5C,MAAMC,SAAY,GAAAd,aAAA,IAAiBJ,QAAY,IAAAe,OAAA,IAAYP,gBAAoB,IAAAC,SAAA;EAG7E,sBAAAU,IAAA,CAACC,GAAA;IACCC,QAAU;IACVC,IAAK;IACL,YAAY,EAAAjB,UAAA;IACZ,eAAe,EAAAV,GAAA;IACf,eAAe,EAAAC,GAAA;IACf,eAAe,EAAAC,KAAA;IACfe,GAAA;IACAW,MAAQ;MAAE,uBAAyB,KAAGzB,QAAQ;IAAI;IACjD,GAAGe,SAAU,UAAS;MAAEW,SAAA,EAAW;IAAA,CAAM;IAC1CC,GAAA,EAAK;MAAEzB,QAAA;MAAUW;IAAS;IAC1BL,OAAA,EAAUoB,KAAU;MAClBV,UAAA,CAAW,IAAI;MACR,OAAAV,OAAA,KAAY,UAAc,IAAAA,OAAA,CAAQoB,KAAK;IAChD;IACAnB,MAAA,EAASmB,KAAU;MACjBV,UAAA,CAAW,KAAK;MACT,OAAAT,MAAA,KAAW,UAAc,IAAAA,MAAA,CAAOmB,KAAK;IAC9C;IACAC,YAAc,EAAA1B,WAAA;IACdA,WAAA;IACAC,gBAAA;IACA0B,OAAS,EAACF,KAAU,IAAAA,KAAA,CAAMG,eAAgB;IAEzCnB,QAAA,GAAAA,QAAA,iBACDoB,GAAA,CAACC,UAAA;MACCC,OAAS,EAAAjC,KAAA,IAAS,IAAQ,KAAC,CAACmB,SAAA;MAC5Be,UAAW;MACXC,QAAU;MACT,GAAG/B,oBAAA;MAEHO,QAAC,EAAAyB,gBAAA,mBACCL,GAAA;QAAK,GAAGjB,SAAA,CAAU,OAAS;UAAEuB,KAAO,EAAAD;QAAkB;QAAIzB,QAAM,EAAAX;MAAA;IAAA;EAErE,CACF;AAAA,CAGN;AAEAN,KAAA,CAAM4C,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}