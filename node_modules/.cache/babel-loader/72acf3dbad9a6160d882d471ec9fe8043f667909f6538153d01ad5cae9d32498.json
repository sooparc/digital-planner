{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nconst DirectionContext = createContext({\n  dir: \"ltr\",\n  toggleDirection: () => {},\n  setDirection: () => {}\n});\nfunction useDirection() {\n  return useContext(DirectionContext);\n}\nfunction DirectionProvider({\n  children,\n  initialDirection = \"ltr\",\n  detectDirection = true\n}) {\n  const [dir, setDir] = useState(initialDirection);\n  const setDirection = direction => {\n    setDir(direction);\n    document.documentElement.setAttribute(\"dir\", direction);\n  };\n  const toggleDirection = () => setDirection(dir === \"ltr\" ? \"rtl\" : \"ltr\");\n  useIsomorphicEffect(() => {\n    if (detectDirection) {\n      const direction = document.documentElement.getAttribute(\"dir\");\n      if (direction === \"rtl\" || direction === \"ltr\") {\n        setDirection(direction);\n      }\n    }\n  }, []);\n  return /* @__PURE__ */jsx(DirectionContext.Provider, {\n    value: {\n      dir,\n      toggleDirection,\n      setDirection\n    },\n    children\n  });\n}\nexport { DirectionContext, DirectionProvider, useDirection };","map":{"version":3,"names":["DirectionContext","createContext","dir","toggleDirection","setDirection","useDirection","useContext","DirectionProvider","children","initialDirection","detectDirection","setDir","useState","direction","document","documentElement","setAttribute","useIsomorphicEffect","getAttribute","jsx","Provider","value"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\DirectionProvider\\DirectionProvider.tsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\n\nexport type Direction = 'ltr' | 'rtl';\n\nexport interface DirectionContextValue {\n  dir: Direction;\n  toggleDirection: () => void;\n  setDirection: (dir: Direction) => void;\n}\n\nexport const DirectionContext = createContext<DirectionContextValue>({\n  dir: 'ltr',\n  toggleDirection: () => {},\n  setDirection: () => {},\n});\n\nexport function useDirection() {\n  return useContext(DirectionContext);\n}\n\nexport interface DirectionProviderProps {\n  /** Your application */\n  children: React.ReactNode;\n\n  /** Direction set as a default value, `ltr` by default */\n  initialDirection?: Direction;\n\n  /** Determines whether direction should be updated on mount based on `dir` attribute set on root element (usually html element), `true` by default  */\n  detectDirection?: boolean;\n}\n\nexport function DirectionProvider({\n  children,\n  initialDirection = 'ltr',\n  detectDirection = true,\n}: DirectionProviderProps) {\n  const [dir, setDir] = useState<Direction>(initialDirection);\n\n  const setDirection = (direction: Direction) => {\n    setDir(direction);\n    document.documentElement.setAttribute('dir', direction);\n  };\n\n  const toggleDirection = () => setDirection(dir === 'ltr' ? 'rtl' : 'ltr');\n\n  useIsomorphicEffect(() => {\n    if (detectDirection) {\n      const direction = document.documentElement.getAttribute('dir');\n      if (direction === 'rtl' || direction === 'ltr') {\n        setDirection(direction);\n      }\n    }\n  }, []);\n\n  return (\n    <DirectionContext.Provider value={{ dir, toggleDirection, setDirection }}>\n      {children}\n    </DirectionContext.Provider>\n  );\n}\n"],"mappings":";;;;;AAWO,MAAMA,gBAAA,GAAmBC,aAAqC;EACnEC,GAAK;EACLC,eAAA,EAAiBA,CAAA,KAAM,CAAC;EACxBC,YAAA,EAAcA,CAAA,KAAM;AACtB,CAAC;AAEM,SAASC,YAAeA,CAAA;EAC7B,OAAOC,UAAA,CAAWN,gBAAgB;AACpC;AAaO,SAASO,iBAAkBA,CAAA;EAChCC,QAAA;EACAC,gBAAmB;EACnBC,eAAkB;AACpB,CAA2B;EACzB,MAAM,CAACR,GAAA,EAAKS,MAAM,IAAIC,QAAA,CAAoBH,gBAAgB;EAEpD,MAAAL,YAAA,GAAgBS,SAAyB;IAC7CF,MAAA,CAAOE,SAAS;IACPC,QAAA,CAAAC,eAAA,CAAgBC,YAAa,QAAOH,SAAS;EACxD;EAEA,MAAMV,eAAA,GAAkBA,CAAA,KAAMC,YAAA,CAAaF,GAAQ,aAAQ,QAAQ,KAAK;EAExEe,mBAAA,CAAoB,MAAM;IACxB,IAAIP,eAAiB;MACnB,MAAMG,SAAY,GAAAC,QAAA,CAASC,eAAgB,CAAAG,YAAA,CAAa,KAAK;MACzD,IAAAL,SAAA,KAAc,KAAS,IAAAA,SAAA,KAAc,KAAO;QAC9CT,YAAA,CAAaS,SAAS;MAAA;IACxB;EAEJ,GAAG,EAAE;EAGH,sBAAAM,GAAA,CAACnB,gBAAiB,CAAAoB,QAAA,EAAjB;IAA0BC,KAAA,EAAO;MAAEnB,GAAK;MAAAC,eAAA;MAAiBC;IAAa;IACpEI;EACH;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}