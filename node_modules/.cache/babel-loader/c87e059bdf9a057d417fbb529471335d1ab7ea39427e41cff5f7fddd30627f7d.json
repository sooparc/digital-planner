{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignHeaderVariables({\n  baseStyles,\n  minMediaStyles,\n  header\n}) {\n  const headerHeight = header?.height;\n  const collapsedHeaderTransform = \"translateY(calc(var(--app-shell-header-height) * -1))\";\n  const shouldOffset = header?.offset ?? true;\n  if (isPrimitiveSize(headerHeight)) {\n    const baseSize = rem(getBaseSize(headerHeight));\n    baseStyles[\"--app-shell-header-height\"] = baseSize;\n    if (shouldOffset) {\n      baseStyles[\"--app-shell-header-offset\"] = baseSize;\n    }\n  }\n  if (isResponsiveSize(headerHeight)) {\n    if (typeof headerHeight.base !== \"undefined\") {\n      baseStyles[\"--app-shell-header-height\"] = rem(headerHeight.base);\n      if (shouldOffset) {\n        baseStyles[\"--app-shell-header-offset\"] = rem(headerHeight.base);\n      }\n    }\n    keys(headerHeight).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-header-height\"] = rem(headerHeight[key]);\n        if (shouldOffset) {\n          minMediaStyles[key][\"--app-shell-header-offset\"] = rem(headerHeight[key]);\n        }\n      }\n    });\n  }\n  if (header?.collapsed) {\n    baseStyles[\"--app-shell-header-transform\"] = collapsedHeaderTransform;\n    baseStyles[\"--app-shell-header-offset\"] = \"0px !important\";\n  }\n}\nexport { assignHeaderVariables };","map":{"version":3,"names":["assignHeaderVariables","baseStyles","minMediaStyles","header","headerHeight","height","collapsedHeaderTransform","shouldOffset","offset","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","collapsed"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\AppShell\\AppShellMediaStyles\\assign-header-variables\\assign-header-variables.ts"],"sourcesContent":["import { keys, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignHeaderVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  header: AppShellProps['header'] | undefined;\n}\n\nexport function assignHeaderVariables({\n  baseStyles,\n  minMediaStyles,\n  header,\n}: AssignHeaderVariablesInput) {\n  const headerHeight = header?.height;\n  const collapsedHeaderTransform = 'translateY(calc(var(--app-shell-header-height) * -1))';\n  const shouldOffset = header?.offset ?? true;\n\n  if (isPrimitiveSize(headerHeight)) {\n    const baseSize = rem(getBaseSize(headerHeight));\n    baseStyles['--app-shell-header-height'] = baseSize;\n    if (shouldOffset) {\n      baseStyles['--app-shell-header-offset'] = baseSize;\n    }\n  }\n\n  if (isResponsiveSize(headerHeight)) {\n    if (typeof headerHeight.base !== 'undefined') {\n      baseStyles['--app-shell-header-height'] = rem(headerHeight.base);\n\n      if (shouldOffset) {\n        baseStyles['--app-shell-header-offset'] = rem(headerHeight.base);\n      }\n    }\n\n    keys(headerHeight).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-header-height'] = rem(headerHeight[key]);\n\n        if (shouldOffset) {\n          minMediaStyles[key]['--app-shell-header-offset'] = rem(headerHeight[key]);\n        }\n      }\n    });\n  }\n\n  if (header?.collapsed) {\n    baseStyles['--app-shell-header-transform'] = collapsedHeaderTransform;\n    baseStyles['--app-shell-header-offset'] = '0px !important';\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAaO,SAASA,qBAAsBA,CAAA;EACpCC,UAAA;EACAC,cAAA;EACAC;AACF,CAA+B;EAC7B,MAAMC,YAAA,GAAeD,MAAQ,EAAAE,MAAA;EAC7B,MAAMC,wBAA2B;EAC3B,MAAAC,YAAA,GAAeJ,MAAA,EAAQK,MAAU;EAEnC,IAAAC,eAAA,CAAgBL,YAAY,CAAG;IACjC,MAAMM,QAAW,GAAAC,GAAA,CAAIC,WAAY,CAAAR,YAAY,CAAC;IAC9CH,UAAA,CAAW,2BAA2B,CAAI,GAAAS,QAAA;IAC1C,IAAIH,YAAc;MAChBN,UAAA,CAAW,2BAA2B,CAAI,GAAAS,QAAA;IAAA;EAC5C;EAGE,IAAAG,gBAAA,CAAiBT,YAAY,CAAG;IAC9B,WAAOA,YAAa,CAAAU,IAAA,KAAS,WAAa;MAC5Cb,UAAA,CAAW,2BAA2B,IAAIU,GAAI,CAAAP,YAAA,CAAaU,IAAI;MAE/D,IAAIP,YAAc;QAChBN,UAAA,CAAW,2BAA2B,IAAIU,GAAI,CAAAP,YAAA,CAAaU,IAAI;MAAA;IACjE;IAGFC,IAAA,CAAKX,YAAY,EAAEY,OAAQ,CAACC,GAAQ;MAClC,IAAIA,GAAA,KAAQ,MAAQ;QAClBf,cAAA,CAAee,GAAG,IAAIf,cAAe,CAAAe,GAAG,KAAK,CAAC;QAC9Cf,cAAA,CAAee,GAAG,CAAE,4BAA2B,IAAIN,GAAI,CAAAP,YAAA,CAAaa,GAAG,CAAC;QAExE,IAAIV,YAAc;UAChBL,cAAA,CAAee,GAAG,CAAE,4BAA2B,IAAIN,GAAI,CAAAP,YAAA,CAAaa,GAAG,CAAC;QAAA;MAC1E;IACF,CACD;EAAA;EAGH,IAAId,MAAA,EAAQe,SAAW;IACrBjB,UAAA,CAAW,8BAA8B,CAAI,GAAAK,wBAAA;IAC7CL,UAAA,CAAW,2BAA2B,CAAI;EAAA;AAE9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}