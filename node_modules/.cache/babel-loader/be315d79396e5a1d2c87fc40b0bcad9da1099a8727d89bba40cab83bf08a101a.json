{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Bars } from './loaders/Bars.mjs';\nimport { Dots } from './loaders/Dots.mjs';\nimport { Oval } from './loaders/Oval.mjs';\nimport classes from './Loader.module.css.mjs';\nconst defaultLoaders = {\n  bars: Bars,\n  oval: Oval,\n  dots: Dots\n};\nconst defaultProps = {\n  loaders: defaultLoaders,\n  type: \"oval\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  size,\n  color\n}) => ({\n  root: {\n    \"--loader-size\": getSize(size, \"loader-size\"),\n    \"--loader-color\": color ? getThemeColor(color, theme) : void 0\n  }\n}));\nconst Loader = factory((_props, ref) => {\n  const props = useProps(\"Loader\", defaultProps, _props);\n  const {\n    size,\n    color,\n    type,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    loaders,\n    variant,\n    children,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Loader\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  if (children) {\n    return /* @__PURE__ */jsx(Box, {\n      ...getStyles(\"root\"),\n      ref,\n      ...others,\n      children\n    });\n  }\n  return /* @__PURE__ */jsx(Box, {\n    ...getStyles(\"root\"),\n    ref,\n    component: loaders[type],\n    variant,\n    size,\n    ...others\n  });\n});\nLoader.defaultLoaders = defaultLoaders;\nLoader.classes = classes;\nLoader.displayName = \"@mantine/core/Loader\";\nexport { Loader, defaultLoaders };","map":{"version":3,"names":["defaultLoaders","bars","Bars","oval","Oval","dots","Dots","defaultProps","loaders","type","varsResolver","createVarsResolver","theme","size","color","root","getSize","getThemeColor","Loader","factory","_props","ref","props","useProps","vars","className","style","classNames","styles","unstyled","variant","children","others","getStyles","useStyles","name","classes","jsx","Box","component","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Loader\\Loader.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport type { MantineLoader, MantineLoadersRecord } from './Loader.types';\nimport { Bars } from './loaders/Bars';\nimport { Dots } from './loaders/Dots';\nimport { Oval } from './loaders/Oval';\nimport classes from './Loader.module.css';\n\nexport type LoaderStylesNames = 'root';\nexport type LoaderCssVariables = {\n  root: '--loader-size' | '--loader-color';\n};\n\nexport interface LoaderProps\n  extends BoxProps,\n    StylesApiProps<LoaderFactory>,\n    Omit<React.ComponentPropsWithoutRef<'svg'>, keyof BoxProps> {\n  /** Controls `width` and `height` of the loader. `Loader` has predefined `xs`-`xl` values. Numbers are converted to rem. Default value is `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Loader type, key of `loaders` prop, default value is `'oval'` */\n  type?: MantineLoader;\n\n  /** Object of loaders components, can be customized via default props or inline. Default value contains `bars`, `oval` and `dots` */\n  loaders?: MantineLoadersRecord;\n\n  /** Overrides default loader with given content */\n  children?: React.ReactNode;\n}\n\nexport type LoaderFactory = Factory<{\n  props: LoaderProps;\n  ref: HTMLSpanElement;\n  stylesNames: LoaderStylesNames;\n  vars: LoaderCssVariables;\n  staticComponents: {\n    defaultLoaders: typeof defaultLoaders;\n  };\n}>;\n\nexport const defaultLoaders: MantineLoadersRecord = {\n  bars: Bars,\n  oval: Oval,\n  dots: Dots,\n};\n\nconst defaultProps: Partial<LoaderProps> = {\n  loaders: defaultLoaders,\n  type: 'oval',\n};\n\nconst varsResolver = createVarsResolver<LoaderFactory>((theme, { size, color }) => ({\n  root: {\n    '--loader-size': getSize(size, 'loader-size'),\n    '--loader-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Loader = factory<LoaderFactory>((_props, ref) => {\n  const props = useProps('Loader', defaultProps, _props);\n  const {\n    size,\n    color,\n    type,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    loaders,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<LoaderFactory>({\n    name: 'Loader',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (children) {\n    return (\n      <Box {...getStyles('root')} ref={ref as any} {...(others as any)}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      component={(loaders as any)[type!]}\n      variant={variant}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nLoader.defaultLoaders = defaultLoaders;\nLoader.classes = classes;\nLoader.displayName = '@mantine/core/Loader';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuDO,MAAMA,cAAuC;EAClDC,IAAM,EAAAC,IAAA;EACNC,IAAM,EAAAC,IAAA;EACNC,IAAM,EAAAC;AACR;AAEA,MAAMC,YAAqC;EACzCC,OAAS,EAAAR,cAAA;EACTS,IAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAkC,EAACC,KAAA,EAAO;EAAEC,IAAA;EAAMC;AAAA,CAAa;EAClFC,IAAM;IACJ,iBAAiBC,OAAQ,CAAAH,IAAA,EAAM,aAAa;IAC5C,gBAAkB,EAAAC,KAAA,GAAQG,aAAc,CAAAH,KAAA,EAAOF,KAAK,CAAI;EAAA;AAE5D,CAAE;AAEK,MAAMM,MAAS,GAAAC,OAAA,CAAuB,CAACC,MAAA,EAAQC,GAAQ;EAC5D,MAAMC,KAAQ,GAAAC,QAAA,CAAS,QAAU,EAAAhB,YAAA,EAAca,MAAM;EAC/C;IACJP,IAAA;IACAC,KAAA;IACAL,IAAA;IACAe,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACArB,OAAA;IACAsB,OAAA;IACAC,QAAA;IACA,GAAGC;EAAA,CACD,GAAAV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAAyB;IACzCC,IAAM;IACNb,KAAA;IACAc,OAAA;IACAX,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAL,IAAA;IACAd;EAAA,CACD;EAED,IAAIqB,QAAU;IAEV,sBAAAM,GAAA,CAACC,GAAA;MAAK,GAAGL,SAAA,CAAU,MAAM,CAAG;MAAAZ,GAAA;MAAkB,GAAIW,MAAA;MAC/CD;IACH;EAAA;EAKF,sBAAAM,GAAA,CAACC,GAAA;IACE,GAAGL,SAAA,CAAU,MAAM;IACpBZ,GAAA;IACAkB,SAAA,EAAY/B,OAAA,CAAgBC,IAAK;IACjCqB,OAAA;IACAjB,IAAA;IACC,GAAGmB;EAAA,CACN;AAEJ,CAAC;AAEDd,MAAA,CAAOlB,cAAiB,GAAAA,cAAA;AACxBkB,MAAA,CAAOkB,OAAU,GAAAA,OAAA;AACjBlB,MAAA,CAAOsB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}