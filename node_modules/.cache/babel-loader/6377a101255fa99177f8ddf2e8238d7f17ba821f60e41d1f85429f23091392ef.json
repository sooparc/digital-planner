{"ast":null,"code":"'use client';\n\nimport { useRef, useContext, useCallback, useEffect } from 'react';\nimport { useColorScheme } from '@mantine/hooks';\nimport 'react/jsx-runtime';\nimport { noop } from '../../utils/noop/noop.mjs';\nimport { MantineContext, useMantineStyleNonce } from '../Mantine.context.mjs';\nfunction disableTransition(nonce) {\n  const style = document.createElement(\"style\");\n  style.setAttribute(\"data-mantine-styles\", \"inline\");\n  style.innerHTML = \"*, *::before, *::after {transition: none !important;}\";\n  style.setAttribute(\"data-mantine-disable-transition\", \"true\");\n  nonce && style.setAttribute(\"nonce\", nonce);\n  document.head.appendChild(style);\n  const clear = () => document.querySelectorAll(\"[data-mantine-disable-transition]\").forEach(element => element.remove());\n  return clear;\n}\nfunction useMantineColorScheme({\n  keepTransitions\n} = {}) {\n  const clearStylesRef = useRef(noop);\n  const timeoutRef = useRef(-1);\n  const ctx = useContext(MantineContext);\n  const nonce = useMantineStyleNonce();\n  const nonceValue = useRef(nonce?.());\n  if (!ctx) {\n    throw new Error(\"[@mantine/core] MantineProvider was not found in tree\");\n  }\n  const setColorScheme = value => {\n    ctx.setColorScheme(value);\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n  const clearColorScheme = () => {\n    ctx.clearColorScheme();\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n  const osColorScheme = useColorScheme(\"light\", {\n    getInitialValueInEffect: false\n  });\n  const computedColorScheme = ctx.colorScheme === \"auto\" ? osColorScheme : ctx.colorScheme;\n  const toggleColorScheme = useCallback(() => setColorScheme(computedColorScheme === \"light\" ? \"dark\" : \"light\"), [setColorScheme, computedColorScheme]);\n  useEffect(() => () => {\n    clearStylesRef.current?.();\n    window.clearTimeout(timeoutRef.current);\n  }, []);\n  return {\n    colorScheme: ctx.colorScheme,\n    setColorScheme,\n    clearColorScheme,\n    toggleColorScheme\n  };\n}\nexport { useMantineColorScheme };","map":{"version":3,"names":["disableTransition","nonce","style","document","createElement","setAttribute","innerHTML","head","appendChild","clear","querySelectorAll","forEach","element","remove","useMantineColorScheme","keepTransitions","clearStylesRef","useRef","noop","timeoutRef","ctx","useContext","MantineContext","useMantineStyleNonce","nonceValue","Error","setColorScheme","value","current","window","clearTimeout","setTimeout","clearColorScheme","osColorScheme","useColorScheme","getInitialValueInEffect","computedColorScheme","colorScheme","toggleColorScheme","useCallback","useEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\use-mantine-color-scheme\\use-mantine-color-scheme.ts"],"sourcesContent":["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport { useColorScheme } from '@mantine/hooks';\nimport { noop } from '../../utils';\nimport { MantineContext, useMantineStyleNonce } from '../Mantine.context';\nimport { MantineColorScheme } from '../theme.types';\n\nfunction disableTransition(nonce: string | undefined) {\n  const style = document.createElement('style');\n  style.setAttribute('data-mantine-styles', 'inline');\n  style.innerHTML = '*, *::before, *::after {transition: none !important;}';\n  style.setAttribute('data-mantine-disable-transition', 'true');\n  nonce && style.setAttribute('nonce', nonce);\n\n  document.head.appendChild(style);\n  const clear = () =>\n    document\n      .querySelectorAll('[data-mantine-disable-transition]')\n      .forEach((element) => element.remove());\n  return clear;\n}\n\nexport function useMantineColorScheme({ keepTransitions }: { keepTransitions?: boolean } = {}) {\n  const clearStylesRef = useRef<() => void>(noop);\n  const timeoutRef = useRef<number>(-1);\n  const ctx = useContext(MantineContext);\n  const nonce = useMantineStyleNonce();\n  const nonceValue = useRef(nonce?.());\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  const setColorScheme = (value: MantineColorScheme) => {\n    ctx.setColorScheme(value);\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const clearColorScheme = () => {\n    ctx.clearColorScheme();\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const osColorScheme = useColorScheme('light', { getInitialValueInEffect: false });\n  const computedColorScheme = ctx.colorScheme === 'auto' ? osColorScheme : ctx.colorScheme;\n\n  const toggleColorScheme = useCallback(\n    () => setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light'),\n    [setColorScheme, computedColorScheme]\n  );\n\n  useEffect(\n    () => () => {\n      clearStylesRef.current?.();\n      window.clearTimeout(timeoutRef.current);\n    },\n    []\n  );\n\n  return {\n    colorScheme: ctx.colorScheme,\n    setColorScheme,\n    clearColorScheme,\n    toggleColorScheme,\n  };\n}\n"],"mappings":";;;;;;;AAMA,SAASA,kBAAkBC,KAA2B;EAC9C,MAAAC,KAAA,GAAQC,QAAS,CAAAC,aAAA,CAAc,OAAO;EACtCF,KAAA,CAAAG,YAAA,CAAa,uBAAuB,QAAQ;EAClDH,KAAA,CAAMI,SAAY;EACZJ,KAAA,CAAAG,YAAA,CAAa,mCAAmC,MAAM;EACnDJ,KAAA,IAAAC,KAAA,CAAMG,YAAa,UAASJ,KAAK;EAEjCE,QAAA,CAAAI,IAAA,CAAKC,WAAA,CAAYN,KAAK;EACzB,MAAAO,KAAA,GAAQA,CAAA,KACZN,QAAA,CACGO,gBAAiB,oCAAmC,CACpD,CAAAC,OAAA,CAASC,OAAA,IAAYA,OAAQ,CAAAC,MAAA,EAAQ;EACnC,OAAAJ,KAAA;AACT;AAEO,SAASK,qBAAsBA,CAAA;EAAEC;AAAgB,IAAmC,EAAI;EACvF,MAAAC,cAAA,GAAiBC,MAAA,CAAmBC,IAAI;EACxC,MAAAC,UAAA,GAAaF,MAAA,CAAe,CAAE;EAC9B,MAAAG,GAAA,GAAMC,UAAA,CAAWC,cAAc;EACrC,MAAMrB,KAAA,GAAQsB,oBAAqB;EAC7B,MAAAC,UAAA,GAAaP,MAAO,CAAAhB,KAAA,IAAS;EAEnC,IAAI,CAACmB,GAAK;IACF,UAAIK,KAAA,CAAM,uDAAuD;EAAA;EAGnE,MAAAC,cAAA,GAAkBC,KAA8B;IACpDP,GAAA,CAAIM,cAAA,CAAeC,KAAK;IACTX,cAAA,CAAAY,OAAA,GAAUb,eAAA,GAAkB,MAAM,EAAC,GAAIf,iBAAkB,CAAAwB,UAAA,CAAWI,OAAO;IACnFC,MAAA,CAAAC,YAAA,CAAaX,UAAA,CAAWS,OAAO;IAC3BT,UAAA,CAAAS,OAAA,GAAUC,MAAO,CAAAE,UAAA,CAAW,MAAM;MAC3Cf,cAAA,CAAeY,OAAU;IAAA,GACxB,EAAE;EACP;EAEA,MAAMI,gBAAA,GAAmBA,CAAA,KAAM;IAC7BZ,GAAA,CAAIY,gBAAiB;IACNhB,cAAA,CAAAY,OAAA,GAAUb,eAAA,GAAkB,MAAM,EAAC,GAAIf,iBAAkB,CAAAwB,UAAA,CAAWI,OAAO;IACnFC,MAAA,CAAAC,YAAA,CAAaX,UAAA,CAAWS,OAAO;IAC3BT,UAAA,CAAAS,OAAA,GAAUC,MAAO,CAAAE,UAAA,CAAW,MAAM;MAC3Cf,cAAA,CAAeY,OAAU;IAAA,GACxB,EAAE;EACP;EAEA,MAAMK,aAAA,GAAgBC,cAAe,UAAS;IAAEC,uBAAA,EAAyB;EAAA,CAAO;EAChF,MAAMC,mBAAsB,GAAAhB,GAAA,CAAIiB,WAAgB,cAASJ,aAAA,GAAgBb,GAAI,CAAAiB,WAAA;EAE7E,MAAMC,iBAAoB,GAAAC,WAAA,CACxB,MAAMb,cAAA,CAAeU,mBAAwB,eAAU,SAAS,OAAO,GACvE,CAACV,cAAA,EAAgBU,mBAAmB,CACtC;EAEAI,SAAA,CACE,MAAM,MAAM;IACVxB,cAAA,CAAeY,OAAU;IAClBC,MAAA,CAAAC,YAAA,CAAaX,UAAA,CAAWS,OAAO;EACxC,GACA,EACF;EAEO;IACLS,WAAA,EAAajB,GAAI,CAAAiB,WAAA;IACjBX,cAAA;IACAM,gBAAA;IACAM;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}