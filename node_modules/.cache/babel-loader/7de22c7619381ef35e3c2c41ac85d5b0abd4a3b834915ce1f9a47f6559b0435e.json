{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nfunction isMacOS(userAgent) {\n  const macosPattern = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n  return macosPattern.test(userAgent);\n}\nfunction isIOS(userAgent) {\n  const iosPattern = /(iPhone)|(iPad)|(iPod)/i;\n  return iosPattern.test(userAgent);\n}\nfunction isWindows(userAgent) {\n  const windowsPattern = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n  return windowsPattern.test(userAgent);\n}\nfunction isAndroid(userAgent) {\n  const androidPattern = /Android/i;\n  return androidPattern.test(userAgent);\n}\nfunction isLinux(userAgent) {\n  const linuxPattern = /Linux/i;\n  return linuxPattern.test(userAgent);\n}\nfunction getOS() {\n  if (typeof window === \"undefined\") {\n    return \"undetermined\";\n  }\n  const {\n    userAgent\n  } = window.navigator;\n  if (isIOS(userAgent) || isMacOS(userAgent) && \"ontouchend\" in document) {\n    return \"ios\";\n  }\n  if (isMacOS(userAgent)) {\n    return \"macos\";\n  }\n  if (isWindows(userAgent)) {\n    return \"windows\";\n  }\n  if (isAndroid(userAgent)) {\n    return \"android\";\n  }\n  if (isLinux(userAgent)) {\n    return \"linux\";\n  }\n  return \"undetermined\";\n}\nfunction useOs(options = {\n  getValueInEffect: true\n}) {\n  const [value, setValue] = useState(options.getValueInEffect ? \"undetermined\" : getOS());\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n  return value;\n}\nexport { useOs };","map":{"version":3,"names":["isMacOS","userAgent","macosPattern","test","isIOS","iosPattern","isWindows","windowsPattern","isAndroid","androidPattern","isLinux","linuxPattern","getOS","window","navigator","document","useOs","options","getValueInEffect","value","setValue","useState","useIsomorphicEffect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-os\\use-os.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport type OS = 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux';\n\nfunction isMacOS(userAgent: string): boolean {\n  const macosPattern = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n\n  return macosPattern.test(userAgent);\n}\n\nfunction isIOS(userAgent: string): boolean {\n  const iosPattern = /(iPhone)|(iPad)|(iPod)/i;\n\n  return iosPattern.test(userAgent);\n}\n\nfunction isWindows(userAgent: string): boolean {\n  const windowsPattern = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n\n  return windowsPattern.test(userAgent);\n}\n\nfunction isAndroid(userAgent: string): boolean {\n  const androidPattern = /Android/i;\n\n  return androidPattern.test(userAgent);\n}\n\nfunction isLinux(userAgent: string): boolean {\n  const linuxPattern = /Linux/i;\n\n  return linuxPattern.test(userAgent);\n}\n\nfunction getOS(): OS {\n  if (typeof window === 'undefined') {\n    return 'undetermined';\n  }\n\n  const { userAgent } = window.navigator;\n\n  if (isIOS(userAgent) || (isMacOS(userAgent) && 'ontouchend' in document)) {\n    return 'ios';\n  }\n  if (isMacOS(userAgent)) {\n    return 'macos';\n  }\n  if (isWindows(userAgent)) {\n    return 'windows';\n  }\n  if (isAndroid(userAgent)) {\n    return 'android';\n  }\n  if (isLinux(userAgent)) {\n    return 'linux';\n  }\n\n  return 'undetermined';\n}\n\ninterface UseOsOptions {\n  getValueInEffect: boolean;\n}\n\nexport function useOs(options: UseOsOptions = { getValueInEffect: true }): OS {\n  const [value, setValue] = useState<OS>(options.getValueInEffect ? 'undetermined' : getOS());\n\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n\n  return value;\n}\n"],"mappings":";;;;AAKA,SAASA,QAAQC,SAA4B;EAC3C,MAAMC,YAAe;EAEd,OAAAA,YAAA,CAAaC,IAAA,CAAKF,SAAS;AACpC;AAEA,SAASG,MAAMH,SAA4B;EACzC,MAAMI,UAAa;EAEZ,OAAAA,UAAA,CAAWF,IAAA,CAAKF,SAAS;AAClC;AAEA,SAASK,UAAUL,SAA4B;EAC7C,MAAMM,cAAiB;EAEhB,OAAAA,cAAA,CAAeJ,IAAA,CAAKF,SAAS;AACtC;AAEA,SAASO,UAAUP,SAA4B;EAC7C,MAAMQ,cAAiB;EAEhB,OAAAA,cAAA,CAAeN,IAAA,CAAKF,SAAS;AACtC;AAEA,SAASS,QAAQT,SAA4B;EAC3C,MAAMU,YAAe;EAEd,OAAAA,YAAA,CAAaR,IAAA,CAAKF,SAAS;AACpC;AAEA,SAASW,KAAYA,CAAA;EACf,WAAOC,MAAA,KAAW,WAAa;IAC1B;EAAA;EAGH;IAAEZ;EAAU,IAAIY,MAAO,CAAAC,SAAA;EAE7B,IAAIV,KAAA,CAAMH,SAAS,KAAMD,OAAA,CAAQC,SAAS,KAAK,gBAAgBc,QAAW;IACjE;EAAA;EAEL,IAAAf,OAAA,CAAQC,SAAS,CAAG;IACf;EAAA;EAEL,IAAAK,SAAA,CAAUL,SAAS,CAAG;IACjB;EAAA;EAEL,IAAAO,SAAA,CAAUP,SAAS,CAAG;IACjB;EAAA;EAEL,IAAAS,OAAA,CAAQT,SAAS,CAAG;IACf;EAAA;EAGF;AACT;AAMO,SAASe,KAAMA,CAAAC,OAAA,GAAwB;EAAEC,gBAAA,EAAkB;AAAA,CAAY;EACtE,OAACC,KAAA,EAAOC,QAAQ,IAAIC,QAAA,CAAaJ,OAAQ,CAAAC,gBAAA,GAAmB,cAAiB,GAAAN,KAAA,EAAO;EAE1FU,mBAAA,CAAoB,MAAM;IACxB,IAAIL,OAAA,CAAQC,gBAAkB;MAC5BE,QAAA,CAASR,KAAK;IAAA;EAElB,GAAG,EAAE;EAEE,OAAAO,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}