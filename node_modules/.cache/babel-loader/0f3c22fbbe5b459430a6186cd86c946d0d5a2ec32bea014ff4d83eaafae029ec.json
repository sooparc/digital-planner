{"ast":null,"code":"'use client';\n\nimport { toRgba } from '../to-rgba/to-rgba.mjs';\nfunction gammaCorrect(c) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\nfunction getLightnessFromOklch(oklchColor) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\nfunction luminance(color) {\n  if (color.startsWith(\"oklch(\")) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n  const {\n    r,\n    g,\n    b\n  } = toRgba(color);\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\nfunction isLightColor(color, luminanceThreshold = 0.179) {\n  if (color.startsWith(\"var(\")) {\n    return false;\n  }\n  return luminance(color) > luminanceThreshold;\n}\nexport { isLightColor, luminance };","map":{"version":3,"names":["gammaCorrect","c","getLightnessFromOklch","oklchColor","match","parseFloat","luminance","color","startsWith","r","g","b","toRgba","sR","sG","sB","rLinear","gLinear","bLinear","isLightColor","luminanceThreshold"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\color-functions\\luminance\\luminance.ts"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nfunction gammaCorrect(c: number) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\n\nfunction getLightnessFromOklch(oklchColor: string) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\n\nexport function luminance(color: string): number {\n  if (color.startsWith('oklch(')) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n\n  const { r, g, b } = toRgba(color);\n\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\n\nexport function isLightColor(color: string, luminanceThreshold = 0.179) {\n  if (color.startsWith('var(')) {\n    return false;\n  }\n\n  return luminance(color) > luminanceThreshold;\n}\n"],"mappings":";;;AAEA,SAASA,aAAaC,CAAW;EAC/B,OAAOA,CAAA,IAAK,OAAU,GAAAA,CAAA,GAAI,KAAU,KAAAA,CAAA,GAAI,SAAS,KAAU;AAC7D;AAEA,SAASC,sBAAsBC,UAAoB;EAC3C,MAAAC,KAAA,GAAQD,UAAW,CAAAC,KAAA,CAAM,iBAAiB;EAChD,OAAOA,KAAQ,GAAAC,UAAA,CAAWD,KAAM,EAAC,CAAC,CAAI;AACxC;AAEO,SAASE,UAAUC,KAAuB;EAC3C,IAAAA,KAAA,CAAMC,UAAW,SAAQ,CAAG;IACtB,QAAAN,qBAAA,CAAsBK,KAAK,KAAK,CAAK;EAAA;EAG/C,MAAM;IAAEE,CAAG;IAAAC,CAAA;IAAGC;EAAE,IAAIC,MAAA,CAAOL,KAAK;EAEhC,MAAMM,EAAA,GAAKJ,CAAI;EACf,MAAMK,EAAA,GAAKJ,CAAI;EACf,MAAMK,EAAA,GAAKJ,CAAI;EAET,MAAAK,OAAA,GAAUhB,YAAA,CAAaa,EAAE;EACzB,MAAAI,OAAA,GAAUjB,YAAA,CAAac,EAAE;EACzB,MAAAI,OAAA,GAAUlB,YAAA,CAAae,EAAE;EAE/B,OAAO,MAAS,GAAAC,OAAA,GAAU,MAAS,GAAAC,OAAA,GAAU,MAAS,GAAAC,OAAA;AACxD;AAEgB,SAAAC,aAAaZ,KAAe,EAAAa,kBAAA,GAAqB,KAAO;EAClE,IAAAb,KAAA,CAAMC,UAAW,OAAM,CAAG;IACrB;EAAA;EAGF,OAAAF,SAAA,CAAUC,KAAK,CAAI,GAAAa,kBAAA;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}