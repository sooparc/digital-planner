{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { useMove, clampUseMovePosition } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useColorPickerContext } from '../ColorPicker.context.mjs';\nimport { convertHsvaTo } from '../converters/converters.mjs';\nimport { Thumb } from '../Thumb/Thumb.mjs';\nfunction Saturation({\n  className,\n  onChange,\n  onChangeEnd,\n  value,\n  saturationLabel,\n  focusable = true,\n  size,\n  color,\n  onScrubStart,\n  onScrubEnd,\n  ...others\n}) {\n  const {\n    getStyles\n  } = useColorPickerContext();\n  const [position, setPosition] = useState({\n    x: value.s / 100,\n    y: 1 - value.v / 100\n  });\n  const positionRef = useRef(position);\n  const {\n    ref\n  } = useMove(({\n    x,\n    y\n  }) => {\n    positionRef.current = {\n      x,\n      y\n    };\n    onChange({\n      s: Math.round(x * 100),\n      v: Math.round((1 - y) * 100)\n    });\n  }, {\n    onScrubEnd: () => {\n      const {\n        x,\n        y\n      } = positionRef.current;\n      onChangeEnd({\n        s: Math.round(x * 100),\n        v: Math.round((1 - y) * 100)\n      });\n      onScrubEnd?.();\n    },\n    onScrubStart\n  });\n  useEffect(() => {\n    setPosition({\n      x: value.s / 100,\n      y: 1 - value.v / 100\n    });\n  }, [value.s, value.v]);\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100)\n    });\n    onChangeEnd({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100)\n    });\n  };\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case \"ArrowUp\":\n        {\n          handleArrow(event, {\n            y: position.y - 0.05,\n            x: position.x\n          });\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          handleArrow(event, {\n            y: position.y + 0.05,\n            x: position.x\n          });\n          break;\n        }\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n  return /* @__PURE__ */jsxs(Box, {\n    ...getStyles(\"saturation\"),\n    ref,\n    ...others,\n    role: \"slider\",\n    \"aria-label\": saturationLabel,\n    \"aria-valuenow\": position.x,\n    \"aria-valuetext\": convertHsvaTo(\"rgba\", value),\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown,\n    children: [/* @__PURE__ */jsx(\"div\", {\n      ...getStyles(\"saturationOverlay\", {\n        style: {\n          backgroundColor: `hsl(${value.h}, 100%, 50%)`\n        }\n      })\n    }), /* @__PURE__ */jsx(\"div\", {\n      ...getStyles(\"saturationOverlay\", {\n        style: {\n          backgroundImage: \"linear-gradient(90deg, #fff, transparent)\"\n        }\n      })\n    }), /* @__PURE__ */jsx(\"div\", {\n      ...getStyles(\"saturationOverlay\", {\n        style: {\n          backgroundImage: \"linear-gradient(0deg, #000, transparent)\"\n        }\n      })\n    }), /* @__PURE__ */jsx(Thumb, {\n      position,\n      ...getStyles(\"thumb\", {\n        style: {\n          backgroundColor: color\n        }\n      })\n    })]\n  });\n}\nSaturation.displayName = \"@mantine/core/Saturation\";\nexport { Saturation };","map":{"version":3,"names":["Saturation","className","onChange","onChangeEnd","value","saturationLabel","focusable","size","color","onScrubStart","onScrubEnd","others","getStyles","useColorPickerContext","position","setPosition","useState","x","s","y","v","positionRef","useRef","ref","useMove","current","Math","round","useEffect","handleArrow","event","pos","preventDefault","_position","clampUseMovePosition","handleKeyDown","key","jsxs","Box","role","convertHsvaTo","tabIndex","onKeyDown","children","jsx","style","backgroundColor","h","backgroundImage","Thumb","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ColorPicker\\Saturation\\Saturation.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { clampUseMovePosition, useMove, UseMovePosition } from '@mantine/hooks';\nimport { Box, ElementProps, MantineSize } from '../../../core';\nimport { useColorPickerContext } from '../ColorPicker.context';\nimport { HsvaColor } from '../ColorPicker.types';\nimport { convertHsvaTo } from '../converters';\nimport { Thumb } from '../Thumb/Thumb';\n\nexport interface SaturationProps extends ElementProps<'div', 'onChange'> {\n  value: HsvaColor;\n  onChange: (color: Partial<HsvaColor>) => void;\n  onChangeEnd: (color: Partial<HsvaColor>) => void;\n  onScrubStart?: () => void;\n  onScrubEnd?: () => void;\n  saturationLabel?: string;\n  size: MantineSize | (string & {});\n  color: string;\n  focusable?: boolean;\n}\n\nexport function Saturation({\n  className,\n  onChange,\n  onChangeEnd,\n  value,\n  saturationLabel,\n  focusable = true,\n  size,\n  color,\n  onScrubStart,\n  onScrubEnd,\n  ...others\n}: SaturationProps) {\n  const { getStyles } = useColorPickerContext()!;\n\n  const [position, setPosition] = useState({ x: value.s / 100, y: 1 - value.v / 100 });\n  const positionRef = useRef(position);\n\n  const { ref } = useMove(\n    ({ x, y }) => {\n      positionRef.current = { x, y };\n      onChange({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n    },\n    {\n      onScrubEnd: () => {\n        const { x, y } = positionRef.current;\n        onChangeEnd({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n        onScrubEnd?.();\n      },\n      onScrubStart,\n    }\n  );\n\n  useEffect(() => {\n    setPosition({ x: value.s / 100, y: 1 - value.v / 100 });\n  }, [value.s, value.v]);\n\n  const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange({ s: Math.round(_position.x * 100), v: Math.round((1 - _position.y) * 100) });\n    onChangeEnd({ s: Math.round(_position.x * 100), v: Math.round((1 - _position.y) * 100) });\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case 'ArrowUp': {\n        handleArrow(event, { y: position.y - 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowDown': {\n        handleArrow(event, { y: position.y + 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowRight': {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case 'ArrowLeft': {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  return (\n    <Box\n      {...getStyles('saturation')}\n      ref={ref as any}\n      {...others}\n      role=\"slider\"\n      aria-label={saturationLabel}\n      aria-valuenow={position.x}\n      aria-valuetext={convertHsvaTo('rgba', value)}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n    >\n      <div\n        {...getStyles('saturationOverlay', {\n          style: { backgroundColor: `hsl(${value.h}, 100%, 50%)` },\n        })}\n      />\n\n      <div\n        {...getStyles('saturationOverlay', {\n          style: { backgroundImage: 'linear-gradient(90deg, #fff, transparent)' },\n        })}\n      />\n\n      <div\n        {...getStyles('saturationOverlay', {\n          style: { backgroundImage: 'linear-gradient(0deg, #000, transparent)' },\n        })}\n      />\n\n      <Thumb position={position} {...getStyles('thumb', { style: { backgroundColor: color } })} />\n    </Box>\n  );\n}\n\nSaturation.displayName = '@mantine/core/Saturation';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}