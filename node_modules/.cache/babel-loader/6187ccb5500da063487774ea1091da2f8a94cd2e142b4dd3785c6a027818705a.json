{"ast":null,"code":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update.mjs';\nfunction useTextSelection() {\n  const forceUpdate = useForceUpdate();\n  const [selection, setSelection] = useState(null);\n  const handleSelectionChange = () => {\n    setSelection(document.getSelection());\n    forceUpdate();\n  };\n  useEffect(() => {\n    setSelection(document.getSelection());\n    document.addEventListener(\"selectionchange\", handleSelectionChange);\n    return () => document.removeEventListener(\"selectionchange\", handleSelectionChange);\n  }, []);\n  return selection;\n}\nexport { useTextSelection };","map":{"version":3,"names":["useTextSelection","forceUpdate","useForceUpdate","selection","setSelection","useState","handleSelectionChange","document","getSelection","useEffect","addEventListener","removeEventListener"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-text-selection\\use-text-selection.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update';\n\nexport function useTextSelection(): Selection | null {\n  const forceUpdate = useForceUpdate();\n  const [selection, setSelection] = useState<Selection | null>(null);\n\n  const handleSelectionChange = () => {\n    setSelection(document.getSelection());\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    setSelection(document.getSelection());\n    document.addEventListener('selectionchange', handleSelectionChange);\n    return () => document.removeEventListener('selectionchange', handleSelectionChange);\n  }, []);\n\n  return selection;\n}\n"],"mappings":";;;;AAGO,SAASA,gBAAqCA,CAAA;EACnD,MAAMC,WAAA,GAAcC,cAAe;EACnC,MAAM,CAACC,SAAA,EAAWC,YAAY,IAAIC,QAAA,CAA2B,IAAI;EAEjE,MAAMC,qBAAA,GAAwBA,CAAA,KAAM;IACrBF,YAAA,CAAAG,QAAA,CAASC,YAAA,EAAc;IACxBP,WAAA;EACd;EAEAQ,SAAA,CAAU,MAAM;IACDL,YAAA,CAAAG,QAAA,CAASC,YAAA,EAAc;IAC3BD,QAAA,CAAAG,gBAAA,CAAiB,mBAAmBJ,qBAAqB;IAClE,OAAO,MAAMC,QAAA,CAASI,mBAAoB,oBAAmBL,qBAAqB;EACpF,GAAG,EAAE;EAEE,OAAAH,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}