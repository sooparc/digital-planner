{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { Portal } from './Portal.mjs';\nfunction OptionalPortal({\n  withinPortal = true,\n  children,\n  ...others\n}) {\n  if (withinPortal) {\n    return /* @__PURE__ */jsx(Portal, {\n      ...others,\n      children\n    });\n  }\n  return /* @__PURE__ */jsx(Fragment, {\n    children\n  });\n}\nOptionalPortal.displayName = \"@mantine/core/OptionalPortal\";\nexport { OptionalPortal };","map":{"version":3,"names":["OptionalPortal","withinPortal","children","others","jsx","Portal","Fragment","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Portal\\OptionalPortal.tsx"],"sourcesContent":["import { Portal, PortalProps } from './Portal';\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport function OptionalPortal({ withinPortal = true, children, ...others }: OptionalPortalProps) {\n  if (withinPortal) {\n    return <Portal {...others}>{children}</Portal>;\n  }\n\n  return <>{children}</>;\n}\n\nOptionalPortal.displayName = '@mantine/core/OptionalPortal';\n"],"mappings":";;;;AAOO,SAASA,eAAe;EAAEC,YAAA,GAAe;EAAMC,QAAU;EAAA,GAAGC;AAAA,CAA+B;EAChG,IAAIF,YAAc;IAChB,sBAAQG,GAAA,CAAAC,MAAA;MAAQ,GAAGF,MAAA;MAASD;IAAS;EAAA;EAGvC,sBAAAE,GAAA,CAAAE,QAAA;IAAUJ;EAAS;AACrB;AAEAF,cAAA,CAAeO,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}