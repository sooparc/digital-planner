{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'react';\nimport { getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context.mjs';\nimport { CheckboxCardProvider } from './CheckboxCard.context.mjs';\nimport classes from './CheckboxCard.module.css.mjs';\nconst defaultProps = {\n  withBorder: true\n};\nconst varsResolver = createVarsResolver((_, {\n  radius\n}) => ({\n  card: {\n    \"--card-radius\": getRadius(radius)\n  }\n}));\nconst CheckboxCard = factory((_props, ref) => {\n  const props = useProps(\"CheckboxCard\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    defaultChecked,\n    onChange,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"CheckboxCard\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"card\"\n  });\n  const ctx = useCheckboxGroupContext();\n  const _checked = typeof checked === \"boolean\" ? checked : ctx ? ctx.value.includes(value || \"\") : void 0;\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  return /* @__PURE__ */jsx(CheckboxCardProvider, {\n    value: {\n      checked: _value\n    },\n    children: /* @__PURE__ */jsx(UnstyledButton, {\n      ref,\n      mod: [{\n        \"with-border\": withBorder,\n        checked: _value\n      }, mod],\n      ...getStyles(\"card\"),\n      ...others,\n      role: \"checkbox\",\n      \"aria-checked\": _value,\n      onClick: event => {\n        onClick?.(event);\n        ctx?.onChange(value || \"\");\n        setValue(!_value);\n      }\n    })\n  });\n});\nCheckboxCard.displayName = \"@mantine/core/CheckboxCard\";\nCheckboxCard.classes = classes;\nexport { CheckboxCard };","map":{"version":3,"names":["defaultProps","withBorder","varsResolver","createVarsResolver","_","radius","card","getRadius","CheckboxCard","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","checked","mod","value","onClick","defaultChecked","onChange","others","getStyles","useStyles","name","classes","rootSelector","ctx","useCheckboxGroupContext","_checked","includes","_value","setValue","useUncontrolled","defaultValue","finalValue","jsx","CheckboxCardProvider","children","UnstyledButton","role","event","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Checkbox\\CheckboxCard\\CheckboxCard.tsx"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context';\nimport { CheckboxCardProvider } from './CheckboxCard.context';\nimport classes from './CheckboxCard.module.css';\n\nexport type CheckboxCardStylesNames = 'card';\nexport type CheckboxCardCssVariables = {\n  card: '--card-radius';\n};\n\nexport interface CheckboxCardProps\n  extends BoxProps,\n    StylesApiProps<CheckboxCardFactory>,\n    ElementProps<'button', 'onChange'> {\n  /** Controlled component value */\n  checked?: boolean;\n\n  /** Uncontrolled component default value */\n  defaultChecked?: boolean;\n\n  /** Called when value changes */\n  onChange?: (checked: boolean) => void;\n\n  /** Determines whether the card should have border, `true` by default */\n  withBorder?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Value of the checkbox, used with `Checkbox.Group` */\n  value?: string;\n}\n\nexport type CheckboxCardFactory = Factory<{\n  props: CheckboxCardProps;\n  ref: HTMLButtonElement;\n  stylesNames: CheckboxCardStylesNames;\n  vars: CheckboxCardCssVariables;\n}>;\n\nconst defaultProps: Partial<CheckboxCardProps> = {\n  withBorder: true,\n};\n\nconst varsResolver = createVarsResolver<CheckboxCardFactory>((_, { radius }) => ({\n  card: {\n    '--card-radius': getRadius(radius),\n  },\n}));\n\nexport const CheckboxCard = factory<CheckboxCardFactory>((_props, ref) => {\n  const props = useProps('CheckboxCard', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    defaultChecked,\n    onChange,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CheckboxCardFactory>({\n    name: 'CheckboxCard',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'card',\n  });\n\n  const ctx = useCheckboxGroupContext();\n  const _checked =\n    typeof checked === 'boolean' ? checked : ctx ? ctx.value.includes(value || '') : undefined;\n\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  return (\n    <CheckboxCardProvider value={{ checked: _value }}>\n      <UnstyledButton\n        ref={ref}\n        mod={[{ 'with-border': withBorder, checked: _value }, mod]}\n        {...getStyles('card')}\n        {...others}\n        role=\"checkbox\"\n        aria-checked={_value}\n        onClick={(event) => {\n          onClick?.(event);\n          ctx?.onChange(value || '');\n          setValue(!_value);\n        }}\n      />\n    </CheckboxCardProvider>\n  );\n});\n\nCheckboxCard.displayName = '@mantine/core/CheckboxCard';\nCheckboxCard.classes = classes;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqDA,MAAMA,YAA2C;EAC/CC,UAAY;AACd;AAEA,MAAMC,YAAA,GAAeC,kBAAwC,EAACC,CAAG;EAAEC;AAAA,CAAc;EAC/EC,IAAM;IACJ,iBAAiBC,SAAA,CAAUF,MAAM;EAAA;AAErC,CAAE;AAEK,MAAMG,YAAe,GAAAC,OAAA,CAA6B,CAACC,MAAA,EAAQC,GAAQ;EACxE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,cAAgB,EAAAb,YAAA,EAAcU,MAAM;EACrD;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,OAAA;IACAC,GAAA;IACApB,UAAA;IACAqB,KAAA;IACAC,OAAA;IACAC,cAAA;IACAC,QAAA;IACA,GAAGC;EAAA,CACD,GAAAd,KAAA;EAEJ,MAAMe,SAAA,GAAYC,SAA+B;IAC/CC,IAAM;IACNC,OAAA;IACAlB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB,YAAA;IACA6B,YAAc;EAAA,CACf;EAED,MAAMC,GAAA,GAAMC,uBAAwB;EAC9B,MAAAC,QAAA,GACJ,OAAOd,OAAA,KAAY,SAAY,GAAAA,OAAA,GAAUY,GAAM,GAAAA,GAAA,CAAIV,KAAM,CAAAa,QAAA,CAASb,KAAS,MAAE,CAAI;EAEnF,MAAM,CAACc,MAAA,EAAQC,QAAQ,IAAIC,eAAgB;IACzChB,KAAO,EAAAY,QAAA;IACPK,YAAc,EAAAf,cAAA;IACdgB,UAAY;IACZf;EAAA,CACD;EAED,sBAAAgB,GAAA,CACGC,oBAAqB;IAAApB,KAAA,EAAO;MAAEF,OAAA,EAASgB;IAAA,CACtC;IAAAO,QAAA,iBAAAF,GAAA,CAACG,cAAA;MACCjC,GAAA;MACAU,GAAA,EAAK,CAAC;QAAE,eAAepB,UAAA;QAAYmB,OAAS,EAAAgB;MAAA,GAAUf,GAAG;MACxD,GAAGM,SAAA,CAAU,MAAM;MACnB,GAAGD,MAAA;MACJmB,IAAK;MACL,cAAc,EAAAT,MAAA;MACdb,OAAA,EAAUuB,KAAU;QAClBvB,OAAA,GAAUuB,KAAK;QACVd,GAAA,EAAAP,QAAA,CAASH,KAAA,IAAS,EAAE;QACzBe,QAAA,CAAS,CAACD,MAAM;MAAA;IAClB;EAEJ;AAEJ,CAAC;AAED5B,YAAA,CAAauC,WAAc;AAC3BvC,YAAA,CAAasB,OAAU,GAAAA,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}