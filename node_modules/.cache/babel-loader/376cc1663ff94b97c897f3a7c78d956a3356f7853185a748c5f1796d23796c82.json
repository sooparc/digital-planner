{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Fragment, createElement } from 'react';\nimport { useId } from '@mantine/hooks';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport { getFontSize } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputDescription } from '../InputDescription/InputDescription.mjs';\nimport { InputError } from '../InputError/InputError.mjs';\nimport { InputLabel } from '../InputLabel/InputLabel.mjs';\nimport { InputWrapperProvider } from '../InputWrapper.context.mjs';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets.mjs';\nimport classes from '../Input.module.css.mjs';\nconst defaultProps = {\n  labelElement: \"label\",\n  inputContainer: children => children,\n  inputWrapperOrder: [\"label\", \"description\", \"input\", \"error\"]\n};\nconst varsResolver = createVarsResolver((_, {\n  size\n}) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": void 0\n  },\n  error: {\n    \"--input-error-size\": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`\n  },\n  description: {\n    \"--input-description-size\": size === void 0 ? void 0 : `calc(${getFontSize(size)} - ${rem(2)})`\n  }\n}));\nconst InputWrapper = factory((_props, ref) => {\n  const props = useProps(\"InputWrapper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: [\"InputWrapper\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector\n  };\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === \"boolean\" ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== \"boolean\";\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : \"\"} ${hasDescription ? descriptionId : \"\"}`;\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : void 0;\n  const labelId = labelProps?.id || `${idBase}-label`;\n  const _label = label && /* @__PURE__ */jsx(InputLabel, {\n    labelElement,\n    id: labelId,\n    htmlFor: inputId,\n    required: isRequired,\n    ...sharedProps,\n    ...labelProps,\n    children: label\n  }, \"label\");\n  const _description = hasDescription && /* @__PURE__ */jsx(InputDescription, {\n    ...descriptionProps,\n    ...sharedProps,\n    size: descriptionProps?.size || sharedProps.size,\n    id: descriptionProps?.id || descriptionId,\n    children: description\n  }, \"description\");\n  const _input = /* @__PURE__ */jsx(Fragment, {\n    children: inputContainer(children)\n  }, \"input\");\n  const _error = hasError && /* @__PURE__ */createElement(InputError, {\n    ...errorProps,\n    ...sharedProps,\n    size: errorProps?.size || sharedProps.size,\n    key: \"error\",\n    id: errorProps?.id || errorId\n  }, error);\n  const content = inputWrapperOrder.map(part => {\n    switch (part) {\n      case \"label\":\n        return _label;\n      case \"input\":\n        return _input;\n      case \"description\":\n        return _description;\n      case \"error\":\n        return _error;\n      default:\n        return null;\n    }\n  });\n  return /* @__PURE__ */jsx(InputWrapperProvider, {\n    value: {\n      getStyles,\n      describedBy,\n      inputId,\n      labelId,\n      ...getInputOffsets(inputWrapperOrder, {\n        hasDescription,\n        hasError\n      })\n    },\n    children: /* @__PURE__ */jsx(Box, {\n      ref,\n      variant,\n      size,\n      mod: [{\n        error: !!error\n      }, mod],\n      ...getStyles(\"root\"),\n      ...others,\n      children: content\n    })\n  });\n});\nInputWrapper.classes = classes;\nInputWrapper.displayName = \"@mantine/core/InputWrapper\";\nexport { InputWrapper };","map":{"version":3,"names":["defaultProps","labelElement","inputContainer","children","inputWrapperOrder","varsResolver","createVarsResolver","_","size","label","getFontSize","error","rem","description","InputWrapper","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","variant","__staticSelector","labelProps","descriptionProps","errorProps","withAsterisk","id","required","__stylesApiProps","mod","others","getStyles","useStyles","name","classes","sharedProps","idBase","useId","isRequired","errorId","descriptionId","inputId","hasError","hasDescription","_describedBy","describedBy","trim","length","labelId","_label","jsx","InputLabel","htmlFor","_description","InputDescription","_input","Fragment","_error","createElement","InputError","key","content","map","part","InputWrapperProvider","value","getInputOffsets","Box","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Input\\InputWrapper\\InputWrapper.tsx"],"sourcesContent":["import { Fragment } from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport {\n  InputDescription,\n  InputDescriptionCssVariables,\n  InputDescriptionStylesNames,\n} from '../InputDescription/InputDescription';\nimport {\n  InputError,\n  InputErrorCssVariables,\n  InputErrorStylesNames,\n} from '../InputError/InputError';\nimport {\n  InputLabel,\n  InputLabelCssVariables,\n  InputLabelStylesNames,\n} from '../InputLabel/InputLabel';\nimport { InputWrapperProvider } from '../InputWrapper.context';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets';\nimport classes from '../Input.module.css';\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | 'root'\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component. If not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component. If not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component. If not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether the required asterisk should be displayed. Overrides `required` prop. Does not add required attribute to the input. `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Error` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, `React.Fragment` by default */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: ('label' | 'input' | 'description' | 'error')[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: MantineSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: 'label',\n  inputContainer: (children) => children,\n  inputWrapperOrder: ['label', 'description', 'input', 'error'],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps('InputWrapper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === 'boolean' ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== 'boolean';\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : ''} ${hasDescription ? descriptionId : ''}`;\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = <Fragment key=\"input\">{inputContainer!(children)}</Fragment>;\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case 'label':\n        return _label;\n      case 'input':\n        return _input;\n      case 'description':\n        return _description;\n      case 'error':\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        mod={[{ error: !!error }, mod]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.classes = classes;\nInputWrapper.displayName = '@mantine/core/InputWrapper';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}