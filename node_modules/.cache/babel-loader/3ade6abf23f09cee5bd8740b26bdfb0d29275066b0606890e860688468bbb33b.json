{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nimport { randomId } from '../utils/random-id/random-id.mjs';\nimport { useReactId } from './use-react-id.mjs';\nfunction useId(staticId) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState(reactId);\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n  if (typeof staticId === \"string\") {\n    return staticId;\n  }\n  if (typeof window === \"undefined\") {\n    return reactId;\n  }\n  return uuid;\n}\nexport { useId };","map":{"version":3,"names":["useId","staticId","reactId","useReactId","uuid","setUuid","useState","useIsomorphicEffect","randomId","window"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-id\\use-id.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\nimport { randomId } from '../utils';\nimport { useReactId } from './use-react-id';\n\nexport function useId(staticId?: string) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState(reactId);\n\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n\n  if (typeof staticId === 'string') {\n    return staticId;\n  }\n\n  if (typeof window === 'undefined') {\n    return reactId;\n  }\n\n  return uuid;\n}\n"],"mappings":";;;;;;AAKO,SAASA,MAAMC,QAAmB;EACvC,MAAMC,OAAA,GAAUC,UAAW;EAC3B,MAAM,CAACC,IAAA,EAAMC,OAAO,IAAIC,QAAA,CAASJ,OAAO;EAExCK,mBAAA,CAAoB,MAAM;IACxBF,OAAA,CAAQG,QAAA,EAAU;EACpB,GAAG,EAAE;EAED,WAAOP,QAAA,KAAa,QAAU;IACzB,OAAAA,QAAA;EAAA;EAGL,WAAOQ,MAAA,KAAW,WAAa;IAC1B,OAAAP,OAAA;EAAA;EAGF,OAAAE,IAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}