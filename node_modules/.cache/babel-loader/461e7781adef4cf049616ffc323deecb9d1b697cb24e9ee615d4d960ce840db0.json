{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useQueue({\n  initialValues = [],\n  limit\n}) {\n  const [state, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit)\n  });\n  const add = (...items) => setState(current => {\n    const results = [...current.state, ...current.queue, ...items];\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const update = fn => setState(current => {\n    const results = fn([...current.state, ...current.queue]);\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const cleanQueue = () => setState(current => ({\n    state: current.state,\n    queue: []\n  }));\n  return {\n    state: state.state,\n    queue: state.queue,\n    add,\n    update,\n    cleanQueue\n  };\n}\nexport { useQueue };","map":{"version":3,"names":["useQueue","initialValues","limit","state","setState","useState","slice","queue","add","items","current","results","update","fn","cleanQueue"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-queue\\use-queue.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useQueue<T>({ initialValues = [], limit }: { initialValues?: T[]; limit: number }) {\n  const [state, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit),\n  });\n\n  const add = (...items: T[]) =>\n    setState((current) => {\n      const results = [...current.state, ...current.queue, ...items];\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const update = (fn: (state: T[]) => T[]) =>\n    setState((current) => {\n      const results = fn([...current.state, ...current.queue]);\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const cleanQueue = () => setState((current) => ({ state: current.state, queue: [] }));\n\n  return {\n    state: state.state,\n    queue: state.queue,\n    add,\n    update,\n    cleanQueue,\n  };\n}\n"],"mappings":";;;AAEO,SAASA,SAAY;EAAEC,aAAA,GAAgB,EAAC;EAAGC;AAAA,CAAiD;EACjG,MAAM,CAACC,KAAA,EAAOC,QAAQ,IAAIC,QAAS;IACjCF,KAAO,EAAAF,aAAA,CAAcK,KAAM,IAAGJ,KAAK;IACnCK,KAAA,EAAON,aAAc,CAAAK,KAAA,CAAMJ,KAAK;EAAA,CACjC;EAED,MAAMM,GAAM,GAAAA,CAAA,GAAIC,KACd,KAAAL,QAAA,CAAUM,OAAY;IACd,MAAAC,OAAA,GAAU,CAAC,GAAGD,OAAA,CAAQP,KAAA,EAAO,GAAGO,OAAA,CAAQH,KAAO,KAAGE,KAAK;IAEtD;MACLN,KAAO,EAAAQ,OAAA,CAAQL,KAAM,IAAGJ,KAAK;MAC7BK,KAAA,EAAOI,OAAQ,CAAAL,KAAA,CAAMJ,KAAK;IAC5B;EAAA,CACD;EAEH,MAAMU,MAAS,GAACC,EACd,IAAAT,QAAA,CAAUM,OAAY;IACd,MAAAC,OAAA,GAAUE,EAAA,CAAG,CAAC,GAAGH,OAAA,CAAQP,KAAO,KAAGO,OAAQ,CAAAH,KAAK,CAAC;IAEhD;MACLJ,KAAO,EAAAQ,OAAA,CAAQL,KAAM,IAAGJ,KAAK;MAC7BK,KAAA,EAAOI,OAAQ,CAAAL,KAAA,CAAMJ,KAAK;IAC5B;EAAA,CACD;EAEH,MAAMY,UAAa,GAAAA,CAAA,KAAMV,QAAS,CAACM,OAAa;IAAEP,KAAO,EAAAO,OAAA,CAAQP,KAAO;IAAAI,KAAA,EAAO;EAAK;EAE7E;IACLJ,KAAA,EAAOA,KAAM,CAAAA,KAAA;IACbI,KAAA,EAAOJ,KAAM,CAAAI,KAAA;IACbC,GAAA;IACAI,MAAA;IACAE;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}