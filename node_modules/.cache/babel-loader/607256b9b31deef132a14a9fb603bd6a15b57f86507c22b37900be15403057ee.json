{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { Children, cloneElement, createElement } from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getSize, getSpacing, getRadius, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { StepperProvider } from './Stepper.context.mjs';\nimport { StepperCompleted } from './StepperCompleted/StepperCompleted.mjs';\nimport { StepperStep } from './StepperStep/StepperStep.mjs';\nimport classes from './Stepper.module.css.mjs';\nconst defaultProps = {\n  orientation: \"horizontal\",\n  iconPosition: \"left\",\n  allowNextStepsSelect: true,\n  wrap: true\n};\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  iconSize,\n  size,\n  contentPadding,\n  radius,\n  autoContrast\n}) => ({\n  root: {\n    \"--stepper-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--stepper-icon-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n      color,\n      theme,\n      autoContrast\n    }) : void 0,\n    \"--stepper-icon-size\": iconSize === void 0 ? getSize(size, \"stepper-icon-size\") : rem(iconSize),\n    \"--stepper-content-padding\": getSpacing(contentPadding),\n    \"--stepper-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--stepper-fz\": getFontSize(size),\n    \"--stepper-spacing\": getSpacing(size)\n  }\n}));\nconst Stepper = factory((_props, ref) => {\n  const props = useProps(\"Stepper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    onStepClick,\n    active,\n    icon,\n    completedIcon,\n    progressIcon,\n    color,\n    iconSize,\n    contentPadding,\n    orientation,\n    iconPosition,\n    size,\n    radius,\n    allowNextStepsSelect,\n    wrap,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Stepper\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const convertedChildren = Children.toArray(children);\n  const _children = convertedChildren.filter(child => child.type !== StepperCompleted);\n  const completedStep = convertedChildren.find(item => item.type === StepperCompleted);\n  const items = _children.reduce((acc, item, index) => {\n    const state = active === index ? \"stepProgress\" : active > index ? \"stepCompleted\" : \"stepInactive\";\n    const shouldAllowSelect = () => {\n      if (typeof onStepClick !== \"function\") {\n        return false;\n      }\n      if (typeof item.props.allowStepSelect === \"boolean\") {\n        return item.props.allowStepSelect;\n      }\n      return state === \"stepCompleted\" || allowNextStepsSelect;\n    };\n    const isStepSelectionEnabled = shouldAllowSelect();\n    acc.push(cloneElement(item, {\n      icon: item.props.icon || icon || index + 1,\n      key: index,\n      step: index,\n      state,\n      onClick: () => isStepSelectionEnabled && onStepClick?.(index),\n      allowStepClick: isStepSelectionEnabled,\n      completedIcon: item.props.completedIcon || completedIcon,\n      progressIcon: item.props.progressIcon || progressIcon,\n      color: item.props.color || color,\n      iconSize,\n      iconPosition: item.props.iconPosition || iconPosition,\n      orientation\n    }));\n    if (orientation === \"horizontal\" && index !== _children.length - 1) {\n      acc.push(/* @__PURE__ */createElement(\"div\", {\n        ...getStyles(\"separator\"),\n        \"data-active\": index < active || void 0,\n        \"data-orientation\": orientation,\n        key: `separator-${index}`\n      }));\n    }\n    return acc;\n  }, []);\n  const stepContent = _children[active]?.props?.children;\n  const completedContent = completedStep?.props?.children;\n  const content = active > _children.length - 1 ? completedContent : stepContent;\n  return /* @__PURE__ */jsx(StepperProvider, {\n    value: {\n      getStyles,\n      orientation,\n      iconPosition\n    },\n    children: /* @__PURE__ */jsxs(Box, {\n      ...getStyles(\"root\"),\n      ref,\n      size,\n      ...others,\n      children: [/* @__PURE__ */jsx(Box, {\n        ...getStyles(\"steps\"),\n        mod: {\n          orientation,\n          \"icon-position\": iconPosition,\n          wrap: wrap && orientation !== \"vertical\"\n        },\n        children: items\n      }), content && /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"content\"),\n        children: content\n      })]\n    })\n  });\n});\nStepper.classes = classes;\nStepper.displayName = \"@mantine/core/Stepper\";\nStepper.Completed = StepperCompleted;\nStepper.Step = StepperStep;\nexport { Stepper };","map":{"version":3,"names":["defaultProps","orientation","iconPosition","allowNextStepsSelect","wrap","varsResolver","createVarsResolver","theme","color","iconSize","size","contentPadding","radius","autoContrast","root","getThemeColor","getAutoContrastValue","getContrastColor","getSize","rem","getSpacing","getRadius","getFontSize","Stepper","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","onStepClick","active","icon","completedIcon","progressIcon","others","getStyles","useStyles","name","classes","convertedChildren","Children","toArray","_children","filter","child","type","StepperCompleted","completedStep","find","item","items","reduce","acc","index","state","shouldAllowSelect","allowStepSelect","isStepSelectionEnabled","push","cloneElement","key","step","onClick","allowStepClick","length","createElement","stepContent","completedContent","content","jsx","StepperProvider","value","jsxs","Box","mod","displayName","Completed","Step","StepperStep"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Stepper\\Stepper.tsx"],"sourcesContent":["import { Children, cloneElement } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { StepperProvider } from './Stepper.context';\nimport { StepperCompleted, StepperCompletedProps } from './StepperCompleted/StepperCompleted';\nimport { StepperStep, StepperStepProps } from './StepperStep/StepperStep';\nimport classes from './Stepper.module.css';\n\nexport type StepFragmentComponent = React.FC<{ step: number }>;\n\nexport type StepperStylesNames =\n  | 'root'\n  | 'separator'\n  | 'steps'\n  | 'content'\n  | 'step'\n  | 'stepLoader'\n  | 'verticalSeparator'\n  | 'stepWrapper'\n  | 'stepIcon'\n  | 'stepCompletedIcon'\n  | 'stepBody'\n  | 'stepLabel'\n  | 'stepDescription';\n\nexport type StepperCssVariables = {\n  root:\n    | '--stepper-color'\n    | '--stepper-icon-color'\n    | '--stepper-icon-size'\n    | '--stepper-content-padding'\n    | '--stepper-radius'\n    | '--stepper-fz'\n    | '--stepper-spacing';\n};\n\nexport interface StepperProps\n  extends BoxProps,\n    StylesApiProps<StepperFactory>,\n    ElementProps<'div'> {\n  /** <Stepper.Step /> components */\n  children: React.ReactNode;\n\n  /** Called when step is clicked */\n  onStepClick?: (stepIndex: number) => void;\n\n  /** Index of the active step */\n  active: number;\n\n  /** Step icon, default value is step index + 1 */\n  icon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is completed, check icon by default */\n  completedIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is in progress, default value is step index + 1 */\n  progressIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Key of `theme.colors` or any valid CSS color, controls colors of active and progress steps, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the step icon, by default icon size is inferred from `size` prop */\n  iconSize?: number | string;\n\n  /** Key of `theme.spacing` or any valid CSS value to set `padding-top` of the content */\n  contentPadding?: MantineSpacing;\n\n  /** Stepper orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** Icon position relative to the step body, `'left'` by default */\n  iconPosition?: 'right' | 'left';\n\n  /** Controls size of various Stepper elements */\n  size?: MantineSize;\n\n  /** Key of `theme.radius` or any valid CSS value to set steps border-radius, `\"xl\"` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether next steps can be selected, `true` by default **/\n  allowNextStepsSelect?: boolean;\n\n  /** Determines whether steps should wrap to the next line if no space is available, `true` by default */\n  wrap?: boolean;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type StepperFactory = Factory<{\n  props: StepperProps;\n  ref: HTMLDivElement;\n  stylesNames: StepperStylesNames;\n  vars: StepperCssVariables;\n  staticComponents: {\n    Step: typeof StepperStep;\n    Completed: typeof StepperCompleted;\n  };\n}>;\n\nconst defaultProps: Partial<StepperProps> = {\n  orientation: 'horizontal',\n  iconPosition: 'left',\n  allowNextStepsSelect: true,\n  wrap: true,\n};\n\nconst varsResolver = createVarsResolver<StepperFactory>(\n  (theme, { color, iconSize, size, contentPadding, radius, autoContrast }) => ({\n    root: {\n      '--stepper-color': color ? getThemeColor(color, theme) : undefined,\n      '--stepper-icon-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme, autoContrast })\n        : undefined,\n      '--stepper-icon-size':\n        iconSize === undefined ? getSize(size, 'stepper-icon-size') : rem(iconSize),\n      '--stepper-content-padding': getSpacing(contentPadding),\n      '--stepper-radius': radius === undefined ? undefined : getRadius(radius),\n      '--stepper-fz': getFontSize(size),\n      '--stepper-spacing': getSpacing(size),\n    },\n  })\n);\n\nexport const Stepper = factory<StepperFactory>((_props, ref) => {\n  const props = useProps('Stepper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    onStepClick,\n    active,\n    icon,\n    completedIcon,\n    progressIcon,\n    color,\n    iconSize,\n    contentPadding,\n    orientation,\n    iconPosition,\n    size,\n    radius,\n    allowNextStepsSelect,\n    wrap,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<StepperFactory>({\n    name: 'Stepper',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const convertedChildren = Children.toArray(children) as React.ReactElement[];\n  const _children = convertedChildren.filter(\n    (child) => child.type !== StepperCompleted\n  ) as React.ReactElement<StepperStepProps>[];\n  const completedStep = convertedChildren.find(\n    (item) => item.type === StepperCompleted\n  ) as React.ReactElement<StepperCompletedProps>;\n\n  const items = _children.reduce<React.ReactElement<StepperStepProps>[]>(\n    (acc, item: React.ReactElement<StepperStepProps>, index) => {\n      const state =\n        active === index ? 'stepProgress' : active > index ? 'stepCompleted' : 'stepInactive';\n\n      const shouldAllowSelect = () => {\n        if (typeof onStepClick !== 'function') {\n          return false;\n        }\n\n        if (typeof item.props.allowStepSelect === 'boolean') {\n          return item.props.allowStepSelect;\n        }\n\n        return state === 'stepCompleted' || allowNextStepsSelect;\n      };\n\n      const isStepSelectionEnabled = shouldAllowSelect();\n\n      acc.push(\n        cloneElement(item, {\n          icon: item.props.icon || icon || index + 1,\n          key: index,\n          step: index,\n          state,\n          onClick: () => isStepSelectionEnabled && onStepClick?.(index),\n          allowStepClick: isStepSelectionEnabled,\n          completedIcon: item.props.completedIcon || completedIcon,\n          progressIcon: item.props.progressIcon || progressIcon,\n          color: item.props.color || color,\n          iconSize,\n          iconPosition: item.props.iconPosition || iconPosition,\n          orientation,\n        })\n      );\n\n      if (orientation === 'horizontal' && index !== _children.length - 1) {\n        acc.push(\n          <div\n            {...getStyles('separator')}\n            data-active={index < active || undefined}\n            data-orientation={orientation}\n            key={`separator-${index}`}\n          />\n        );\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  const stepContent = _children[active]?.props?.children;\n  const completedContent = completedStep?.props?.children;\n  const content = active > _children.length - 1 ? completedContent : stepContent;\n\n  return (\n    <StepperProvider value={{ getStyles, orientation, iconPosition }}>\n      <Box {...getStyles('root')} ref={ref} size={size} {...others}>\n        <Box\n          {...getStyles('steps')}\n          mod={{\n            orientation,\n            'icon-position': iconPosition,\n            wrap: wrap && orientation !== 'vertical',\n          }}\n        >\n          {items}\n        </Box>\n        {content && <div {...getStyles('content')}>{content}</div>}\n      </Box>\n    </StepperProvider>\n  );\n});\n\nStepper.classes = classes;\nStepper.displayName = '@mantine/core/Stepper';\nStepper.Completed = StepperCompleted;\nStepper.Step = StepperStep;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}