{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme\n}) => forceColorScheme ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');` : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\nfunction ColorSchemeScript({\n  defaultColorScheme = \"light\",\n  localStorageKey = \"mantine-color-scheme-value\",\n  forceColorScheme,\n  ...others\n}) {\n  const _defaultColorScheme = [\"light\", \"dark\", \"auto\"].includes(defaultColorScheme) ? defaultColorScheme : \"light\";\n  return /* @__PURE__ */jsx(\"script\", {\n    ...others,\n    \"data-mantine-script\": true,\n    dangerouslySetInnerHTML: {\n      __html: getScript({\n        defaultColorScheme: _defaultColorScheme,\n        localStorageKey,\n        forceColorScheme\n      })\n    }\n  });\n}\nexport { ColorSchemeScript };","map":{"version":3,"names":["getScript","defaultColorScheme","localStorageKey","forceColorScheme","ColorSchemeScript","others","_defaultColorScheme","includes","jsx","dangerouslySetInnerHTML","__html"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\ColorSchemeScript\\ColorSchemeScript.tsx"],"sourcesContent":["import type { MantineColorScheme } from '../theme.types';\n\nexport interface ColorSchemeScriptProps extends React.ComponentPropsWithoutRef<'script'> {\n  forceColorScheme?: 'light' | 'dark';\n  defaultColorScheme?: MantineColorScheme;\n  localStorageKey?: string;\n}\n\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme,\n}: Pick<ColorSchemeScriptProps, 'defaultColorScheme' | 'localStorageKey' | 'forceColorScheme'>) =>\n  forceColorScheme\n    ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');`\n    : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\n\nexport function ColorSchemeScript({\n  defaultColorScheme = 'light',\n  localStorageKey = 'mantine-color-scheme-value',\n  forceColorScheme,\n  ...others\n}: ColorSchemeScriptProps) {\n  const _defaultColorScheme = ['light', 'dark', 'auto'].includes(defaultColorScheme)\n    ? defaultColorScheme\n    : 'light';\n  return (\n    <script\n      {...others}\n      data-mantine-script\n      dangerouslySetInnerHTML={{\n        __html: getScript({\n          defaultColorScheme: _defaultColorScheme,\n          localStorageKey,\n          forceColorScheme,\n        }),\n      }}\n    />\n  );\n}\n"],"mappings":";;;AAQA,MAAMA,SAAA,GAAYA,CAAC;EACjBC,kBAAA;EACAC,eAAA;EACAC;AACF,CACE,KAAAA,gBAAA,GACI,uEAAuEA,gBAAgB,KACvF;AAAA,oDAC8CD,eAAe;AAAA,uHACoDD,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAMlI,SAASG,iBAAkBA,CAAA;EAChCH,kBAAqB;EACrBC,eAAkB;EAClBC,gBAAA;EACA,GAAGE;AACL,CAA2B;EACnB,MAAAC,mBAAA,GAAsB,CAAC,OAAS,UAAQ,MAAM,CAAE,CAAAC,QAAA,CAASN,kBAAkB,IAC7EA,kBACA;EAEF,sBAAAO,GAAA,CAAC;IACE,GAAGH,MAAA;IACJ,qBAAmB;IACnBI,uBAAyB;MACvBC,MAAA,EAAQV,SAAU;QAChBC,kBAAoB,EAAAK,mBAAA;QACpBJ,eAAA;QACAC;MACD;IAAA;EACH,CACF;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}