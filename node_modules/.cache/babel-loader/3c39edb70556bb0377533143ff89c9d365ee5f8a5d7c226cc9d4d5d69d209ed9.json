{"ast":null,"code":"'use client';\n\nimport { getThumbSize } from './get-thumb-size.mjs';\nimport { linearScale } from './linear-scale.mjs';\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nexport { getThumbOffsetFromScroll };","map":{"version":3,"names":["clamp","value","min","max","Math","getThumbOffsetFromScroll","scrollPos","sizes","dir","thumbSizePx","getThumbSize","scrollbarPadding","scrollbar","paddingStart","paddingEnd","size","maxScrollPos","content","viewport","maxThumbPos","scrollClampRange","scrollWithoutMomentum","interpolate","linearScale"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\utils\\get-thumb-offset-from-scroll.ts"],"sourcesContent":["import type { Sizes } from '../ScrollArea.types';\nimport { getThumbSize } from './get-thumb-size';\nimport { linearScale } from './linear-scale';\n\nfunction clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport function getThumbOffsetFromScroll(\n  scrollPos: number,\n  sizes: Sizes,\n  dir: 'rtl' | 'ltr' = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n"],"mappings":";;;;AAIA,SAASA,KAAMA,CAAAC,KAAA,EAAe,CAACC,GAAA,EAAKC,GAAG,CAA6B;EAClE,OAAOC,IAAA,CAAKF,GAAI,CAAAC,GAAA,EAAKC,IAAA,CAAKD,GAAI,CAAAD,GAAA,EAAKD,KAAK,CAAC;AAC3C;AAEO,SAASI,wBACdA,CAAAC,SAAA,EACAC,KACA,EAAAC,GAAA,GAAqB,KACrB;EACM,MAAAC,WAAA,GAAcC,YAAA,CAAaH,KAAK;EACtC,MAAMI,gBAAmB,GAAAJ,KAAA,CAAMK,SAAU,CAAAC,YAAA,GAAeN,KAAA,CAAMK,SAAU,CAAAE,UAAA;EAClE,MAAAF,SAAA,GAAYL,KAAM,CAAAK,SAAA,CAAUG,IAAO,GAAAJ,gBAAA;EACnC,MAAAK,YAAA,GAAeT,KAAM,CAAAU,OAAA,GAAUV,KAAM,CAAAW,QAAA;EAC3C,MAAMC,WAAA,GAAcP,SAAY,GAAAH,WAAA;EAC1B,MAAAW,gBAAA,GAAmBZ,GAAQ,aAAQ,CAAC,GAAGQ,YAAY,CAAI,IAACA,YAAe,OAAI,CAAC;EAC5E,MAAAK,qBAAA,GAAwBrB,KAAM,CAAAM,SAAA,EAAWc,gBAAoC;EAC7E,MAAAE,WAAA,GAAcC,WAAA,CAAY,CAAC,GAAGP,YAAY,CAAG,GAAC,CAAG,EAAAG,WAAW,CAAC;EACnE,OAAOG,WAAA,CAAYD,qBAAqB;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}