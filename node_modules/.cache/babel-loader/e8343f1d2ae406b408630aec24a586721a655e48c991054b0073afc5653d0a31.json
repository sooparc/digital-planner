{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Affix } from '../Affix/Affix.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport classes from './Dialog.module.css.mjs';\nconst defaultProps = {\n  shadow: \"md\",\n  p: \"md\",\n  withBorder: false,\n  transitionProps: {\n    transition: \"pop-top-right\",\n    duration: 200\n  },\n  position: {\n    bottom: 30,\n    right: 30\n  }\n};\nconst varsResolver = createVarsResolver((_, {\n  size\n}) => ({\n  root: {\n    \"--dialog-size\": getSize(size, \"dialog-size\")\n  }\n}));\nconst Dialog = factory((_props, ref) => {\n  const props = useProps(\"Dialog\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    zIndex,\n    position,\n    keepMounted,\n    opened,\n    transitionProps,\n    withCloseButton,\n    withinPortal,\n    children,\n    onClose,\n    portalProps,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Dialog\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Affix, {\n    zIndex,\n    position,\n    ref,\n    withinPortal,\n    portalProps,\n    unstyled,\n    children: /* @__PURE__ */jsx(Transition, {\n      keepMounted,\n      mounted: opened,\n      ...transitionProps,\n      children: transitionStyles => /* @__PURE__ */jsxs(Paper, {\n        unstyled,\n        ...getStyles(\"root\", {\n          style: transitionStyles\n        }),\n        ...others,\n        children: [withCloseButton && /* @__PURE__ */jsx(CloseButton, {\n          onClick: onClose,\n          unstyled,\n          ...getStyles(\"closeButton\")\n        }), children]\n      })\n    })\n  });\n});\nDialog.classes = classes;\nDialog.displayName = \"@mantine/core/Dialog\";\nexport { Dialog };","map":{"version":3,"names":["defaultProps","shadow","p","withBorder","transitionProps","transition","duration","position","bottom","right","varsResolver","createVarsResolver","_","size","root","getSize","Dialog","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","zIndex","keepMounted","opened","withCloseButton","withinPortal","children","onClose","portalProps","others","getStyles","useStyles","name","classes","jsx","Affix","Transition","mounted","transitionStyles","jsxs","Paper","CloseButton","onClick","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Dialog\\Dialog.tsx"],"sourcesContent":["import {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Affix, AffixBaseProps } from '../Affix';\nimport { CloseButton } from '../CloseButton';\nimport { Paper, PaperBaseProps } from '../Paper';\nimport { Transition, TransitionOverride } from '../Transition';\nimport classes from './Dialog.module.css';\n\nexport type DialogStylesNames = 'root' | 'closeButton';\nexport type DialogCssVariables = {\n  root: '--dialog-size';\n};\n\nexport interface DialogProps\n  extends BoxProps,\n    AffixBaseProps,\n    PaperBaseProps,\n    StylesApiProps<DialogFactory>,\n    ElementProps<'div'> {\n  /** If set dialog will not be unmounted from the DOM when it is hidden, display: none styles will be added instead */\n  keepMounted?: boolean;\n\n  /** Determines whether the close button should be displayed, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Dialog content */\n  children?: React.ReactNode;\n\n  /** Opened state */\n  opened: boolean;\n\n  /** Overrides default transition, `{ transition: 'pop-top-right', duration: 200 }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Controls `width` of the dialog, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n}\n\nexport type DialogFactory = Factory<{\n  props: DialogProps;\n  ref: HTMLDivElement;\n  stylesNames: DialogStylesNames;\n  vars: DialogCssVariables;\n}>;\n\nconst defaultProps: Partial<DialogProps> = {\n  shadow: 'md',\n  p: 'md',\n  withBorder: false,\n  transitionProps: { transition: 'pop-top-right', duration: 200 },\n  position: {\n    bottom: 30,\n    right: 30,\n  },\n};\n\nconst varsResolver = createVarsResolver<DialogFactory>((_, { size }) => ({\n  root: {\n    '--dialog-size': getSize(size, 'dialog-size'),\n  },\n}));\n\nexport const Dialog = factory<DialogFactory>((_props, ref) => {\n  const props = useProps('Dialog', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    zIndex,\n    position,\n    keepMounted,\n    opened,\n    transitionProps,\n    withCloseButton,\n    withinPortal,\n    children,\n    onClose,\n    portalProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DialogFactory>({\n    name: 'Dialog',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Affix\n      zIndex={zIndex}\n      position={position}\n      ref={ref}\n      withinPortal={withinPortal}\n      portalProps={portalProps}\n      unstyled={unstyled}\n    >\n      <Transition keepMounted={keepMounted} mounted={opened} {...transitionProps}>\n        {(transitionStyles) => (\n          <Paper\n            unstyled={unstyled}\n            {...getStyles('root', { style: transitionStyles })}\n            {...others}\n          >\n            {withCloseButton && (\n              <CloseButton onClick={onClose} unstyled={unstyled} {...getStyles('closeButton')} />\n            )}\n            {children}\n          </Paper>\n        )}\n      </Transition>\n    </Affix>\n  );\n});\n\nDialog.classes = classes;\nDialog.displayName = '@mantine/core/Dialog';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA0DA,MAAMA,YAAqC;EACzCC,MAAQ;EACRC,CAAG;EACHC,UAAY;EACZC,eAAiB;IAAEC,UAAY;IAAiBC,QAAA,EAAU;EAAI;EAC9DC,QAAU;IACRC,MAAQ;IACRC,KAAO;EAAA;AAEX;AAEA,MAAMC,YAAA,GAAeC,kBAAkC,EAACC,CAAG;EAAEC;AAAA,CAAY;EACvEC,IAAM;IACJ,iBAAiBC,OAAQ,CAAAF,IAAA,EAAM,aAAa;EAAA;AAEhD,CAAE;AAEK,MAAMG,MAAS,GAAAC,OAAA,CAAuB,CAACC,MAAA,EAAQC,GAAQ;EAC5D,MAAMC,KAAQ,GAAAC,QAAA,CAAS,QAAU,EAAArB,YAAA,EAAckB,MAAM;EAC/C;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,MAAA;IACArB,QAAA;IACAsB,WAAA;IACAC,MAAA;IACA1B,eAAA;IACA2B,eAAA;IACAC,YAAA;IACAC,QAAA;IACAC,OAAA;IACAC,WAAA;IACA,GAAGC;EAAA,CACD,GAAAhB,KAAA;EAEJ,MAAMiB,SAAA,GAAYC,SAAyB;IACzCC,IAAM;IACNC,OAAA;IACApB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAC,IAAA;IACAjB;EAAA,CACD;EAGC,sBAAA+B,GAAA,CAACC,KAAA;IACCd,MAAA;IACArB,QAAA;IACAY,GAAA;IACAa,YAAA;IACAG,WAAA;IACAT,QAAA;IAEAO,QAAA,iBAAAQ,GAAA,CAACE,UAAA;MAAWd,WAA0B;MAAAe,OAAA,EAASd,MAAA;MAAS,GAAG1B,eAAA;MACxD6B,QAAA,EAACY,gBACA,mBAAAC,IAAA,CAACC,KAAA;QACCrB,QAAA;QACC,GAAGW,SAAU,SAAQ;UAAEb,KAAA,EAAOqB;QAAA,CAAkB;QAChD,GAAGT,MAAA;QAEHH,QAAA,GACCF,eAAA,mBAAAU,GAAA,CAACO,WAAA;UAAYC,OAAS,EAAAf,OAAA;UAASR,QAAA;UAAqB,GAAGW,SAAA,CAAU,aAAa;QAAG,IAElFJ,QAAA;MAAA;IAGP;EAAA,CACF;AAEJ,CAAC;AAEDjB,MAAA,CAAOwB,OAAU,GAAAA,OAAA;AACjBxB,MAAA,CAAOkC,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}