{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useEffect } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto.mjs';\nconst ScrollAreaScrollbarHover = forwardRef((props, ref) => {\n  const {\n    forceMount,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext();\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    const {\n      scrollArea\n    } = context;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n    return void 0;\n  }, [context.scrollArea, context.scrollHideDelay]);\n  if (forceMount || visible) {\n    return /* @__PURE__ */jsx(ScrollAreaScrollbarAuto, {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref\n    });\n  }\n  return null;\n});\nScrollAreaScrollbarHover.displayName = \"@mantine/core/ScrollAreaScrollbarHover\";\nexport { ScrollAreaScrollbarHover };","map":{"version":3,"names":["ScrollAreaScrollbarHover","forwardRef","props","ref","forceMount","scrollbarProps","context","useScrollAreaContext","visible","setVisible","useState","useEffect","scrollArea","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","scrollHideDelay","addEventListener","removeEventListener","jsx","ScrollAreaScrollbarAuto","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaScrollbar\\ScrollAreaScrollbarHover.tsx"],"sourcesContent":["import { forwardRef, useEffect, useState } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAuto, ScrollAreaScrollbarAutoProps } from './ScrollAreaScrollbarAuto';\n\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbarHover = forwardRef<HTMLDivElement, ScrollAreaScrollbarHoverProps>(\n  (props, ref) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const [visible, setVisible] = useState(false);\n\n    useEffect(() => {\n      const { scrollArea } = context;\n      let hideTimer = 0;\n      if (scrollArea) {\n        const handlePointerEnter = () => {\n          window.clearTimeout(hideTimer);\n          setVisible(true);\n        };\n        const handlePointerLeave = () => {\n          hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n        };\n        scrollArea.addEventListener('pointerenter', handlePointerEnter);\n        scrollArea.addEventListener('pointerleave', handlePointerLeave);\n\n        return () => {\n          window.clearTimeout(hideTimer);\n          scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n          scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n        };\n      }\n\n      return undefined;\n    }, [context.scrollArea, context.scrollHideDelay]);\n\n    if (forceMount || visible) {\n      return (\n        <ScrollAreaScrollbarAuto\n          data-state={visible ? 'visible' : 'hidden'}\n          {...scrollbarProps}\n          ref={ref}\n        />\n      );\n    }\n\n    return null;\n  }\n);\n\nScrollAreaScrollbarHover.displayName = '@mantine/core/ScrollAreaScrollbarHover';\n"],"mappings":";;;;;;AAQO,MAAMA,wBAA2B,GAAAC,UAAA,CACtC,CAACC,KAAA,EAAOC,GAAQ;EACd,MAAM;IAAEC,UAAA;IAAY,GAAGC;EAAA,CAAmB,GAAAH,KAAA;EAC1C,MAAMI,OAAA,GAAUC,oBAAqB;EACrC,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIC,QAAA,CAAS,KAAK;EAE5CC,SAAA,CAAU,MAAM;IACR;MAAEC;IAAA,CAAe,GAAAN,OAAA;IACvB,IAAIO,SAAY;IAChB,IAAID,UAAY;MACd,MAAME,kBAAA,GAAqBA,CAAA,KAAM;QAC/BC,MAAA,CAAOC,YAAA,CAAaH,SAAS;QAC7BJ,UAAA,CAAW,IAAI;MACjB;MACA,MAAMQ,kBAAA,GAAqBA,CAAA,KAAM;QAC/BJ,SAAA,GAAYE,MAAA,CAAOG,UAAW,OAAMT,UAAA,CAAW,KAAK,GAAGH,OAAA,CAAQa,eAAe;MAChF;MACWP,UAAA,CAAAQ,gBAAA,CAAiB,gBAAgBN,kBAAkB;MACnDF,UAAA,CAAAQ,gBAAA,CAAiB,gBAAgBH,kBAAkB;MAE9D,OAAO,MAAM;QACXF,MAAA,CAAOC,YAAA,CAAaH,SAAS;QAClBD,UAAA,CAAAS,mBAAA,CAAoB,gBAAgBP,kBAAkB;QACtDF,UAAA,CAAAS,mBAAA,CAAoB,gBAAgBJ,kBAAkB;MACnE;IAAA;IAGK;EAAA,GACN,CAACX,OAAA,CAAQM,UAAY,EAAAN,OAAA,CAAQa,eAAe,CAAC;EAEhD,IAAIf,UAAA,IAAcI,OAAS;IAEvB,sBAAAc,GAAA,CAACC,uBAAA;MACC,cAAYf,OAAA,GAAU,SAAY;MACjC,GAAGH,cAAA;MACJF;IAAA,CACF;EAAA;EAIG;AAAA,CAEX;AAEAH,wBAAA,CAAyBwB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}