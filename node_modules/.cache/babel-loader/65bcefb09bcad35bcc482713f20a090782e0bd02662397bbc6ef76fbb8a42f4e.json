{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { createScopedKeydownHandler } from '../../../core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { getThemeColor } from '../../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useTabsContext } from '../Tabs.context.mjs';\nimport classes from '../Tabs.module.css.mjs';\nconst defaultProps = {};\nconst TabsTab = factory((_props, ref) => {\n  const props = useProps(\"TabsTab\", defaultProps, _props);\n  const {\n    className,\n    children,\n    rightSection,\n    leftSection,\n    value,\n    onClick,\n    onKeyDown,\n    disabled,\n    color,\n    style,\n    classNames,\n    styles,\n    vars,\n    mod,\n    tabIndex,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const {\n    dir\n  } = useDirection();\n  const ctx = useTabsContext();\n  const active = value === ctx.value;\n  const activateTab = event => {\n    ctx.onChange(ctx.allowTabDeactivation ? value === ctx.value ? null : value : value);\n    onClick?.(event);\n  };\n  const stylesApiProps = {\n    classNames,\n    styles,\n    props\n  };\n  return /* @__PURE__ */jsxs(UnstyledButton, {\n    ...others,\n    ...ctx.getStyles(\"tab\", {\n      className,\n      style,\n      variant: ctx.variant,\n      ...stylesApiProps\n    }),\n    disabled,\n    unstyled: ctx.unstyled,\n    variant: ctx.variant,\n    mod: [{\n      active,\n      disabled,\n      orientation: ctx.orientation,\n      inverted: ctx.inverted,\n      placement: ctx.orientation === \"vertical\" && ctx.placement\n    }, mod],\n    ref,\n    role: \"tab\",\n    id: ctx.getTabId(value),\n    \"aria-selected\": active,\n    tabIndex: tabIndex !== void 0 ? tabIndex : active || ctx.value === null ? 0 : -1,\n    \"aria-controls\": ctx.getPanelId(value),\n    onClick: activateTab,\n    __vars: {\n      \"--tabs-color\": color ? getThemeColor(color, theme) : void 0\n    },\n    onKeyDown: createScopedKeydownHandler({\n      siblingSelector: '[role=\"tab\"]',\n      parentSelector: '[role=\"tablist\"]',\n      activateOnFocus: ctx.activateTabWithKeyboard,\n      loop: ctx.loop,\n      orientation: ctx.orientation || \"horizontal\",\n      dir,\n      onKeyDown\n    }),\n    children: [leftSection && /* @__PURE__ */jsx(\"span\", {\n      ...ctx.getStyles(\"tabSection\", stylesApiProps),\n      \"data-position\": \"left\",\n      children: leftSection\n    }), children && /* @__PURE__ */jsx(\"span\", {\n      ...ctx.getStyles(\"tabLabel\", stylesApiProps),\n      children\n    }), rightSection && /* @__PURE__ */jsx(\"span\", {\n      ...ctx.getStyles(\"tabSection\", stylesApiProps),\n      \"data-position\": \"right\",\n      children: rightSection\n    })]\n  });\n});\nTabsTab.classes = classes;\nTabsTab.displayName = \"@mantine/core/TabsTab\";\nexport { TabsTab };","map":{"version":3,"names":["defaultProps","TabsTab","factory","_props","ref","props","useProps","className","children","rightSection","leftSection","value","onClick","onKeyDown","disabled","color","style","classNames","styles","vars","mod","tabIndex","others","theme","useMantineTheme","dir","useDirection","ctx","useTabsContext","active","activateTab","event","onChange","allowTabDeactivation","stylesApiProps","jsxs","UnstyledButton","getStyles","variant","unstyled","orientation","inverted","placement","role","id","getTabId","getPanelId","__vars","getThemeColor","createScopedKeydownHandler","siblingSelector","parentSelector","activateOnFocus","activateTabWithKeyboard","loop","jsx","classes","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Tabs\\TabsTab\\TabsTab.tsx"],"sourcesContent":["import {\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  getThemeColor,\n  MantineColor,\n  useDirection,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton, UnstyledButtonProps } from '../../UnstyledButton';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsTabStylesNames = 'tab' | 'tabSection' | 'tabLabel';\n\nexport interface TabsTabProps\n  extends Omit<UnstyledButtonProps, 'classNames' | 'styles' | 'vars'>,\n    CompoundStylesApiProps<TabsTabFactory>,\n    ElementProps<'button'> {\n  /** Value of associated panel */\n  value: string;\n\n  /** Tab label */\n  children?: React.ReactNode;\n\n  /** Content displayed on the right side of the label, for example, icon */\n  rightSection?: React.ReactNode;\n\n  /** Content displayed on the left side of the label, for example, icon */\n  leftSection?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color, controls control color based on `variant` */\n  color?: MantineColor;\n}\n\nexport type TabsTabFactory = Factory<{\n  props: TabsTabProps;\n  ref: HTMLButtonElement;\n  stylesNames: TabsTabStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsTabProps> = {};\n\nexport const TabsTab = factory<TabsTabFactory>((_props, ref) => {\n  const props = useProps('TabsTab', defaultProps, _props);\n  const {\n    className,\n    children,\n    rightSection,\n    leftSection,\n    value,\n    onClick,\n    onKeyDown,\n    disabled,\n    color,\n    style,\n    classNames,\n    styles,\n    vars,\n    mod,\n    tabIndex,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const { dir } = useDirection();\n  const ctx = useTabsContext();\n  const active = value === ctx.value;\n  const activateTab = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ctx.onChange(ctx.allowTabDeactivation ? (value === ctx.value ? null : value) : value);\n    onClick?.(event);\n  };\n\n  const stylesApiProps = { classNames, styles, props };\n\n  return (\n    <UnstyledButton\n      {...others}\n      {...ctx.getStyles('tab', { className, style, variant: ctx.variant, ...stylesApiProps })}\n      disabled={disabled}\n      unstyled={ctx.unstyled}\n      variant={ctx.variant}\n      mod={[\n        {\n          active,\n          disabled,\n          orientation: ctx.orientation,\n          inverted: ctx.inverted,\n          placement: ctx.orientation === 'vertical' && ctx.placement,\n        },\n        mod,\n      ]}\n      ref={ref}\n      role=\"tab\"\n      id={ctx.getTabId(value)}\n      aria-selected={active}\n      tabIndex={tabIndex !== undefined ? tabIndex : active || ctx.value === null ? 0 : -1}\n      aria-controls={ctx.getPanelId(value)}\n      onClick={activateTab}\n      __vars={{ '--tabs-color': color ? getThemeColor(color, theme) : undefined }}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[role=\"tab\"]',\n        parentSelector: '[role=\"tablist\"]',\n        activateOnFocus: ctx.activateTabWithKeyboard,\n        loop: ctx.loop,\n        orientation: ctx.orientation || 'horizontal',\n        dir,\n        onKeyDown,\n      })}\n    >\n      {leftSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      {children && <span {...ctx.getStyles('tabLabel', stylesApiProps)}>{children}</span>}\n      {rightSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </UnstyledButton>\n  );\n});\n\nTabsTab.classes = classes;\nTabsTab.displayName = '@mantine/core/TabsTab';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}