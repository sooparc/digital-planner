{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getFontSize, getLineHeight } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getGradient } from '../../core/MantineProvider/color-functions/get-gradient/get-gradient.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Text.module.css.mjs';\nfunction getTextTruncate(truncate) {\n  if (truncate === \"start\") {\n    return \"start\";\n  }\n  if (truncate === \"end\" || truncate) {\n    return \"end\";\n  }\n  return void 0;\n}\nconst defaultProps = {\n  inherit: false\n};\nconst varsResolver = createVarsResolver((theme, {\n  variant,\n  lineClamp,\n  gradient,\n  size,\n  color\n}) => ({\n  root: {\n    \"--text-fz\": getFontSize(size),\n    \"--text-lh\": getLineHeight(size),\n    \"--text-gradient\": variant === \"gradient\" ? getGradient(gradient, theme) : void 0,\n    \"--text-line-clamp\": typeof lineClamp === \"number\" ? lineClamp.toString() : void 0,\n    \"--text-color\": color ? getThemeColor(color, theme) : void 0\n  }\n}));\nconst Text = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Text\", defaultProps, _props);\n  const {\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    gradient,\n    span,\n    __staticSelector,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    mod,\n    size,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: [\"Text\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ...getStyles(\"root\", {\n      focusable: true\n    }),\n    ref,\n    component: span ? \"span\" : \"p\",\n    variant,\n    mod: [{\n      \"data-truncate\": getTextTruncate(truncate),\n      \"data-line-clamp\": typeof lineClamp === \"number\",\n      \"data-inline\": inline,\n      \"data-inherit\": inherit\n    }, mod],\n    size,\n    ...others\n  });\n});\nText.classes = classes;\nText.displayName = \"@mantine/core/Text\";\nexport { Text };","map":{"version":3,"names":["getTextTruncate","truncate","defaultProps","inherit","varsResolver","createVarsResolver","theme","variant","lineClamp","gradient","size","color","root","getFontSize","getLineHeight","getGradient","toString","getThemeColor","Text","polymorphicFactory","_props","ref","props","useProps","inline","span","__staticSelector","vars","className","style","classNames","styles","unstyled","mod","others","getStyles","useStyles","name","classes","jsx","Box","focusable","component","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Text\\Text.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getFontSize,\n  getGradient,\n  getLineHeight,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Text.module.css';\n\ntype TextTruncate = 'end' | 'start' | boolean;\n\nfunction getTextTruncate(truncate: TextTruncate | undefined) {\n  if (truncate === 'start') {\n    return 'start';\n  }\n\n  if (truncate === 'end' || truncate) {\n    return 'end';\n  }\n\n  return undefined;\n}\n\nexport type TextStylesNames = 'root';\nexport type TextVariant = 'text' | 'gradient';\nexport type TextCssVariables = {\n  root: '--text-gradient' | '--text-line-clamp' | '--text-fz' | '--text-lh';\n};\n\nexport interface TextProps extends BoxProps, StylesApiProps<TextFactory> {\n  __staticSelector?: string;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Number of lines after which Text will be truncated */\n  lineClamp?: number;\n\n  /** Side on which Text must be truncated, if `true`, text is truncated from the start */\n  truncate?: TextTruncate;\n\n  /** Sets `line-height` to 1 for centering, `false` by default */\n  inline?: boolean;\n\n  /** Determines whether font properties should be inherited from the parent, `false` by default */\n  inherit?: boolean;\n\n  /** Gradient configuration, ignored when `variant` is not `gradient`, `theme.defaultGradient` by default */\n  gradient?: MantineGradient;\n\n  /** Shorthand for `component=\"span\"`, `false` by default, default root element is `p` */\n  span?: boolean;\n\n  /** @deprecated Use `c` prop instead */\n  color?: MantineColor;\n}\n\nexport type TextFactory = PolymorphicFactory<{\n  props: TextProps;\n  defaultComponent: 'p';\n  defaultRef: HTMLParagraphElement;\n  stylesNames: TextStylesNames;\n  vars: TextCssVariables;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<TextProps> = {\n  inherit: false,\n};\n\nconst varsResolver = createVarsResolver<TextFactory>(\n  (theme, { variant, lineClamp, gradient, size, color }) => ({\n    root: {\n      '--text-fz': getFontSize(size),\n      '--text-lh': getLineHeight(size),\n      '--text-gradient': variant === 'gradient' ? getGradient(gradient, theme) : undefined,\n      '--text-line-clamp': typeof lineClamp === 'number' ? lineClamp.toString() : undefined,\n      '--text-color': color ? getThemeColor(color, theme) : undefined,\n    },\n  })\n);\n\nexport const Text = polymorphicFactory<TextFactory>((_props, ref) => {\n  const props = useProps('Text', defaultProps, _props);\n  const {\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    gradient,\n    span,\n    __staticSelector,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    mod,\n    size,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TextFactory>({\n    name: ['Text', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root', { focusable: true })}\n      ref={ref}\n      component={span ? 'span' : 'p'}\n      variant={variant}\n      mod={[\n        {\n          'data-truncate': getTextTruncate(truncate),\n          'data-line-clamp': typeof lineClamp === 'number',\n          'data-inline': inline,\n          'data-inherit': inherit,\n        },\n        mod,\n      ]}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nText.classes = classes;\nText.displayName = '@mantine/core/Text';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,gBAAgBC,QAAoC;EAC3D,IAAIA,QAAA,KAAa,OAAS;IACjB;EAAA;EAGL,IAAAA,QAAA,KAAa,SAASA,QAAU;IAC3B;EAAA;EAGF;AACT;AA6CA,MAAMC,YAAmC;EACvCC,OAAS;AACX;AAEA,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,KAAA,EAAO;EAAEC,OAAA;EAASC,SAAA;EAAWC,QAAU;EAAAC,IAAA;EAAMC;AAAA,CAAa;EACzDC,IAAM;IACJ,aAAaC,WAAA,CAAYH,IAAI;IAC7B,aAAaI,aAAA,CAAcJ,IAAI;IAC/B,mBAAmBH,OAAY,kBAAaQ,WAAY,CAAAN,QAAA,EAAUH,KAAK,CAAI;IAC3E,qBAAqB,OAAOE,SAAA,KAAc,QAAW,GAAAA,SAAA,CAAUQ,QAAA,CAAa;IAC5E,cAAgB,EAAAL,KAAA,GAAQM,aAAc,CAAAN,KAAA,EAAOL,KAAK,CAAI;EAAA;AAE1D,EACF;AAEO,MAAMY,IAAO,GAAAC,kBAAA,CAAgC,CAACC,MAAA,EAAQC,GAAQ;EACnE,MAAMC,KAAQ,GAAAC,QAAA,CAAS,MAAQ,EAAArB,YAAA,EAAckB,MAAM;EAC7C;IACJZ,SAAA;IACAP,QAAA;IACAuB,MAAA;IACArB,OAAA;IACAM,QAAA;IACAgB,IAAA;IACAC,gBAAA;IACAC,IAAA;IACAC,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAzB,OAAA;IACA0B,GAAA;IACAvB,IAAA;IACA,GAAGwB;EAAA,CACD,GAAAZ,KAAA;EAEJ,MAAMa,SAAA,GAAYC,SAAuB;IACvCC,IAAA,EAAM,CAAC,QAAQX,gBAAgB;IAC/BJ,KAAA;IACAgB,OAAA;IACAV,SAAA;IACAC,KAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAL,IAAA;IACAvB;EAAA,CACD;EAGC,sBAAAmC,GAAA,CAACC,GAAA;IACE,GAAGL,SAAU,SAAQ;MAAEM,SAAA,EAAW;IAAA,CAAM;IACzCpB,GAAA;IACAqB,SAAA,EAAWjB,IAAA,GAAO,MAAS;IAC3BlB,OAAA;IACA0B,GAAK,GACH;MACE,iBAAiBjC,eAAA,CAAgBC,QAAQ;MACzC,mBAAmB,OAAOO,SAAc;MACxC,aAAe,EAAAgB,MAAA;MACf,cAAgB,EAAArB;IAClB,GACA8B,GAAA,CACF;IACAvB,IAAA;IACC,GAAGwB;EAAA,CACN;AAEJ,CAAC;AAEDhB,IAAA,CAAKoB,OAAU,GAAAA,OAAA;AACfpB,IAAA,CAAKyB,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}