{"ast":null,"code":"'use client';\n\nfunction escapeRegex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\nfunction highlighter(value, _highlight) {\n  if (_highlight == null) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const highlight = Array.isArray(_highlight) ? _highlight.map(escapeRegex) : escapeRegex(_highlight);\n  const shouldHighlight = Array.isArray(highlight) ? highlight.filter(part => part.trim().length > 0).length > 0 : highlight.trim() !== \"\";\n  if (!shouldHighlight) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const matcher = typeof highlight === \"string\" ? highlight.trim() : highlight.filter(part => part.trim().length !== 0).map(part => part.trim()).sort((a, b) => b.length - a.length).join(\"|\");\n  const re = new RegExp(`(${matcher})`, \"gi\");\n  const chunks = value.split(re).map(part => ({\n    chunk: part,\n    highlighted: re.test(part)\n  })).filter(({\n    chunk\n  }) => chunk);\n  return chunks;\n}\nexport { highlighter };","map":{"version":3,"names":["escapeRegex","value","replace","highlighter","_highlight","chunk","highlighted","highlight","Array","isArray","map","shouldHighlight","filter","part","trim","length","matcher","sort","a","b","join","re","RegExp","chunks","split","test"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Highlight\\highlighter\\highlighter.ts"],"sourcesContent":["function escapeRegex(value: string) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&');\n}\n\nexport function highlighter(value: string, _highlight: string | string[]) {\n  if (_highlight == null) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const highlight = Array.isArray(_highlight)\n    ? _highlight.map(escapeRegex)\n    : escapeRegex(_highlight);\n\n  const shouldHighlight = Array.isArray(highlight)\n    ? highlight.filter((part) => part.trim().length > 0).length > 0\n    : highlight.trim() !== '';\n\n  if (!shouldHighlight) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const matcher =\n    typeof highlight === 'string'\n      ? highlight.trim()\n      : highlight\n          .filter((part) => part.trim().length !== 0)\n          .map((part) => part.trim())\n          .sort((a, b) => b.length - a.length)\n          .join('|');\n\n  const re = new RegExp(`(${matcher})`, 'gi');\n  const chunks = value\n    .split(re)\n    .map((part) => ({ chunk: part, highlighted: re.test(part) }))\n    .filter(({ chunk }) => chunk);\n\n  return chunks;\n}\n"],"mappings":";;AAAA,SAASA,YAAYC,KAAe;EAC3B,OAAAA,KAAA,CAAMC,OAAQ,2BAA0B,MAAM;AACvD;AAEgB,SAAAC,YAAYF,KAAA,EAAeG,UAA+B;EACxE,IAAIA,UAAA,IAAc,IAAM;IACtB,OAAO,CAAC;MAAEC,KAAA,EAAOJ,KAAO;MAAAK,WAAA,EAAa;IAAA,CAAO;EAAA;EAGxC,MAAAC,SAAA,GAAYC,KAAM,CAAAC,OAAA,CAAQL,UAAU,IACtCA,UAAA,CAAWM,GAAI,CAAAV,WAAW,CAC1B,GAAAA,WAAA,CAAYI,UAAU;EAE1B,MAAMO,eAAA,GAAkBH,KAAM,CAAAC,OAAA,CAAQF,SAAS,CAC3C,GAAAA,SAAA,CAAUK,MAAA,CAAQC,IAAA,IAASA,IAAA,CAAKC,IAAK,GAAEC,MAAA,GAAS,CAAC,EAAEA,MAAA,GAAS,CAC5D,GAAAR,SAAA,CAAUO,IAAA,EAAW;EAEzB,IAAI,CAACH,eAAiB;IACpB,OAAO,CAAC;MAAEN,KAAA,EAAOJ,KAAO;MAAAK,WAAA,EAAa;IAAA,CAAO;EAAA;EAG9C,MAAMU,OACJ,UAAOT,SAAc,gBACjBA,SAAA,CAAUO,IAAK,KACfP,SACG,CAAAK,MAAA,CAAQC,IAAS,IAAAA,IAAA,CAAKC,IAAK,GAAEC,MAAA,KAAW,CAAC,EACzCL,GAAI,CAACG,IAAS,IAAAA,IAAA,CAAKC,IAAK,CAAC,GACzBG,IAAK,EAACC,CAAG,EAAAC,CAAA,KAAMA,CAAA,CAAEJ,MAAS,GAAAG,CAAA,CAAEH,MAAM,EAClCK,IAAA,CAAK,GAAG;EAEjB,MAAMC,EAAA,GAAK,IAAIC,MAAA,CAAO,IAAIN,OAAO,KAAK,IAAI;EACpC,MAAAO,MAAA,GAAStB,KAAA,CACZuB,KAAM,CAAAH,EAAE,EACRX,GAAI,CAACG,IAAU;IAAER,KAAO,EAAAQ,IAAA;IAAMP,WAAA,EAAae,EAAG,CAAAI,IAAA,CAAKZ,IAAI;EAAA,CAAI,GAC3DD,MAAA,CAAO,CAAC;IAAEP;EAAM,MAAMA,KAAK;EAEvB,OAAAkB,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}