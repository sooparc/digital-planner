{"ast":null,"code":"'use client';\n\nimport { cssVariablesObjectToString } from './css-variables-object-to-string.mjs';\nimport { wrapWithSelector } from './wrap-with-selector.mjs';\nfunction convertCssVariables(input, selector) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : \"\";\n  const dark = cssVariablesObjectToString(input.dark);\n  const light = cssVariablesObjectToString(input.light);\n  const darkForced = dark ? selector === \":host\" ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"dark\"])`, dark) : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark) : \"\";\n  const lightForced = light ? selector === \":host\" ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"light\"])`, light) : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light) : \"\";\n  return `${shared}${darkForced}${lightForced}`;\n}\nexport { convertCssVariables };","map":{"version":3,"names":["convertCssVariables","input","selector","sharedVariables","cssVariablesObjectToString","variables","shared","wrapWithSelector","dark","light","darkForced","lightForced"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\core\\MantineProvider\\convert-css-variables\\convert-css-variables.ts"],"sourcesContent":["import { CSSVariables, cssVariablesObjectToString } from './css-variables-object-to-string';\nimport { wrapWithSelector } from './wrap-with-selector';\n\nexport interface ConvertCSSVariablesInput {\n  /** Shared CSS variables that should be accessible independent from color scheme */\n  variables: CSSVariables;\n\n  /** CSS variables available only in dark color scheme */\n  dark: CSSVariables;\n\n  /** CSS variables available only in light color scheme */\n  light: CSSVariables;\n}\n\nexport function convertCssVariables(input: ConvertCSSVariablesInput, selector: string) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : '';\n  const dark = cssVariablesObjectToString(input.dark);\n  const light = cssVariablesObjectToString(input.light);\n\n  const darkForced = dark\n    ? selector === ':host'\n      ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"dark\"])`, dark)\n      : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark)\n    : '';\n\n  const lightForced = light\n    ? selector === ':host'\n      ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"light\"])`, light)\n      : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light)\n    : '';\n\n  return `${shared}${darkForced}${lightForced}`;\n}\n"],"mappings":";;;;AAcgB,SAAAA,oBAAoBC,KAAA,EAAiCC,QAAkB;EAC/E,MAAAC,eAAA,GAAkBC,0BAA2B,CAAAH,KAAA,CAAMI,SAAS;EAClE,MAAMC,MAAS,GAAAH,eAAA,GAAkBI,gBAAiB,CAAAL,QAAA,EAAUC,eAAe,CAAI;EACzE,MAAAK,IAAA,GAAOJ,0BAA2B,CAAAH,KAAA,CAAMO,IAAI;EAC5C,MAAAC,KAAA,GAAQL,0BAA2B,CAAAH,KAAA,CAAMQ,KAAK;EAEpD,MAAMC,UAAa,GAAAF,IAAA,GACfN,QAAa,eACXK,gBAAA,CAAiB,GAAGL,QAAQ,sCAAwC,EAAAM,IAAI,IACxED,gBAAiB,IAAGL,QAAQ,sCAAsCM,IAAI,CACxE;EAEJ,MAAMG,WAAc,GAAAF,KAAA,GAChBP,QAAa,eACXK,gBAAA,CAAiB,GAAGL,QAAQ,uCAAyC,EAAAO,KAAK,IAC1EF,gBAAiB,IAAGL,QAAQ,uCAAuCO,KAAK,CAC1E;EAEJ,OAAO,GAAGH,MAAM,GAAGI,UAAU,GAAGC,WAAW;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}