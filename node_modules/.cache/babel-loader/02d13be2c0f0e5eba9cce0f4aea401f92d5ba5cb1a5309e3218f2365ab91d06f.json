{"ast":null,"code":"'use client';\n\nfunction getAllCheckedNodes(data, checkedState, acc = []) {\n  const currentTreeChecked = [];\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every(item2 => item2.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = {\n          checked: false,\n          indeterminate: true,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n  return {\n    result: acc,\n    currentTreeChecked\n  };\n}\nexport { getAllCheckedNodes };","map":{"version":3,"names":["getAllCheckedNodes","data","checkedState","acc","currentTreeChecked","node","Array","isArray","children","length","innerChecked","isChecked","every","item2","checked","item","indeterminate","value","hasChildren","push","includes","result"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Tree\\get-all-checked-nodes\\get-all-checked-nodes.ts"],"sourcesContent":["import type { TreeNodeData } from '../Tree';\n\nexport interface CheckedNodeStatus {\n  checked: boolean;\n  indeterminate: boolean;\n  hasChildren: boolean;\n  value: string;\n}\n\nexport function getAllCheckedNodes(\n  data: TreeNodeData[],\n  checkedState: string[],\n  acc: CheckedNodeStatus[] = []\n) {\n  const currentTreeChecked: CheckedNodeStatus[] = [];\n\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every((item) => item.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true,\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = { checked: false, indeterminate: true, value: node.value, hasChildren: true };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item: CheckedNodeStatus = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false,\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n\n  return { result: acc, currentTreeChecked };\n}\n"],"mappings":";;AASO,SAASA,kBACdA,CAAAC,IAAA,EACAC,YACA,EAAAC,GAAA,GAA2B,EAC3B;EACA,MAAMC,kBAAA,GAA0C,EAAC;EAEjD,WAAWC,IAAA,IAAQJ,IAAM;IACnB,IAAAK,KAAA,CAAMC,OAAA,CAAQF,IAAK,CAAAG,QAAQ,KAAKH,IAAK,CAAAG,QAAA,CAASC,MAAA,GAAS,CAAG;MAC5D,MAAMC,YAAe,GAAAV,kBAAA,CAAmBK,IAAK,CAAAG,QAAA,EAAUN,YAAA,EAAcC,GAAG;MACxE,IAAIO,YAAa,CAAAN,kBAAA,CAAmBK,MAAW,KAAAJ,IAAA,CAAKG,QAAA,CAASC,MAAQ;QACnE,MAAME,SAAA,GAAYD,YAAa,CAAAN,kBAAA,CAAmBQ,KAAA,CAAOC,KAAA,IAASA,KAAA,CAAKC,OAAO;QAC9E,MAAMC,IAAO;UACXD,OAAS,EAAAH,SAAA;UACTK,aAAA,EAAe,CAACL,SAAA;UAChBM,KAAA,EAAOZ,IAAK,CAAAY,KAAA;UACZC,WAAa;QACf;QACAd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;QAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;MACJ,WAAAL,YAAA,CAAaN,kBAAmB,CAAAK,MAAA,GAAS,CAAG;QAC/C,MAAAM,IAAA,GAAO;UAAED,OAAA,EAAS,KAAO;UAAAE,aAAA,EAAe;UAAMC,KAAO,EAAAZ,IAAA,CAAKY,KAAO;UAAAC,WAAA,EAAa;QAAK;QACzFd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;QAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;MAAA;IAEN,WAAAb,YAAA,CAAakB,QAAS,CAAAf,IAAA,CAAKY,KAAK,CAAG;MAC5C,MAAMF,IAA0B;QAC9BD,OAAS;QACTE,aAAe;QACfC,KAAA,EAAOZ,IAAK,CAAAY,KAAA;QACZC,WAAa;MACf;MACAd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;MAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;IAAA;EACf;EAGK;IAAEM,MAAQ,EAAAlB,GAAA;IAAKC;EAAmB;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}