{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme\n}) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = \"translateX(var(--app-shell-aside-width))\";\n  const collapsedAsideTransformRtl = \"translateX(calc(var(--app-shell-aside-width) * -1))\";\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles[\"--app-shell-aside-width\"] = baseSize;\n    baseStyles[\"--app-shell-aside-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-aside-width\"] = rem(asideWidth.base);\n      baseStyles[\"--app-shell-aside-offset\"] = rem(asideWidth.base);\n    }\n    keys(asideWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-aside-width\"] = rem(asideWidth[key]);\n        minMediaStyles[key][\"--app-shell-aside-offset\"] = rem(asideWidth[key]);\n      }\n    });\n  }\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px !important\";\n  }\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n  }\n}\nexport { assignAsideVariables };","map":{"version":3,"names":["assignAsideVariables","baseStyles","minMediaStyles","maxMediaStyles","aside","theme","asideWidth","width","collapsedAsideTransform","collapsedAsideTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue","breakpoints"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\AppShell\\AppShellMediaStyles\\assign-aside-variables\\assign-aside-variables.ts"],"sourcesContent":["import { getBreakpointValue, keys, MantineTheme, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignAsideVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  aside: AppShellProps['aside'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme,\n}: AssignAsideVariablesInput) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = 'translateX(var(--app-shell-aside-width))';\n  const collapsedAsideTransformRtl = 'translateX(calc(var(--app-shell-aside-width) * -1))';\n\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles['--app-shell-aside-width'] = baseSize;\n    baseStyles['--app-shell-aside-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== 'undefined') {\n      baseStyles['--app-shell-aside-width'] = rem(asideWidth.base);\n      baseStyles['--app-shell-aside-offset'] = rem(asideWidth.base);\n    }\n\n    keys(asideWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-aside-width'] = rem(asideWidth![key]);\n        minMediaStyles[key]['--app-shell-aside-offset'] = rem(asideWidth![key]);\n      }\n    });\n  }\n\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px !important';\n  }\n\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside!.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAeO,SAASA,oBAAqBA,CAAA;EACnCC,UAAA;EACAC,cAAA;EACAC,cAAA;EACAC,KAAA;EACAC;AACF,CAA8B;EAC5B,MAAMC,UAAA,GAAaF,KAAO,EAAAG,KAAA;EAC1B,MAAMC,uBAA0B;EAChC,MAAMC,0BAA6B;EAEnC,IAAIL,KAAO,EAAAM,UAAA,IAAc,CAACN,KAAA,EAAOO,SAAA,EAAWC,MAAQ;IAClDT,cAAA,CAAeC,KAAA,EAAOM,UAAU,IAAIP,cAAA,CAAeC,KAAO,EAAAM,UAAU,KAAK,CAAC;IAC1EP,cAAA,CAAeC,KAAO,EAAAM,UAAU,CAAE,0BAAyB,CAAI;IAC/DP,cAAA,CAAeC,KAAO,EAAAM,UAAU,CAAE,2BAA0B,CAAI;EAAA;EAG9D,IAAAG,eAAA,CAAgBP,UAAU,CAAG;IAC/B,MAAMQ,QAAW,GAAAC,GAAA,CAAIC,WAAY,CAAAV,UAAU,CAAC;IAC5CL,UAAA,CAAW,yBAAyB,CAAI,GAAAa,QAAA;IACxCb,UAAA,CAAW,0BAA0B,CAAI,GAAAa,QAAA;EAAA;EAGvC,IAAAG,gBAAA,CAAiBX,UAAU,CAAG;IAC5B,WAAOA,UAAW,CAAAY,IAAA,KAAS,WAAa;MAC1CjB,UAAA,CAAW,yBAAyB,IAAIc,GAAI,CAAAT,UAAA,CAAWY,IAAI;MAC3DjB,UAAA,CAAW,0BAA0B,IAAIc,GAAI,CAAAT,UAAA,CAAWY,IAAI;IAAA;IAG9DC,IAAA,CAAKb,UAAU,EAAEc,OAAQ,CAACC,GAAQ;MAChC,IAAIA,GAAA,KAAQ,MAAQ;QAClBnB,cAAA,CAAemB,GAAG,IAAInB,cAAe,CAAAmB,GAAG,KAAK,CAAC;QAC9CnB,cAAA,CAAemB,GAAG,CAAE,0BAAyB,IAAIN,GAAI,CAAAT,UAAA,CAAYe,GAAG,CAAC;QACrEnB,cAAA,CAAemB,GAAG,CAAE,2BAA0B,IAAIN,GAAI,CAAAT,UAAA,CAAYe,GAAG,CAAC;MAAA;IACxE,CACD;EAAA;EAGC,IAAAjB,KAAA,EAAOO,SAAA,EAAWW,OAAS;IAC7B,MAAMC,eAAA,GAAkBnB,KAAO,CAAAM,UAAA;IAC/BR,cAAA,CAAeqB,eAAe,IAAIrB,cAAe,CAAAqB,eAAe,KAAK,CAAC;IACvDrB,cAAA,CAAAqB,eAAe,CAAE,8BAA6B,CAAI,GAAAf,uBAAA;IAClDN,cAAA,CAAAqB,eAAe,CAAE,kCAAiC,CAAI,GAAAd,0BAAA;IACtDP,cAAA,CAAAqB,eAAe,CAAE,2BAA0B,CAAI;EAAA;EAG5D,IAAAnB,KAAA,EAAOO,SAAA,EAAWC,MAAQ;IAC5B,MAAMW,eAAA,GAAkBC,kBAAmB,CAAApB,KAAA,CAAOM,UAAY,EAAAL,KAAA,CAAMoB,WAAW,CAAI;IACnFtB,cAAA,CAAeoB,eAAe,IAAIpB,cAAe,CAAAoB,eAAe,KAAK,CAAC;IACvDpB,cAAA,CAAAoB,eAAe,CAAE,0BAAyB,CAAI;IAC9CpB,cAAA,CAAAoB,eAAe,CAAE,2BAA0B,CAAI;IAC/CpB,cAAA,CAAAoB,eAAe,CAAE,8BAA6B,CAAI,GAAAf,uBAAA;IAClDL,cAAA,CAAAoB,eAAe,CAAE,kCAAiC,CAAI,GAAAd,0BAAA;EAAA;AAEzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}