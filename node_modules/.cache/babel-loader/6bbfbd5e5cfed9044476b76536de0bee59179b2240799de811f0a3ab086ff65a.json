{"ast":null,"code":"'use client';\n\nimport { useReducer } from 'react';\nfunction useToggle(options = [false, true]) {\n  const [[option], toggle] = useReducer((state, action) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n    return state.slice(index).concat(state.slice(0, index));\n  }, options);\n  return [option, toggle];\n}\nexport { useToggle };","map":{"version":3,"names":["useToggle","options","option","toggle","useReducer","state","action","value","Function","index","Math","abs","indexOf","slice","concat"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-toggle\\use-toggle.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nexport function useToggle<T = boolean>(options: readonly T[] = [false, true] as any) {\n  const [[option], toggle] = useReducer((state: T[], action: React.SetStateAction<T>) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n\n    return state.slice(index).concat(state.slice(0, index));\n  }, options as T[]);\n\n  return [option, toggle as (value?: React.SetStateAction<T>) => void] as const;\n}\n"],"mappings":";;;AAEO,SAASA,SAAuBA,CAAAC,OAAA,GAAwB,CAAC,OAAO,IAAI,CAAU;EAC7E,OAAC,CAACC,MAAM,GAAGC,MAAM,CAAI,GAAAC,UAAA,CAAW,CAACC,KAAA,EAAYC,MAAoC;IACrF,MAAMC,KAAA,GAAQD,MAAkB,YAAAE,QAAA,GAAWF,MAAA,CAAOD,KAAM,EAAC,CAAC,CAAI,GAAAC,MAAA;IAC9D,MAAMG,KAAA,GAAQC,IAAK,CAAAC,GAAA,CAAIN,KAAM,CAAAO,OAAA,CAAQL,KAAK,CAAC;IAEpC,OAAAF,KAAA,CAAMQ,KAAA,CAAMJ,KAAK,EAAEK,MAAA,CAAOT,KAAM,CAAAQ,KAAA,CAAM,CAAG,EAAAJ,KAAK,CAAC;EAAA,GACrDR,OAAc;EAEV,QAACC,MAAA,EAAQC,MAAmD;AACrE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}