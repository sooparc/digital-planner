{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nfunction useMutationObserver(callback, options, target) {\n  const observer = useRef(null);\n  const ref = useRef(null);\n  useEffect(() => {\n    const targetElement = typeof target === \"function\" ? target() : target;\n    if (targetElement || ref.current) {\n      observer.current = new MutationObserver(callback);\n      observer.current.observe(targetElement || ref.current, options);\n    }\n    return () => {\n      observer.current?.disconnect();\n    };\n  }, [callback, options]);\n  return ref;\n}\nexport { useMutationObserver };","map":{"version":3,"names":["useMutationObserver","callback","options","target","observer","useRef","ref","useEffect","targetElement","current","MutationObserver","observe","disconnect"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-mutation-observer\\use-mutation-observer.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useMutationObserver<T extends HTMLElement = any>(\n  callback: MutationCallback,\n  options: MutationObserverInit,\n  target?: HTMLElement | (() => HTMLElement) | null\n) {\n  const observer = useRef<MutationObserver>(null);\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const targetElement = typeof target === 'function' ? target() : target;\n\n    if (targetElement || ref.current) {\n      observer.current = new MutationObserver(callback);\n      observer.current.observe(targetElement || ref.current!, options);\n    }\n\n    return () => {\n      observer.current?.disconnect();\n    };\n  }, [callback, options]);\n\n  return ref;\n}\n"],"mappings":";;;AAEgB,SAAAA,oBACdC,QACA,EAAAC,OAAA,EACAC,MACA;EACM,MAAAC,QAAA,GAAWC,MAAA,CAAyB,IAAI;EACxC,MAAAC,GAAA,GAAMD,MAAA,CAAU,IAAI;EAE1BE,SAAA,CAAU,MAAM;IACd,MAAMC,aAAgB,UAAOL,MAAW,kBAAaA,MAAA,CAAW,IAAAA,MAAA;IAE5D,IAAAK,aAAA,IAAiBF,GAAA,CAAIG,OAAS;MACvBL,QAAA,CAAAK,OAAA,GAAU,IAAIC,gBAAA,CAAiBT,QAAQ;MAChDG,QAAA,CAASK,OAAQ,CAAAE,OAAA,CAAQH,aAAiB,IAAAF,GAAA,CAAIG,OAAA,EAAUP,OAAO;IAAA;IAGjE,OAAO,MAAM;MACXE,QAAA,CAASK,OAAA,EAASG,UAAW;IAC/B;EAAA,CACC,GAACX,QAAU,EAAAC,OAAO,CAAC;EAEf,OAAAI,GAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}