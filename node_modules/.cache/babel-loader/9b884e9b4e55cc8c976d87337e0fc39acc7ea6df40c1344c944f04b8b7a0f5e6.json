{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useEffect } from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { DrawerBody } from './DrawerBody.mjs';\nimport { DrawerCloseButton } from './DrawerCloseButton.mjs';\nimport { DrawerContent } from './DrawerContent.mjs';\nimport { DrawerHeader } from './DrawerHeader.mjs';\nimport { DrawerOverlay } from './DrawerOverlay.mjs';\nimport { DrawerRoot } from './DrawerRoot.mjs';\nimport { DrawerStack, useDrawerStackContext } from './DrawerStack.mjs';\nimport { DrawerTitle } from './DrawerTitle.mjs';\nimport classes from './Drawer.module.css.mjs';\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex(\"modal\"),\n  withOverlay: true,\n  withCloseButton: true\n};\nconst Drawer = factory((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps(\"Drawer\", defaultProps, _props);\n  const ctx = useDrawerStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps = ctx && stackId ? {\n    closeOnEscape: ctx.currentId === stackId,\n    trapFocus: ctx.currentId === stackId,\n    zIndex: ctx.getZIndex(stackId)\n  } : {};\n  const overlayVisible = withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened ? ctx.addModal(stackId, zIndex || getDefaultZIndex(\"modal\")) : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n  return /* @__PURE__ */jsxs(DrawerRoot, {\n    ref,\n    opened,\n    zIndex: ctx && stackId ? ctx.getZIndex(stackId) : zIndex,\n    ...others,\n    ...stackProps,\n    children: [withOverlay && /* @__PURE__ */jsx(DrawerOverlay, {\n      visible: overlayVisible,\n      transitionProps: ctx && stackId ? {\n        duration: 0\n      } : void 0,\n      ...overlayProps\n    }), /* @__PURE__ */jsxs(DrawerContent, {\n      __hidden: ctx && stackId && opened ? stackId !== ctx.currentId : false,\n      children: [hasHeader && /* @__PURE__ */jsxs(DrawerHeader, {\n        children: [title && /* @__PURE__ */jsx(DrawerTitle, {\n          children: title\n        }), withCloseButton && /* @__PURE__ */jsx(DrawerCloseButton, {\n          ...closeButtonProps\n        })]\n      }), /* @__PURE__ */jsx(DrawerBody, {\n        children\n      })]\n    })]\n  });\n});\nDrawer.classes = classes;\nDrawer.displayName = \"@mantine/core/Drawer\";\nDrawer.Root = DrawerRoot;\nDrawer.Overlay = DrawerOverlay;\nDrawer.Content = DrawerContent;\nDrawer.Body = DrawerBody;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.CloseButton = DrawerCloseButton;\nDrawer.Stack = DrawerStack;\nexport { Drawer };","map":{"version":3,"names":["defaultProps","closeOnClickOutside","withinPortal","lockScroll","trapFocus","returnFocus","closeOnEscape","keepMounted","zIndex","getDefaultZIndex","withOverlay","withCloseButton","Drawer","factory","_props","ref","title","overlayProps","closeButtonProps","children","opened","stackId","others","useProps","ctx","useDrawerStackContext","hasHeader","stackProps","currentId","getZIndex","overlayVisible","useEffect","addModal","removeModal","jsxs","DrawerRoot","jsx","DrawerOverlay","visible","transitionProps","duration","DrawerContent","__hidden","DrawerHeader","DrawerTitle","DrawerCloseButton","DrawerBody","classes","displayName","Root","Overlay","Content","Body","Header","Title","CloseButton","Stack","DrawerStack"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Drawer\\Drawer.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { DrawerBody } from './DrawerBody';\nimport { DrawerCloseButton } from './DrawerCloseButton';\nimport { DrawerContent } from './DrawerContent';\nimport { DrawerHeader } from './DrawerHeader';\nimport { DrawerOverlay } from './DrawerOverlay';\nimport {\n  DrawerRoot,\n  DrawerRootCssVariables,\n  DrawerRootProps,\n  DrawerRootStylesNames,\n} from './DrawerRoot';\nimport { DrawerStack, useDrawerStackContext } from './DrawerStack';\nimport { DrawerTitle } from './DrawerTitle';\nimport classes from './Drawer.module.css';\n\nexport type DrawerStylesNames = DrawerRootStylesNames;\nexport type DrawerCssVariables = DrawerRootCssVariables;\n\nexport interface DrawerProps extends DrawerRootProps {\n  /** Drawer title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, can be used to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Drawer content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n\n  /** Id of the drawer in the `Drawer.Stack` */\n  stackId?: string;\n}\n\nexport type DrawerFactory = Factory<{\n  props: DrawerProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerStylesNames;\n  vars: DrawerCssVariables;\n  staticComponents: {\n    Root: typeof DrawerRoot;\n    Overlay: typeof DrawerOverlay;\n    Content: typeof DrawerContent;\n    Body: typeof DrawerBody;\n    Header: typeof DrawerHeader;\n    Title: typeof DrawerTitle;\n    CloseButton: typeof DrawerCloseButton;\n    Stack: typeof DrawerStack;\n  };\n}>;\n\nconst defaultProps: Partial<DrawerProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Drawer = factory<DrawerFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps('Drawer', defaultProps, _props);\n\n  const ctx = useDrawerStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps =\n    ctx && stackId\n      ? {\n          closeOnEscape: ctx.currentId === stackId,\n          trapFocus: ctx.currentId === stackId,\n          zIndex: ctx.getZIndex(stackId),\n        }\n      : {};\n\n  const overlayVisible =\n    withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened\n        ? ctx.addModal(stackId, zIndex || getDefaultZIndex('modal'))\n        : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n\n  return (\n    <DrawerRoot\n      ref={ref}\n      opened={opened}\n      zIndex={ctx && stackId ? ctx.getZIndex(stackId) : zIndex}\n      {...others}\n      {...stackProps}\n    >\n      {withOverlay && (\n        <DrawerOverlay\n          visible={overlayVisible}\n          transitionProps={ctx && stackId ? { duration: 0 } : undefined}\n          {...overlayProps}\n        />\n      )}\n      <DrawerContent __hidden={ctx && stackId && opened ? stackId !== ctx.currentId : false}>\n        {hasHeader && (\n          <DrawerHeader>\n            {title && <DrawerTitle>{title}</DrawerTitle>}\n            {withCloseButton && <DrawerCloseButton {...closeButtonProps} />}\n          </DrawerHeader>\n        )}\n\n        <DrawerBody>{children}</DrawerBody>\n      </DrawerContent>\n    </DrawerRoot>\n  );\n});\n\nDrawer.classes = classes;\nDrawer.displayName = '@mantine/core/Drawer';\nDrawer.Root = DrawerRoot;\nDrawer.Overlay = DrawerOverlay;\nDrawer.Content = DrawerContent;\nDrawer.Body = DrawerBody;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.CloseButton = DrawerCloseButton;\nDrawer.Stack = DrawerStack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}