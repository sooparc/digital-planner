{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ScrollAreaCorner } from './ScrollAreaCorner/ScrollAreaCorner.mjs';\nimport { ScrollAreaRoot } from './ScrollAreaRoot/ScrollAreaRoot.mjs';\nimport { ScrollAreaScrollbar } from './ScrollAreaScrollbar/ScrollAreaScrollbar.mjs';\nimport { ScrollAreaThumb } from './ScrollAreaThumb/ScrollAreaThumb.mjs';\nimport { ScrollAreaViewport } from './ScrollAreaViewport/ScrollAreaViewport.mjs';\nimport classes from './ScrollArea.module.css.mjs';\nconst defaultProps = {\n  scrollHideDelay: 1e3,\n  type: \"hover\",\n  scrollbars: \"xy\"\n};\nconst varsResolver = createVarsResolver((_, {\n  scrollbarSize\n}) => ({\n  root: {\n    \"--scrollarea-scrollbar-size\": rem(scrollbarSize)\n  }\n}));\nconst ScrollArea = factory((_props, ref) => {\n  const props = useProps(\"ScrollArea\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    scrollbarSize,\n    vars,\n    type,\n    scrollHideDelay,\n    viewportProps,\n    viewportRef,\n    onScrollPositionChange,\n    children,\n    offsetScrollbars,\n    scrollbars,\n    onBottomReached,\n    onTopReached,\n    ...others\n  } = props;\n  const [scrollbarHovered, setScrollbarHovered] = useState(false);\n  const getStyles = useStyles({\n    name: \"ScrollArea\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(ScrollAreaRoot, {\n    type: type === \"never\" ? \"always\" : type,\n    scrollHideDelay,\n    ref,\n    scrollbars,\n    ...getStyles(\"root\"),\n    ...others,\n    children: [/* @__PURE__ */jsx(ScrollAreaViewport, {\n      ...viewportProps,\n      ...getStyles(\"viewport\", {\n        style: viewportProps?.style\n      }),\n      ref: viewportRef,\n      \"data-offset-scrollbars\": offsetScrollbars === true ? \"xy\" : offsetScrollbars || void 0,\n      \"data-scrollbars\": scrollbars || void 0,\n      onScroll: e => {\n        viewportProps?.onScroll?.(e);\n        onScrollPositionChange?.({\n          x: e.currentTarget.scrollLeft,\n          y: e.currentTarget.scrollTop\n        });\n        const {\n          scrollTop,\n          scrollHeight,\n          clientHeight\n        } = e.currentTarget;\n        if (scrollTop - (scrollHeight - clientHeight) >= 0) {\n          onBottomReached?.();\n        }\n        if (scrollTop === 0) {\n          onTopReached?.();\n        }\n      },\n      children\n    }), (scrollbars === \"xy\" || scrollbars === \"x\") && /* @__PURE__ */jsx(ScrollAreaScrollbar, {\n      ...getStyles(\"scrollbar\"),\n      orientation: \"horizontal\",\n      \"data-hidden\": type === \"never\" || void 0,\n      forceMount: true,\n      onMouseEnter: () => setScrollbarHovered(true),\n      onMouseLeave: () => setScrollbarHovered(false),\n      children: /* @__PURE__ */jsx(ScrollAreaThumb, {\n        ...getStyles(\"thumb\")\n      })\n    }), (scrollbars === \"xy\" || scrollbars === \"y\") && /* @__PURE__ */jsx(ScrollAreaScrollbar, {\n      ...getStyles(\"scrollbar\"),\n      orientation: \"vertical\",\n      \"data-hidden\": type === \"never\" || void 0,\n      forceMount: true,\n      onMouseEnter: () => setScrollbarHovered(true),\n      onMouseLeave: () => setScrollbarHovered(false),\n      children: /* @__PURE__ */jsx(ScrollAreaThumb, {\n        ...getStyles(\"thumb\")\n      })\n    }), /* @__PURE__ */jsx(ScrollAreaCorner, {\n      ...getStyles(\"corner\"),\n      \"data-hovered\": scrollbarHovered || void 0,\n      \"data-hidden\": type === \"never\" || void 0\n    })]\n  });\n});\nScrollArea.displayName = \"@mantine/core/ScrollArea\";\nconst ScrollAreaAutosize = factory((props, ref) => {\n  const {\n    children,\n    classNames,\n    styles,\n    scrollbarSize,\n    scrollHideDelay,\n    type,\n    dir,\n    offsetScrollbars,\n    viewportRef,\n    onScrollPositionChange,\n    unstyled,\n    variant,\n    viewportProps,\n    scrollbars,\n    style,\n    vars,\n    onBottomReached,\n    onTopReached,\n    ...others\n  } = useProps(\"ScrollAreaAutosize\", defaultProps, props);\n  return /* @__PURE__ */jsx(Box, {\n    ...others,\n    ref,\n    style: [{\n      display: \"flex\",\n      overflow: \"auto\"\n    }, style],\n    children: /* @__PURE__ */jsx(Box, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1\n      },\n      children: /* @__PURE__ */jsx(ScrollArea, {\n        classNames,\n        styles,\n        scrollHideDelay,\n        scrollbarSize,\n        type,\n        dir,\n        offsetScrollbars,\n        viewportRef,\n        onScrollPositionChange,\n        unstyled,\n        variant,\n        viewportProps,\n        vars,\n        scrollbars,\n        onBottomReached,\n        onTopReached,\n        children\n      })\n    })\n  });\n});\nScrollArea.classes = classes;\nScrollAreaAutosize.displayName = \"@mantine/core/ScrollAreaAutosize\";\nScrollAreaAutosize.classes = classes;\nScrollArea.Autosize = ScrollAreaAutosize;\nexport { ScrollArea, ScrollAreaAutosize };","map":{"version":3,"names":["defaultProps","scrollHideDelay","type","scrollbars","varsResolver","createVarsResolver","_","scrollbarSize","root","rem","ScrollArea","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","viewportProps","viewportRef","onScrollPositionChange","children","offsetScrollbars","onBottomReached","onTopReached","others","scrollbarHovered","setScrollbarHovered","useState","getStyles","useStyles","name","classes","jsxs","ScrollAreaRoot","jsx","ScrollAreaViewport","onScroll","e","x","currentTarget","scrollLeft","y","scrollTop","scrollHeight","clientHeight","ScrollAreaScrollbar","orientation","forceMount","onMouseEnter","onMouseLeave","ScrollAreaThumb","ScrollAreaCorner","displayName","ScrollAreaAutosize","dir","variant","Box","display","overflow","flexDirection","flex","Autosize"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollArea.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollAreaCorner } from './ScrollAreaCorner/ScrollAreaCorner';\nimport { ScrollAreaRoot } from './ScrollAreaRoot/ScrollAreaRoot';\nimport { ScrollAreaScrollbar } from './ScrollAreaScrollbar/ScrollAreaScrollbar';\nimport { ScrollAreaThumb } from './ScrollAreaThumb/ScrollAreaThumb';\nimport { ScrollAreaViewport } from './ScrollAreaViewport/ScrollAreaViewport';\nimport classes from './ScrollArea.module.css';\n\nexport type ScrollAreaStylesNames = 'root' | 'viewport' | 'scrollbar' | 'thumb' | 'corner';\nexport type ScrollAreaCssVariables = {\n  root: '--scrollarea-scrollbar-size';\n};\n\nexport interface ScrollAreaProps\n  extends BoxProps,\n    StylesApiProps<ScrollAreaFactory>,\n    ElementProps<'div'> {\n  /** Scrollbar size, any valid CSS value for width/height, numbers are converted to rem, default value is 0.75rem */\n  scrollbarSize?: number | string;\n\n  /**\n   * Defines scrollbars behavior, `hover` by default\n   * - `hover` – scrollbars are visible when mouse is over the scroll area\n   * - `scroll` – scrollbars are visible when the scroll area is scrolled\n   * - `always` – scrollbars are always visible\n   * - `never` – scrollbars are always hidden\n   * - `auto` – similar to `overflow: auto` – scrollbars are always visible when the content is overflowing\n   * */\n  type?: 'auto' | 'always' | 'scroll' | 'hover' | 'never';\n\n  /** Scroll hide delay in ms, applicable only when type is set to `hover` or `scroll`, `1000` by default */\n  scrollHideDelay?: number;\n\n  /** Axis at which scrollbars must be rendered, `'xy'` by default */\n  scrollbars?: 'x' | 'y' | 'xy' | false;\n\n  /** Determines whether scrollbars should be offset with padding on given axis, `false` by default */\n  offsetScrollbars?: boolean | 'x' | 'y';\n\n  /** Assigns viewport element (scrollable container) ref */\n  viewportRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Props passed down to the viewport element */\n  viewportProps?: React.ComponentPropsWithRef<'div'>;\n\n  /** Called with current position (`x` and `y` coordinates) when viewport is scrolled */\n  onScrollPositionChange?: (position: { x: number; y: number }) => void;\n\n  /** Called when scrollarea is scrolled all the way to the bottom */\n  onBottomReached?: () => void;\n\n  /** Called when scrollarea is scrolled all the way to the top */\n  onTopReached?: () => void;\n}\n\nexport interface ScrollAreaAutosizeProps extends ScrollAreaProps {}\n\nexport type ScrollAreaFactory = Factory<{\n  props: ScrollAreaProps;\n  ref: HTMLDivElement;\n  stylesNames: ScrollAreaStylesNames;\n  vars: ScrollAreaCssVariables;\n  staticComponents: {\n    Autosize: typeof ScrollAreaAutosize;\n  };\n}>;\n\nconst defaultProps: Partial<ScrollAreaProps> = {\n  scrollHideDelay: 1000,\n  type: 'hover',\n  scrollbars: 'xy',\n};\n\nconst varsResolver = createVarsResolver<ScrollAreaFactory>((_, { scrollbarSize }) => ({\n  root: {\n    '--scrollarea-scrollbar-size': rem(scrollbarSize),\n  },\n}));\n\nexport const ScrollArea = factory<ScrollAreaFactory>((_props, ref) => {\n  const props = useProps('ScrollArea', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    scrollbarSize,\n    vars,\n    type,\n    scrollHideDelay,\n    viewportProps,\n    viewportRef,\n    onScrollPositionChange,\n    children,\n    offsetScrollbars,\n    scrollbars,\n    onBottomReached,\n    onTopReached,\n    ...others\n  } = props;\n\n  const [scrollbarHovered, setScrollbarHovered] = useState(false);\n\n  const getStyles = useStyles<ScrollAreaFactory>({\n    name: 'ScrollArea',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ScrollAreaRoot\n      type={type === 'never' ? 'always' : type}\n      scrollHideDelay={scrollHideDelay}\n      ref={ref}\n      scrollbars={scrollbars}\n      {...getStyles('root')}\n      {...others}\n    >\n      <ScrollAreaViewport\n        {...viewportProps}\n        {...getStyles('viewport', { style: viewportProps?.style })}\n        ref={viewportRef}\n        data-offset-scrollbars={offsetScrollbars === true ? 'xy' : offsetScrollbars || undefined}\n        data-scrollbars={scrollbars || undefined}\n        onScroll={(e) => {\n          viewportProps?.onScroll?.(e);\n          onScrollPositionChange?.({ x: e.currentTarget.scrollLeft, y: e.currentTarget.scrollTop });\n          const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n          if (scrollTop - (scrollHeight - clientHeight) >= 0) {\n            onBottomReached?.();\n          }\n          if (scrollTop === 0) {\n            onTopReached?.();\n          }\n        }}\n      >\n        {children}\n      </ScrollAreaViewport>\n\n      {(scrollbars === 'xy' || scrollbars === 'x') && (\n        <ScrollAreaScrollbar\n          {...getStyles('scrollbar')}\n          orientation=\"horizontal\"\n          data-hidden={type === 'never' || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles('thumb')} />\n        </ScrollAreaScrollbar>\n      )}\n\n      {(scrollbars === 'xy' || scrollbars === 'y') && (\n        <ScrollAreaScrollbar\n          {...getStyles('scrollbar')}\n          orientation=\"vertical\"\n          data-hidden={type === 'never' || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles('thumb')} />\n        </ScrollAreaScrollbar>\n      )}\n\n      <ScrollAreaCorner\n        {...getStyles('corner')}\n        data-hovered={scrollbarHovered || undefined}\n        data-hidden={type === 'never' || undefined}\n      />\n    </ScrollAreaRoot>\n  );\n});\n\nScrollArea.displayName = '@mantine/core/ScrollArea';\n\nexport const ScrollAreaAutosize = factory<ScrollAreaFactory>((props, ref) => {\n  const {\n    children,\n    classNames,\n    styles,\n    scrollbarSize,\n    scrollHideDelay,\n    type,\n    dir,\n    offsetScrollbars,\n    viewportRef,\n    onScrollPositionChange,\n    unstyled,\n    variant,\n    viewportProps,\n    scrollbars,\n    style,\n    vars,\n    onBottomReached,\n    onTopReached,\n    ...others\n  } = useProps('ScrollAreaAutosize', defaultProps, props);\n\n  return (\n    <Box {...others} ref={ref} style={[{ display: 'flex', overflow: 'auto' }, style]}>\n      <Box style={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n        <ScrollArea\n          classNames={classNames}\n          styles={styles}\n          scrollHideDelay={scrollHideDelay}\n          scrollbarSize={scrollbarSize}\n          type={type}\n          dir={dir}\n          offsetScrollbars={offsetScrollbars}\n          viewportRef={viewportRef}\n          onScrollPositionChange={onScrollPositionChange}\n          unstyled={unstyled}\n          variant={variant}\n          viewportProps={viewportProps}\n          vars={vars}\n          scrollbars={scrollbars}\n          onBottomReached={onBottomReached}\n          onTopReached={onTopReached}\n        >\n          {children}\n        </ScrollArea>\n      </Box>\n    </Box>\n  );\n});\n\nScrollArea.classes = classes;\nScrollAreaAutosize.displayName = '@mantine/core/ScrollAreaAutosize';\nScrollAreaAutosize.classes = classes;\nScrollArea.Autosize = ScrollAreaAutosize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}