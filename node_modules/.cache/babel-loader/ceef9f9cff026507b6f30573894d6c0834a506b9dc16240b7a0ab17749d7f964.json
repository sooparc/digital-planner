{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { clamp } from '../utils/clamp/clamp.mjs';\nfunction radiansToDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\nfunction getElementCenter(element) {\n  const rect = element.getBoundingClientRect();\n  return [rect.left + rect.width / 2, rect.top + rect.height / 2];\n}\nfunction getAngle(coordinates, element) {\n  const center = getElementCenter(element);\n  const x = coordinates[0] - center[0];\n  const y = coordinates[1] - center[1];\n  const deg = radiansToDegrees(Math.atan2(x, y)) + 180;\n  return 360 - deg;\n}\nfunction toFixed(value, digits) {\n  return parseFloat(value.toFixed(digits));\n}\nfunction getDigitsAfterDot(value) {\n  return value.toString().split(\".\")[1]?.length || 0;\n}\nfunction normalizeRadialValue(degree, step) {\n  const clamped = clamp(degree, 0, 360);\n  const high = Math.ceil(clamped / step);\n  const low = Math.round(clamped / step);\n  return toFixed(high >= clamped / step ? high * step === 360 ? 0 : high * step : low * step, getDigitsAfterDot(step));\n}\nfunction useRadialMove(onChange, {\n  step = 0.01,\n  onChangeEnd,\n  onScrubStart,\n  onScrubEnd\n} = {}) {\n  const ref = useRef(null);\n  const mounted = useRef(false);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n  useEffect(() => {\n    const node = ref.current;\n    const update = (event, done = false) => {\n      if (node) {\n        node.style.userSelect = \"none\";\n        const deg = getAngle([event.clientX, event.clientY], node);\n        const newValue = normalizeRadialValue(deg, step || 1);\n        onChange(newValue);\n        done && onChangeEnd?.(newValue);\n      }\n    };\n    const beginTracking = () => {\n      onScrubStart?.();\n      setActive(true);\n      document.addEventListener(\"mousemove\", handleMouseMove, false);\n      document.addEventListener(\"mouseup\", handleMouseUp, false);\n      document.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: false\n      });\n      document.addEventListener(\"touchend\", handleTouchEnd, false);\n    };\n    const endTracking = () => {\n      onScrubEnd?.();\n      setActive(false);\n      document.removeEventListener(\"mousemove\", handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n      document.removeEventListener(\"touchmove\", handleTouchMove, false);\n      document.removeEventListener(\"touchend\", handleTouchEnd, false);\n    };\n    const onMouseDown = event => {\n      beginTracking();\n      update(event);\n    };\n    const handleMouseMove = event => {\n      update(event);\n    };\n    const handleMouseUp = event => {\n      update(event, true);\n      endTracking();\n    };\n    const handleTouchMove = event => {\n      event.preventDefault();\n      update(event.touches[0]);\n    };\n    const handleTouchEnd = event => {\n      update(event.changedTouches[0], true);\n      endTracking();\n    };\n    const handleTouchStart = event => {\n      event.preventDefault();\n      beginTracking();\n      update(event.touches[0]);\n    };\n    node?.addEventListener(\"mousedown\", onMouseDown);\n    node?.addEventListener(\"touchstart\", handleTouchStart, {\n      passive: false\n    });\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mousedown\", onMouseDown);\n        node.removeEventListener(\"touchstart\", handleTouchStart);\n      }\n    };\n  }, [onChange]);\n  return {\n    ref,\n    active\n  };\n}\nexport { normalizeRadialValue, useRadialMove };","map":{"version":3,"names":["radiansToDegrees","radians","Math","PI","getElementCenter","element","rect","getBoundingClientRect","left","width","top","height","getAngle","coordinates","center","x","y","deg","atan2","toFixed","value","digits","parseFloat","getDigitsAfterDot","toString","split","length","normalizeRadialValue","degree","step","clamped","clamp","high","ceil","low","round","useRadialMove","onChange","onChangeEnd","onScrubStart","onScrubEnd","ref","useRef","mounted","active","setActive","useState","useEffect","current","node","update","event","done","style","userSelect","clientX","clientY","newValue","beginTracking","document","addEventListener","handleMouseMove","handleMouseUp","handleTouchMove","passive","handleTouchEnd","endTracking","removeEventListener","onMouseDown","preventDefault","touches","changedTouches","handleTouchStart"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\hooks\\src\\use-radial-move\\use-radial-move.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { clamp } from '../utils';\n\nfunction radiansToDegrees(radians: number) {\n  return radians * (180 / Math.PI);\n}\n\nfunction getElementCenter(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n  return [rect.left + rect.width / 2, rect.top + rect.height / 2];\n}\n\nfunction getAngle(coordinates: [number, number], element: HTMLElement) {\n  const center = getElementCenter(element);\n  const x = coordinates[0] - center[0];\n  const y = coordinates[1] - center[1];\n  const deg = radiansToDegrees(Math.atan2(x, y)) + 180;\n  return 360 - deg;\n}\n\nfunction toFixed(value: number, digits: number) {\n  return parseFloat(value.toFixed(digits));\n}\n\nfunction getDigitsAfterDot(value: number) {\n  return value.toString().split('.')[1]?.length || 0;\n}\n\nexport function normalizeRadialValue(degree: number, step: number) {\n  const clamped = clamp(degree, 0, 360);\n  const high = Math.ceil(clamped / step);\n  const low = Math.round(clamped / step);\n  return toFixed(\n    high >= clamped / step ? (high * step === 360 ? 0 : high * step) : low * step,\n    getDigitsAfterDot(step)\n  );\n}\n\nexport interface UseRadialMoveOptions {\n  /** Number by which value is incremented/decremented with mouse and touch events, `0.01` by default */\n  step?: number;\n\n  /** Called in `onMouseUp` and `onTouchEnd` events with the current value */\n  onChangeEnd?: (value: number) => void;\n\n  /** Called in `onMouseDown` and `onTouchStart` events */\n  onScrubStart?: () => void;\n\n  /** Called in `onMouseUp` and `onTouchEnd` events */\n  onScrubEnd?: () => void;\n}\n\nexport function useRadialMove<T extends HTMLElement = any>(\n  onChange: (value: number) => void,\n  { step = 0.01, onChangeEnd, onScrubStart, onScrubEnd }: UseRadialMoveOptions = {}\n) {\n  const ref = useRef<T>(null);\n  const mounted = useRef<boolean>(false);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  useEffect(() => {\n    const node = ref.current;\n\n    const update = (event: MouseEvent, done = false) => {\n      if (node) {\n        node.style.userSelect = 'none';\n        const deg = getAngle([event.clientX, event.clientY], node);\n        const newValue = normalizeRadialValue(deg, step || 1);\n\n        onChange(newValue);\n        done && onChangeEnd?.(newValue);\n      }\n    };\n\n    const beginTracking = () => {\n      onScrubStart?.();\n      setActive(true);\n      document.addEventListener('mousemove', handleMouseMove, false);\n      document.addEventListener('mouseup', handleMouseUp, false);\n      document.addEventListener('touchmove', handleTouchMove, { passive: false });\n      document.addEventListener('touchend', handleTouchEnd, false);\n    };\n\n    const endTracking = () => {\n      onScrubEnd?.();\n      setActive(false);\n      document.removeEventListener('mousemove', handleMouseMove, false);\n      document.removeEventListener('mouseup', handleMouseUp, false);\n      document.removeEventListener('touchmove', handleTouchMove, false);\n      document.removeEventListener('touchend', handleTouchEnd, false);\n    };\n\n    const onMouseDown = (event: MouseEvent) => {\n      beginTracking();\n      update(event);\n    };\n\n    const handleMouseMove = (event: MouseEvent) => {\n      update(event);\n    };\n\n    const handleMouseUp = (event: MouseEvent) => {\n      update(event, true);\n      endTracking();\n    };\n\n    const handleTouchMove = (event: TouchEvent) => {\n      event.preventDefault();\n      update(event.touches[0] as any);\n    };\n\n    const handleTouchEnd = (event: TouchEvent) => {\n      update(event.changedTouches[0] as any, true);\n      endTracking();\n    };\n\n    const handleTouchStart = (event: TouchEvent) => {\n      event.preventDefault();\n      beginTracking();\n      update(event.touches[0] as any);\n    };\n\n    node?.addEventListener('mousedown', onMouseDown);\n    node?.addEventListener('touchstart', handleTouchStart, { passive: false });\n\n    return () => {\n      if (node) {\n        node.removeEventListener('mousedown', onMouseDown);\n        node.removeEventListener('touchstart', handleTouchStart);\n      }\n    };\n  }, [onChange]);\n\n  return { ref, active };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}