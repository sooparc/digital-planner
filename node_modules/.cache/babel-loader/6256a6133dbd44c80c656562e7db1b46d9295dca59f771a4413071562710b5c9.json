{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { isScrollingWithinScrollbarBounds } from '../utils/is-scrolling-within-scrollbar-bounds.mjs';\nimport { getThumbSize } from '../utils/get-thumb-size.mjs';\nimport { toInt } from '../utils/to-int.mjs';\nimport { Scrollbar } from './Scrollbar.mjs';\nconst ScrollAreaScrollbarY = forwardRef((props, forwardedRef) => {\n  const {\n    sizes,\n    onSizesChange,\n    style,\n    ...others\n  } = props;\n  const context = useScrollAreaContext();\n  const [computedStyle, setComputedStyle] = useState();\n  const ref = useRef(null);\n  const composeRefs = useMergedRef(forwardedRef, ref, context.onScrollbarYChange);\n  useEffect(() => {\n    if (ref.current) {\n      setComputedStyle(window.getComputedStyle(ref.current));\n    }\n  }, []);\n  return /* @__PURE__ */jsx(Scrollbar, {\n    ...others,\n    \"data-orientation\": \"vertical\",\n    ref: composeRefs,\n    sizes,\n    style: {\n      [\"--sa-thumb-height\"]: `${getThumbSize(sizes)}px`,\n      ...style\n    },\n    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.y),\n    onDragScroll: pointerPos => props.onDragScroll(pointerPos.y),\n    onWheelScroll: (event, maxScrollPos) => {\n      if (context.viewport) {\n        const scrollPos = context.viewport.scrollTop + event.deltaY;\n        props.onWheelScroll(scrollPos);\n        if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n          event.preventDefault();\n        }\n      }\n    },\n    onResize: () => {\n      if (ref.current && context.viewport && computedStyle) {\n        onSizesChange({\n          content: context.viewport.scrollHeight,\n          viewport: context.viewport.offsetHeight,\n          scrollbar: {\n            size: ref.current.clientHeight,\n            paddingStart: toInt(computedStyle.paddingTop),\n            paddingEnd: toInt(computedStyle.paddingBottom)\n          }\n        });\n      }\n    }\n  });\n});\nScrollAreaScrollbarY.displayName = \"@mantine/core/ScrollAreaScrollbarY\";\nexport { ScrollAreaScrollbarY };","map":{"version":3,"names":["ScrollAreaScrollbarY","forwardRef","props","forwardedRef","sizes","onSizesChange","style","others","context","useScrollAreaContext","computedStyle","setComputedStyle","useState","ref","useRef","composeRefs","useMergedRef","onScrollbarYChange","useEffect","current","window","getComputedStyle","jsx","Scrollbar","getThumbSize","onThumbPointerDown","pointerPos","y","onDragScroll","onWheelScroll","event","maxScrollPos","viewport","scrollPos","scrollTop","deltaY","isScrollingWithinScrollbarBounds","preventDefault","onResize","content","scrollHeight","offsetHeight","scrollbar","size","clientHeight","paddingStart","toInt","paddingTop","paddingEnd","paddingBottom","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\ScrollArea\\ScrollAreaScrollbar\\ScrollbarY.tsx"],"sourcesContent":["import { forwardRef, useEffect, useRef, useState } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAxisProps } from '../ScrollArea.types';\nimport { getThumbSize, isScrollingWithinScrollbarBounds, toInt } from '../utils';\nimport { Scrollbar } from './Scrollbar';\n\nexport const ScrollAreaScrollbarY = forwardRef<HTMLDivElement, ScrollAreaScrollbarAxisProps>(\n  (props, forwardedRef) => {\n    const { sizes, onSizesChange, style, ...others } = props;\n    const context = useScrollAreaContext();\n    const [computedStyle, setComputedStyle] = useState<CSSStyleDeclaration>();\n    const ref = useRef<HTMLDivElement>(null);\n    const composeRefs = useMergedRef(forwardedRef, ref, context.onScrollbarYChange);\n\n    useEffect(() => {\n      if (ref.current) {\n        setComputedStyle(window.getComputedStyle(ref.current));\n      }\n    }, []);\n\n    return (\n      <Scrollbar\n        {...others}\n        data-orientation=\"vertical\"\n        ref={composeRefs}\n        sizes={sizes}\n        style={{\n          ['--sa-thumb-height' as any]: `${getThumbSize(sizes)}px`,\n          ...style,\n        }}\n        onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n        onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n        onWheelScroll={(event, maxScrollPos) => {\n          if (context.viewport) {\n            const scrollPos = context.viewport.scrollTop + event.deltaY;\n            props.onWheelScroll(scrollPos);\n            if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n              event.preventDefault();\n            }\n          }\n        }}\n        onResize={() => {\n          if (ref.current && context.viewport && computedStyle) {\n            onSizesChange({\n              content: context.viewport.scrollHeight,\n              viewport: context.viewport.offsetHeight,\n              scrollbar: {\n                size: ref.current.clientHeight,\n                paddingStart: toInt(computedStyle.paddingTop),\n                paddingEnd: toInt(computedStyle.paddingBottom),\n              },\n            });\n          }\n        }}\n      />\n    );\n  }\n);\n\nScrollAreaScrollbarY.displayName = '@mantine/core/ScrollAreaScrollbarY';\n"],"mappings":";;;;;;;;;;AAOO,MAAMA,oBAAuB,GAAAC,UAAA,CAClC,CAACC,KAAA,EAAOC,YAAiB;EACvB,MAAM;IAAEC,KAAO;IAAAC,aAAA;IAAeC,KAAO;IAAA,GAAGC;EAAW,IAAAL,KAAA;EACnD,MAAMM,OAAA,GAAUC,oBAAqB;EACrC,MAAM,CAACC,aAAA,EAAeC,gBAAgB,IAAIC,QAA8B;EAClE,MAAAC,GAAA,GAAMC,MAAA,CAAuB,IAAI;EACvC,MAAMC,WAAc,GAAAC,YAAA,CAAab,YAAc,EAAAU,GAAA,EAAKL,OAAA,CAAQS,kBAAkB;EAE9EC,SAAA,CAAU,MAAM;IACd,IAAIL,GAAA,CAAIM,OAAS;MACfR,gBAAA,CAAiBS,MAAO,CAAAC,gBAAA,CAAiBR,GAAI,CAAAM,OAAO,CAAC;IAAA;EAEzD,GAAG,EAAE;EAGH,sBAAAG,GAAA,CAACC,SAAA;IACE,GAAGhB,MAAA;IACJ,kBAAiB;IACjBM,GAAK,EAAAE,WAAA;IACLX,KAAA;IACAE,KAAO;MACL,CAAC,mBAA0B,GAAG,GAAGkB,YAAA,CAAapB,KAAK,CAAC;MACpD,GAAGE;IACL;IACAmB,kBAAA,EAAqBC,UAAA,IAAexB,KAAM,CAAAuB,kBAAA,CAAmBC,UAAA,CAAWC,CAAC;IACzEC,YAAA,EAAeF,UAAA,IAAexB,KAAM,CAAA0B,YAAA,CAAaF,UAAA,CAAWC,CAAC;IAC7DE,aAAA,EAAeA,CAACC,KAAA,EAAOC,YAAiB;MACtC,IAAIvB,OAAA,CAAQwB,QAAU;QACpB,MAAMC,SAAY,GAAAzB,OAAA,CAAQwB,QAAS,CAAAE,SAAA,GAAYJ,KAAM,CAAAK,MAAA;QACrDjC,KAAA,CAAM2B,aAAA,CAAcI,SAAS;QACzB,IAAAG,gCAAA,CAAiCH,SAAW,EAAAF,YAAY,CAAG;UAC7DD,KAAA,CAAMO,cAAe;QAAA;MACvB;IAEJ;IACAC,QAAA,EAAUA,CAAA,KAAM;MACd,IAAIzB,GAAI,CAAAM,OAAA,IAAWX,OAAQ,CAAAwB,QAAA,IAAYtB,aAAe;QACtCL,aAAA;UACZkC,OAAA,EAAS/B,OAAA,CAAQwB,QAAS,CAAAQ,YAAA;UAC1BR,QAAA,EAAUxB,OAAA,CAAQwB,QAAS,CAAAS,YAAA;UAC3BC,SAAW;YACTC,IAAA,EAAM9B,GAAA,CAAIM,OAAQ,CAAAyB,YAAA;YAClBC,YAAA,EAAcC,KAAM,CAAApC,aAAA,CAAcqC,UAAU;YAC5CC,UAAA,EAAYF,KAAM,CAAApC,aAAA,CAAcuC,aAAa;UAAA;QAC/C,CACD;MAAA;IACH;EACF,CACF;AAAA,CAGN;AAEAjD,oBAAA,CAAqBkD,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}