{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children.mjs';\nimport classes from './Group.module.css.mjs';\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: \"md\",\n  align: \"center\",\n  justify: \"flex-start\",\n  wrap: \"wrap\"\n};\nconst varsResolver = createVarsResolver((_, {\n  grow,\n  preventGrowOverflow,\n  gap,\n  align,\n  justify,\n  wrap\n}, {\n  childWidth\n}) => ({\n  root: {\n    \"--group-child-width\": grow && preventGrowOverflow ? childWidth : void 0,\n    \"--group-gap\": getSpacing(gap),\n    \"--group-align\": align,\n    \"--group-justify\": justify,\n    \"--group-wrap\": wrap\n  }\n}));\nconst Group = factory((_props, ref) => {\n  const props = useProps(\"Group\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    ...others\n  } = props;\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? \"md\");\n  const childWidth = `calc(${100 / childrenCount}% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n  const stylesCtx = {\n    childWidth\n  };\n  const getStyles = useStyles({\n    name: \"Group\",\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ...getStyles(\"root\"),\n    ref,\n    variant,\n    mod: [{\n      grow\n    }, mod],\n    size: __size,\n    ...others,\n    children: filteredChildren\n  });\n});\nGroup.classes = classes;\nGroup.displayName = \"@mantine/core/Group\";\nexport { Group };","map":{"version":3,"names":["defaultProps","preventGrowOverflow","gap","align","justify","wrap","varsResolver","createVarsResolver","_","grow","childWidth","root","getSpacing","Group","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","children","vars","variant","__size","mod","others","filteredChildren","filterFalsyChildren","childrenCount","length","resolvedGap","stylesCtx","getStyles","useStyles","name","classes","jsx","Box","size","displayName"],"sources":["C:\\Users\\Soojin Park\\Desktop\\digital-planner\\node_modules\\@mantine\\core\\src\\components\\Group\\Group.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children';\nimport classes from './Group.module.css';\n\nexport type GroupStylesNames = 'root';\nexport type GroupCssVariables = {\n  root:\n    | '--group-gap'\n    | '--group-align'\n    | '--group-justify'\n    | '--group-wrap'\n    | '--group-child-width';\n};\n\nexport interface GroupStylesCtx {\n  childWidth: string;\n}\n\nexport interface GroupProps extends BoxProps, StylesApiProps<GroupFactory>, ElementProps<'div'> {\n  __size?: any;\n\n  /** Controls `justify-content` CSS property, `'flex-start'` by default */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Controls `align-items` CSS property, `'center'` by default */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `flex-wrap` CSS property, `'wrap'` by default */\n  wrap?: React.CSSProperties['flexWrap'];\n\n  /** Key of `theme.spacing` or any valid CSS value for `gap`, numbers are converted to rem, `'md'` by default */\n  gap?: MantineSpacing;\n\n  /** Determines whether each child element should have `flex-grow: 1` style, `false` by default */\n  grow?: boolean;\n\n  /** Determines whether children should take only dedicated amount of space (`max-width` style is set based on the number of children), `true` by default */\n  preventGrowOverflow?: boolean;\n}\n\nexport type GroupFactory = Factory<{\n  props: GroupProps;\n  ref: HTMLDivElement;\n  stylesNames: GroupStylesNames;\n  vars: GroupCssVariables;\n  ctx: GroupStylesCtx;\n}>;\n\nconst defaultProps: Partial<GroupProps> = {\n  preventGrowOverflow: true,\n  gap: 'md',\n  align: 'center',\n  justify: 'flex-start',\n  wrap: 'wrap',\n};\n\nconst varsResolver = createVarsResolver<GroupFactory>(\n  (_, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({\n    root: {\n      '--group-child-width': grow && preventGrowOverflow ? childWidth : undefined,\n      '--group-gap': getSpacing(gap),\n      '--group-align': align,\n      '--group-justify': justify,\n      '--group-wrap': wrap,\n    },\n  })\n);\n\nexport const Group = factory<GroupFactory>((_props, ref) => {\n  const props = useProps('Group', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    ...others\n  } = props;\n\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? 'md');\n  const childWidth = `calc(${\n    100 / childrenCount\n  }% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n\n  const stylesCtx: GroupStylesCtx = { childWidth };\n\n  const getStyles = useStyles<GroupFactory>({\n    name: 'Group',\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      variant={variant}\n      mod={[{ grow }, mod]}\n      size={__size}\n      {...others}\n    >\n      {filteredChildren}\n    </Box>\n  );\n});\n\nGroup.classes = classes;\nGroup.displayName = '@mantine/core/Group';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA4DA,MAAMA,YAAoC;EACxCC,mBAAqB;EACrBC,GAAK;EACLC,KAAO;EACPC,OAAS;EACTC,IAAM;AACR;AAEA,MAAMC,YAAe,GAAAC,kBAAA,CACnB,CAACC,CAAA,EAAG;EAAEC,IAAA;EAAMR,mBAAqB;EAAAC,GAAA;EAAKC,KAAO;EAAAC,OAAA;EAASC;AAAK,GAAG;EAAEK;AAAA,CAAkB;EAChFC,IAAM;IACJ,uBAAuBF,IAAQ,IAAAR,mBAAA,GAAsBS,UAAa;IAClE,eAAeE,UAAA,CAAWV,GAAG;IAC7B,eAAiB,EAAAC,KAAA;IACjB,iBAAmB,EAAAC,OAAA;IACnB,cAAgB,EAAAC;EAAA;AAEpB,EACF;AAEO,MAAMQ,KAAQ,GAAAC,OAAA,CAAsB,CAACC,MAAA,EAAQC,GAAQ;EAC1D,MAAMC,KAAQ,GAAAC,QAAA,CAAS,OAAS,EAAAlB,YAAA,EAAce,MAAM;EAC9C;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;IACAtB,GAAA;IACAC,KAAA;IACAC,OAAA;IACAC,IAAA;IACAI,IAAA;IACAR,mBAAA;IACAwB,IAAA;IACAC,OAAA;IACAC,MAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACD,GAAAZ,KAAA;EAEE,MAAAa,gBAAA,GAAmBC,mBAAA,CAAoBP,QAAQ;EACrD,MAAMQ,aAAA,GAAgBF,gBAAiB,CAAAG,MAAA;EACjC,MAAAC,WAAA,GAActB,UAAW,CAAAV,GAAA,IAAO,IAAI;EACpC,MAAAQ,UAAA,GAAa,QACjB,GAAM,GAAAsB,aACR,QAAQE,WAAW,MAAMA,WAAW,MAAMF,aAAa;EAEjD,MAAAG,SAAA,GAA4B;IAAEzB;EAAW;EAE/C,MAAM0B,SAAA,GAAYC,SAAwB;IACxCC,IAAM;IACNrB,KAAA;IACAkB,SAAA;IACAf,SAAA;IACAC,KAAA;IACAkB,OAAA;IACApB,UAAA;IACAG,MAAA;IACAC,QAAA;IACAE,IAAA;IACAnB;EAAA,CACD;EAGC,sBAAAkC,GAAA,CAACC,GAAA;IACE,GAAGL,SAAA,CAAU,MAAM;IACpBpB,GAAA;IACAU,OAAA;IACAE,GAAK,GAAC;MAAEnB;IAAA,GAAQmB,GAAG;IACnBc,IAAM,EAAAf,MAAA;IACL,GAAGE,MAAA;IAEHL,QAAA,EAAAM;EAAA,CACH;AAEJ,CAAC;AAEDjB,KAAA,CAAM0B,OAAU,GAAAA,OAAA;AAChB1B,KAAA,CAAM8B,WAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}